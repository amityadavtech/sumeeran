{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        // Salon Brand Colors\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        gold: \"var(--gold)\",\n        \"bg-light\": \"var(--bg-light)\",\n        \"text-dark\": \"var(--text-dark)\",\n        \n        // Base Theme Colors\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n        poppins: ['Poppins', 'sans-serif'],\n        playfair: ['Playfair Display', 'serif'],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n        fadeIn: {\n          '0%': {\n            opacity: '0',\n            transform: 'translateY(30px)',\n          },\n          '100%': {\n            opacity: '1',\n            transform: 'translateY(0)',\n          },\n        },\n        float: {\n          '0%, 100%': {\n            transform: 'translateY(0px)',\n          },\n          '50%': {\n            transform: 'translateY(-10px)',\n          },\n        },\n        shimmer: {\n          '0%': {\n            backgroundPosition: '-468px 0',\n          },\n          '100%': {\n            backgroundPosition: '468px 0',\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n        fadeIn: \"fadeIn 0.6s ease-out\",\n        float: \"float 3s ease-in-out infinite\",\n        shimmer: \"shimmer 2s infinite\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":3756},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n          await import(\"@replit/vite-plugin-dev-banner\").then((m) =>\n            m.devBanner(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":1080},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\n\ndeclare module 'http' {\n  interface IncomingMessage {\n    rawBody: unknown\n  }\n}\napp.use(express.json({\n  verify: (req, _res, buf) => {\n    req.rawBody = buf;\n  }\n}));\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2210},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // put application routes here\n  // prefix all routes with /api\n\n  // use storage to perform CRUD operations on the storage interface\n  // e.g. storage.insertUser(user) or storage.getUserByUsername(username)\n\n  const httpServer = createServer(app);\n\n  return httpServer;\n}\n","size_bytes":473},"server/storage.ts":{"content":"import { type User, type InsertUser } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\n// modify the interface with any CRUD methods\n// you might need\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n\n  constructor() {\n    this.users = new Map();\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":993},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, timestamp, boolean, integer } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const bookings = pgTable(\"bookings\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  email: text(\"email\").notNull(),\n  phone: text(\"phone\").notNull(),\n  service: text(\"service\").notNull(),\n  date: text(\"date\").notNull(),\n  time: text(\"time\").notNull(),\n  message: text(\"message\"),\n  status: text(\"status\").notNull().default(\"pending\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const contacts = pgTable(\"contacts\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  email: text(\"email\").notNull(),\n  phone: text(\"phone\"),\n  subject: text(\"subject\").notNull(),\n  message: text(\"message\").notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const newsletters = pgTable(\"newsletters\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  email: text(\"email\").notNull().unique(),\n  subscribed: boolean(\"subscribed\").notNull().default(true),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport const insertBookingSchema = createInsertSchema(bookings).pick({\n  name: true,\n  email: true,\n  phone: true,\n  service: true,\n  date: true,\n  time: true,\n  message: true,\n}).extend({\n  email: z.string().email(\"Invalid email address\"),\n  phone: z.string().min(10, \"Phone number must be at least 10 digits\"),\n  name: z.string().min(2, \"Name must be at least 2 characters\"),\n  service: z.string().min(1, \"Please select a service\"),\n  date: z.string().min(1, \"Please select a date\"),\n  time: z.string().min(1, \"Please select a time\"),\n});\n\nexport const insertContactSchema = createInsertSchema(contacts).pick({\n  name: true,\n  email: true,\n  phone: true,\n  subject: true,\n  message: true,\n}).extend({\n  email: z.string().email(\"Invalid email address\"),\n  name: z.string().min(2, \"Name must be at least 2 characters\"),\n  subject: z.string().min(1, \"Subject is required\"),\n  message: z.string().min(10, \"Message must be at least 10 characters\"),\n});\n\nexport const insertNewsletterSchema = createInsertSchema(newsletters).pick({\n  email: true,\n}).extend({\n  email: z.string().email(\"Invalid email address\"),\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\nexport type InsertBooking = z.infer<typeof insertBookingSchema>;\nexport type Booking = typeof bookings.$inferSelect;\nexport type InsertContact = z.infer<typeof insertContactSchema>;\nexport type Contact = typeof contacts.$inferSelect;\nexport type InsertNewsletter = z.infer<typeof insertNewsletterSchema>;\nexport type Newsletter = typeof newsletters.$inferSelect;\n","size_bytes":3153},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { useEffect, useState } from \"react\";\n\n// Layout Components\nimport Navbar from \"./components/layout/Navbar\";\nimport Footer from \"./components/layout/Footer\";\nimport FloatingActions from \"./components/ui/FloatingActions\";\nimport Preloader from \"./components/ui/Preloader\";\n\n// Pages\nimport Home from \"./pages/Home\";\nimport About from \"./pages/About\";\nimport Services from \"./pages/Services\";\nimport Hair from \"./pages/services/Hair\";\nimport Skin from \"./pages/services/Skin\";\nimport Nails from \"./pages/services/Nails\";\nimport Makeup from \"./pages/services/Makeup\";\nimport Spa from \"./pages/services/Spa\";\nimport Bridal from \"./pages/services/Bridal\";\nimport Gallery from \"./pages/Gallery\";\nimport Pricing from \"./pages/Pricing\";\nimport Booking from \"./pages/Booking\";\nimport Contact from \"./pages/Contact\";\nimport NotFound from \"@/pages/not-found\";\n\n// Scroll Progress Bar Component\nfunction ScrollProgress() {\n  useEffect(() => {\n    const updateProgress = () => {\n      const windowHeight = document.documentElement.scrollHeight - document.documentElement.clientHeight;\n      const scrolled = (window.scrollY / windowHeight) * 100;\n      const progressBar = document.getElementById('scroll-progress');\n      if (progressBar) {\n        progressBar.style.width = scrolled + '%';\n      }\n    };\n\n    window.addEventListener('scroll', updateProgress);\n    return () => window.removeEventListener('scroll', updateProgress);\n  }, []);\n\n  return <div id=\"scroll-progress\" className=\"scroll-progress\" />;\n}\n\nfunction Router() {\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <ScrollProgress />\n      <Navbar />\n      <main>\n        <Switch>\n          <Route path=\"/\" component={Home} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/services\" component={Services} />\n          <Route path=\"/services/hair\" component={Hair} />\n          <Route path=\"/services/skin\" component={Skin} />\n          <Route path=\"/services/nails\" component={Nails} />\n          <Route path=\"/services/makeup\" component={Makeup} />\n          <Route path=\"/services/spa\" component={Spa} />\n          <Route path=\"/services/bridal\" component={Bridal} />\n          <Route path=\"/gallery\" component={Gallery} />\n          <Route path=\"/pricing\" component={Pricing} />\n          <Route path=\"/booking\" component={Booking} />\n          <Route path=\"/contact\" component={Contact} />\n          <Route component={NotFound} />\n        </Switch>\n      </main>\n      <Footer />\n      <FloatingActions />\n    </div>\n  );\n}\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const timer = setTimeout(() => setIsLoading(false), 2000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  if (isLoading) {\n    return <Preloader />;\n  }\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":3251},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;500;600;700;800&family=Poppins:wght@300;400;500;600;700&display=swap');\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  /* Salon Brand Colors */\n  --primary: hsl(313, 52%, 40%);\n  --secondary: hsl(287, 97%, 23%);\n  --accent: hsl(348, 87%, 65%);\n  --gold: hsl(45, 76%, 53%);\n  --bg-light: hsl(0, 0%, 95%);\n  --text-dark: hsl(0, 0%, 10%);\n  \n  /* Base Theme Colors */\n  --background: hsl(0, 0%, 95%);\n  --foreground: hsl(0, 0%, 10%);\n  --card: hsl(0, 0%, 100%);\n  --card-foreground: hsl(0, 0%, 10%);\n  --popover: hsl(0, 0%, 100%);\n  --popover-foreground: hsl(0, 0%, 10%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary-foreground: hsl(0, 0%, 100%);\n  --muted: hsl(210, 40%, 96%);\n  --muted-foreground: hsl(215.4, 16.3%, 46.9%);\n  --border: hsl(214.3, 31.8%, 91.4%);\n  --input: hsl(214.3, 31.8%, 91.4%);\n  --ring: hsl(313, 52%, 40%);\n  --destructive: hsl(0, 84.2%, 60.2%);\n  --destructive-foreground: hsl(0, 0%, 98%);\n  --radius: 0.75rem;\n}\n\n.dark {\n  --background: hsl(222.2, 84%, 4.9%);\n  --foreground: hsl(210, 40%, 98%);\n  --card: hsl(222.2, 84%, 4.9%);\n  --card-foreground: hsl(210, 40%, 98%);\n  --popover: hsl(222.2, 84%, 4.9%);\n  --popover-foreground: hsl(210, 40%, 98%);\n  --primary: hsl(313, 52%, 40%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(217.2, 32.6%, 17.5%);\n  --secondary-foreground: hsl(210, 40%, 98%);\n  --muted: hsl(217.2, 32.6%, 17.5%);\n  --muted-foreground: hsl(215, 20.2%, 65.1%);\n  --accent: hsl(217.2, 32.6%, 17.5%);\n  --accent-foreground: hsl(210, 40%, 98%);\n  --destructive: hsl(0, 62.8%, 30.6%);\n  --destructive-foreground: hsl(210, 40%, 98%);\n  --border: hsl(217.2, 32.6%, 17.5%);\n  --input: hsl(217.2, 32.6%, 17.5%);\n  --ring: hsl(313, 52%, 40%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n  body {\n    @apply bg-background text-foreground font-poppins;\n  }\n  h1, h2, h3, h4, h5, h6 {\n    @apply font-playfair;\n  }\n}\n\n/* Custom animations */\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes float {\n  0%, 100% {\n    transform: translateY(0px);\n  }\n  50% {\n    transform: translateY(-10px);\n  }\n}\n\n@keyframes shimmer {\n  0% {\n    background-position: -468px 0;\n  }\n  100% {\n    background-position: 468px 0;\n  }\n}\n\n.animate-fadeIn {\n  animation: fadeIn 0.6s ease-out;\n}\n\n.animate-float {\n  animation: float 3s ease-in-out infinite;\n}\n\n.shimmer {\n  background: linear-gradient(to right, transparent 0%, rgba(255, 255, 255, 0.4) 50%, transparent 100%);\n  background-size: 468px 100%;\n  animation: shimmer 2s infinite;\n}\n\n/* Button gradient effects */\n.btn-gradient {\n  @apply bg-gradient-to-r from-primary to-secondary text-white font-semibold py-3 px-6 rounded-full transition-all duration-300 hover:shadow-xl relative overflow-hidden;\n}\n\n.btn-gradient::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(135deg, var(--gold) 0%, var(--primary) 100%);\n  transition: left 0.5s ease;\n  z-index: 0;\n}\n\n.btn-gradient:hover::before {\n  left: 0;\n}\n\n.btn-gradient > * {\n  position: relative;\n  z-index: 1;\n}\n\n/* Scroll progress bar */\n.scroll-progress {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 0%;\n  height: 4px;\n  background: linear-gradient(90deg, var(--gold) 0%, var(--primary) 100%);\n  z-index: 9998;\n  transition: width 0.1s ease;\n}\n\n/* Image zoom effects */\n.img-zoom-container {\n  overflow: hidden;\n}\n\n.img-zoom {\n  transition: transform 0.6s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.img-zoom-container:hover .img-zoom {\n  transform: scale(1.15);\n}\n\n/* Service card hover effects */\n.service-card {\n  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.service-card:hover {\n  transform: translateY(-12px);\n  box-shadow: 0 20px 40px rgba(166, 55, 127, 0.3);\n}\n\n/* Gold border hover */\n.gold-border-hover {\n  position: relative;\n  transition: all 0.3s ease;\n}\n\n.gold-border-hover::after {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  border: 3px solid var(--gold);\n  opacity: 0;\n  transition: opacity 0.3s ease;\n  pointer-events: none;\n}\n\n.gold-border-hover:hover::after {\n  opacity: 1;\n}\n\n/* Masonry grid for gallery */\n.masonry-grid {\n  column-count: 3;\n  column-gap: 1.5rem;\n}\n\n.masonry-item {\n  break-inside: avoid;\n  margin-bottom: 1.5rem;\n}\n\n@media (max-width: 1024px) {\n  .masonry-grid {\n    column-count: 2;\n  }\n}\n\n@media (max-width: 640px) {\n  .masonry-grid {\n    column-count: 1;\n  }\n}\n\n/* Navbar scroll effect */\n.navbar-scrolled {\n  background: rgba(255, 255, 255, 0.98);\n  backdrop-filter: blur(10px);\n  box-shadow: 0 2px 20px rgba(0, 0, 0, 0.1);\n}\n\n/* Hero gradient overlay */\n.hero-gradient {\n  background: linear-gradient(135deg, rgba(81, 2, 115, 0.85) 0%, rgba(166, 55, 127, 0.75) 100%);\n}\n\n/* Parallax effect */\n.parallax {\n  background-attachment: fixed;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n\n/* Custom scrollbar */\n::-webkit-scrollbar {\n  width: 8px;\n}\n\n::-webkit-scrollbar-track {\n  background: #f1f1f1;\n}\n\n::-webkit-scrollbar-thumb {\n  background: var(--primary);\n  border-radius: 4px;\n}\n\n::-webkit-scrollbar-thumb:hover {\n  background: var(--secondary);\n}\n\n/* Loading spinner */\n.spinner {\n  width: 40px;\n  height: 40px;\n  border: 4px solid #f3f3f3;\n  border-top: 4px solid var(--primary);\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n","size_bytes":5615},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/data/gallery.ts":{"content":"export const galleryImages = [\n  {\n    id: 1,\n    src: 'https://images.unsplash.com/photo-1519741497674-611481863552?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n    alt: 'Stunning bridal makeup with intricate details and elegant styling',\n    category: 'bridal',\n    title: 'Bridal Elegance',\n  },\n  {\n    id: 2,\n    src: 'https://images.unsplash.com/photo-1604654894610-df63bc536371?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=1000',\n    alt: 'Professional nail art design with intricate patterns',\n    category: 'nails',\n    title: 'Artistic Nails',\n  },\n  {\n    id: 3,\n    src: 'https://images.unsplash.com/photo-1562322140-8baeececf3df?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=800',\n    alt: 'Beautiful hair coloring transformation with balayage technique',\n    category: 'hair',\n    title: 'Hair Color Magic',\n  },\n  {\n    id: 4,\n    src: 'https://images.unsplash.com/photo-1540555700478-4be289fbecef?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n    alt: 'Luxurious spa treatment room with ambient lighting',\n    category: 'spa',\n    title: 'Spa Sanctuary',\n  },\n  {\n    id: 5,\n    src: 'https://images.unsplash.com/photo-1516975080664-ed2fc6a32937?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=1000',\n    alt: 'Professional makeup artist workspace with premium products',\n    category: 'makeup',\n    title: 'Makeup Artistry',\n  },\n  {\n    id: 6,\n    src: 'https://images.unsplash.com/photo-1570172619644-dfd03ed5d881?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=800',\n    alt: 'Elegant facial treatment being performed',\n    category: 'skin',\n    title: 'Skin Radiance',\n  },\n  {\n    id: 7,\n    src: 'https://images.unsplash.com/photo-1487412947147-5cebf100ffc2?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=1200',\n    alt: 'Glamorous evening makeup look',\n    category: 'makeup',\n    title: 'Evening Glam',\n  },\n  {\n    id: 8,\n    src: 'https://images.unsplash.com/photo-1632345031435-8727f6897d53?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n    alt: 'Intricate nail art with geometric patterns',\n    category: 'nails',\n    title: 'Geometric Nails',\n  },\n  {\n    id: 9,\n    src: 'https://images.unsplash.com/photo-1580618672591-eb180b1a973f?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=1000',\n    alt: 'Professional hair styling session',\n    category: 'hair',\n    title: 'Hair Styling',\n  },\n  {\n    id: 10,\n    src: 'https://images.unsplash.com/photo-1544161515-4ab6ce6db874?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=800',\n    alt: 'Relaxing aromatherapy spa treatment',\n    category: 'spa',\n    title: 'Aromatherapy',\n  },\n  {\n    id: 11,\n    src: 'https://images.unsplash.com/photo-1515377905703-c4788e51af15?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n    alt: 'Glowing skin after facial treatment',\n    category: 'skin',\n    title: 'Glowing Results',\n  },\n  {\n    id: 12,\n    src: 'https://images.unsplash.com/photo-1586297135537-5296812d4c08?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=1200',\n    alt: 'Beautiful mehendi bridal look',\n    category: 'bridal',\n    title: 'Mehendi Glam',\n  },\n];\n\nexport const galleryCategories = [\n  { id: 'all', label: 'All' },\n  { id: 'bridal', label: 'Bridal' },\n  { id: 'hair', label: 'Hair' },\n  { id: 'skin', label: 'Skin' },\n  { id: 'nails', label: 'Nails' },\n  { id: 'makeup', label: 'Makeup' },\n  { id: 'spa', label: 'Spa' },\n];\n","size_bytes":3306},"client/src/data/services.ts":{"content":"import { Scissors, Sparkles, HandHeart, Paintbrush, Leaf, Crown } from 'lucide-react';\n\nexport const mainServices = [\n  {\n    id: 'hair',\n    title: 'Hair Services',\n    description: 'From precision cuts to vibrant colors, hair spa to keratin treatments - transform your hair with our expert stylists.',\n    image: 'https://images.unsplash.com/photo-1562322140-8baeececf3df?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n    icon: Scissors,\n    href: '/services/hair',\n    iconColor: 'bg-primary/10 text-primary',\n    category: 'hair',\n  },\n  {\n    id: 'skin',\n    title: 'Skin Treatments',\n    description: 'Rejuvenate your skin with advanced facials, laser therapy, and customized skincare solutions for radiant glow.',\n    image: 'https://images.unsplash.com/photo-1570172619644-dfd03ed5d881?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n    icon: Sparkles,\n    href: '/services/skin',\n    iconColor: 'bg-secondary/10 text-secondary',\n    category: 'skin',\n  },\n  {\n    id: 'nails',\n    title: 'Nail Care',\n    description: 'Exquisite nail art, manicures, pedicures, and extensions - perfection at your fingertips with premium hygiene.',\n    image: 'https://images.unsplash.com/photo-1604654894610-df63bc536371?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n    icon: HandHeart,\n    href: '/services/nails',\n    iconColor: 'bg-accent/10 text-accent',\n    category: 'nails',\n  },\n  {\n    id: 'makeup',\n    title: 'Makeup & Beauty',\n    description: 'From bridal to party makeup, our artists create stunning looks that make you the center of attention.',\n    image: 'https://images.unsplash.com/photo-1487412947147-5cebf100ffc2?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n    icon: Paintbrush,\n    href: '/services/makeup',\n    iconColor: 'bg-gold/10 text-gold',\n    category: 'makeup',\n  },\n  {\n    id: 'spa',\n    title: 'Spa & Relaxation',\n    description: 'Unwind with therapeutic massages, aromatherapy, and holistic spa treatments in our tranquil sanctuary.',\n    image: 'https://images.unsplash.com/photo-1544161515-4ab6ce6db874?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n    icon: Leaf,\n    href: '/services/spa',\n    iconColor: 'bg-primary/10 text-primary',\n    category: 'spa',\n  },\n  {\n    id: 'bridal',\n    title: 'Bridal Packages',\n    description: 'Comprehensive pre-bridal and bridal services to make your special day absolutely unforgettable.',\n    image: 'https://images.unsplash.com/photo-1519741497674-611481863552?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n    icon: Crown,\n    href: '/services/bridal',\n    iconColor: 'bg-secondary/10 text-secondary',\n    category: 'bridal',\n  },\n];\n\nexport const pricingPlans = [\n  {\n    id: 'basic',\n    title: 'Basic',\n    price: 2999,\n    period: '/month',\n    description: 'Perfect for trying out our premium services',\n    features: [\n      { text: 'Basic Hair Cut & Style', included: true },\n      { text: 'Express Facial', included: true },\n      { text: 'Basic Manicure', included: true },\n      { text: '10% Off on Products', included: true },\n      { text: 'Hair Spa Treatment', included: false },\n      { text: 'Advanced Skincare', included: false },\n    ],\n    popular: false,\n    buttonText: 'Get Started',\n  },\n  {\n    id: 'classic',\n    title: 'Classic',\n    price: 4999,\n    period: '/month',\n    description: 'Most popular choice for regular beauty care',\n    features: [\n      { text: 'Premium Hair Services', included: true },\n      { text: 'Advanced Facial', included: true },\n      { text: 'Nail Art & Extensions', included: true },\n      { text: '15% Off on Products', included: true },\n      { text: 'Hair Spa Treatment', included: true },\n      { text: 'Body Massage', included: false },\n    ],\n    popular: false,\n    buttonText: 'Choose Classic',\n  },\n  {\n    id: 'elite',\n    title: 'Elite',\n    price: 7999,\n    period: '/month',\n    description: 'Premium experience with exclusive benefits',\n    features: [\n      { text: 'All Classic Services', included: true },\n      { text: 'Hair Spa & Keratin', included: true },\n      { text: 'Full Body Massage', included: true },\n      { text: '20% Off on Products', included: true },\n      { text: 'Priority Booking', included: true },\n      { text: 'Complimentary Consultation', included: true },\n    ],\n    popular: true,\n    buttonText: 'Go Elite',\n  },\n  {\n    id: 'royal',\n    title: 'Royal',\n    price: 12999,\n    period: '/month',\n    description: 'Ultimate luxury experience with VIP treatment',\n    features: [\n      { text: 'VIP Treatment Access', included: true },\n      { text: 'Personal Beauty Consultant', included: true },\n      { text: 'Unlimited Spa Access', included: true },\n      { text: '30% Off on Everything', included: true },\n      { text: 'Home Service Available', included: true },\n      { text: 'Exclusive Events Invitation', included: true },\n    ],\n    popular: false,\n    buttonText: 'Live Royal',\n  },\n];\n\nexport const serviceCategories = [\n  { id: 'all', label: 'All Services', count: mainServices.length },\n  { id: 'hair', label: 'Hair', count: 1 },\n  { id: 'skin', label: 'Skin', count: 1 },\n  { id: 'nails', label: 'Nails', count: 1 },\n  { id: 'makeup', label: 'Makeup', count: 1 },\n  { id: 'spa', label: 'Spa', count: 1 },\n  { id: 'bridal', label: 'Bridal', count: 1 },\n];\n","size_bytes":5267},"client/src/data/testimonials.ts":{"content":"export const testimonials = [\n  {\n    id: 1,\n    name: 'Priya Sharma',\n    service: 'Bridal Package Client',\n    text: 'Absolutely phenomenal experience! The bridal package exceeded all my expectations. The team made me feel like royalty, and I\\'ve never looked more beautiful. Every detail was perfection!',\n    image: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?ixlib=rb-4.0.3&auto=format&fit=crop&w=150&h=150',\n    rating: 5,\n  },\n  {\n    id: 2,\n    name: 'Ananya Verma',\n    service: 'Hair Services Client',\n    text: 'The hair transformation I received was beyond amazing! My hair has never been healthier or looked better. The keratin treatment was a game-changer. Highly recommend!',\n    image: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-4.0.3&auto=format&fit=crop&w=150&h=150',\n    rating: 5,\n  },\n  {\n    id: 3,\n    name: 'Meera Reddy',\n    service: 'Spa Services Client',\n    text: 'The spa experience was absolutely divine! I left feeling completely refreshed and rejuvenated. The ambiance, the service, everything was perfect. My go-to place for relaxation!',\n    image: 'https://images.unsplash.com/photo-1573496359142-b8d87734a5a2?ixlib=rb-4.0.3&auto=format&fit=crop&w=150&h=150',\n    rating: 5,\n  },\n  {\n    id: 4,\n    name: 'Kavya Patel',\n    service: 'Makeup Artist Client',\n    text: 'The makeup for my anniversary party was flawless! The artist understood exactly what I wanted and delivered beyond my expectations. I felt like a movie star!',\n    image: 'https://images.unsplash.com/photo-1580489944761-15a19d654956?ixlib=rb-4.0.3&auto=format&fit=crop&w=150&h=150',\n    rating: 5,\n  },\n  {\n    id: 5,\n    name: 'Shreya Gupta',\n    service: 'Nail Care Client',\n    text: 'The nail art designs are incredible! The attention to detail and hygiene standards are unmatched. My nails have never looked better. Definitely coming back!',\n    image: 'https://images.unsplash.com/photo-1544005313-94ddf0286df2?ixlib=rb-4.0.3&auto=format&fit=crop&w=150&h=150',\n    rating: 5,\n  },\n];\n","size_bytes":2039},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/animations.ts":{"content":"// Animation variants for Framer Motion\nexport const fadeInUp = {\n  initial: { opacity: 0, y: 60 },\n  animate: { opacity: 1, y: 0 },\n  transition: { duration: 0.6, ease: 'easeOut' }\n};\n\nexport const fadeInDown = {\n  initial: { opacity: 0, y: -60 },\n  animate: { opacity: 1, y: 0 },\n  transition: { duration: 0.6, ease: 'easeOut' }\n};\n\nexport const fadeInLeft = {\n  initial: { opacity: 0, x: -60 },\n  animate: { opacity: 1, x: 0 },\n  transition: { duration: 0.6, ease: 'easeOut' }\n};\n\nexport const fadeInRight = {\n  initial: { opacity: 0, x: 60 },\n  animate: { opacity: 1, x: 0 },\n  transition: { duration: 0.6, ease: 'easeOut' }\n};\n\nexport const scaleIn = {\n  initial: { opacity: 0, scale: 0.8 },\n  animate: { opacity: 1, scale: 1 },\n  transition: { duration: 0.5, ease: 'easeOut' }\n};\n\nexport const slideInUp = {\n  initial: { y: '100%' },\n  animate: { y: 0 },\n  exit: { y: '100%' },\n  transition: { duration: 0.3, ease: 'easeInOut' }\n};\n\n// Stagger animations for lists\nexport const staggerContainer = {\n  initial: {},\n  animate: {\n    transition: {\n      staggerChildren: 0.1,\n      delayChildren: 0.3,\n    },\n  },\n};\n\nexport const staggerItem = {\n  initial: { opacity: 0, y: 20 },\n  animate: {\n    opacity: 1,\n    y: 0,\n    transition: {\n      duration: 0.5,\n      ease: 'easeOut',\n    },\n  },\n};\n\n// Page transition animations\nexport const pageTransition = {\n  initial: { opacity: 0 },\n  animate: { opacity: 1 },\n  exit: { opacity: 0 },\n  transition: { duration: 0.3 }\n};\n\n// Hover animations\nexport const hoverScale = {\n  whileHover: { scale: 1.05 },\n  whileTap: { scale: 0.95 },\n  transition: { duration: 0.2 }\n};\n\nexport const hoverLift = {\n  whileHover: { y: -8, boxShadow: '0 20px 40px rgba(0,0,0,0.1)' },\n  transition: { duration: 0.3 }\n};\n\n// Button animations\nexport const buttonVariants = {\n  initial: { scale: 1 },\n  hover: { \n    scale: 1.05,\n    transition: { duration: 0.2, ease: 'easeOut' }\n  },\n  tap: { \n    scale: 0.95,\n    transition: { duration: 0.1 }\n  }\n};\n\n// Counter animation utility\nexport const animateCounter = (\n  target: number,\n  duration: number = 2000,\n  onUpdate: (value: number) => void\n) => {\n  const startTime = performance.now();\n  \n  const updateCounter = (currentTime: number) => {\n    const elapsedTime = currentTime - startTime;\n    const progress = Math.min(elapsedTime / duration, 1);\n    \n    // Easing function for smooth animation\n    const easeOutCubic = 1 - Math.pow(1 - progress, 3);\n    const currentValue = Math.floor(easeOutCubic * target);\n    \n    onUpdate(currentValue);\n    \n    if (progress < 1) {\n      requestAnimationFrame(updateCounter);\n    } else {\n      onUpdate(target);\n    }\n  };\n  \n  requestAnimationFrame(updateCounter);\n};\n\n// Intersection Observer utility for scroll animations\nexport const createScrollObserver = (\n  callback: (entries: IntersectionObserverEntry[]) => void,\n  options: IntersectionObserverInit = {}\n) => {\n  const defaultOptions: IntersectionObserverInit = {\n    threshold: 0.1,\n    rootMargin: '-50px 0px',\n    ...options\n  };\n  \n  return new IntersectionObserver(callback, defaultOptions);\n};\n\n// Smooth scroll utility\nexport const smoothScroll = (targetId: string, offset: number = 80) => {\n  const element = document.getElementById(targetId);\n  if (element) {\n    const elementPosition = element.getBoundingClientRect().top;\n    const offsetPosition = elementPosition + window.pageYOffset - offset;\n    \n    window.scrollTo({\n      top: offsetPosition,\n      behavior: 'smooth'\n    });\n  }\n};\n\n// Parallax scroll utility\nexport const calculateParallax = (scrollY: number, rate: number = 0.5) => {\n  return scrollY * rate;\n};\n\n// Loading animation variants\nexport const spinnerVariants = {\n  animate: {\n    rotate: 360,\n    transition: {\n      duration: 1,\n      repeat: Infinity,\n      ease: 'linear'\n    }\n  }\n};\n\nexport const pulseVariants = {\n  animate: {\n    scale: [1, 1.2, 1],\n    transition: {\n      duration: 2,\n      repeat: Infinity,\n      ease: 'easeInOut'\n    }\n  }\n};\n","size_bytes":3978},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/About.tsx":{"content":"import { Users, Award, Heart, Target } from 'lucide-react';\nimport ScrollReveal from '@/components/ui/ScrollReveal';\n\nconst About = () => {\n  const timeline = [\n    {\n      year: '2009',\n      title: 'The Beginning',\n      description: 'Luxe Beauty was founded with a vision to bring world-class beauty services to discerning clients.',\n    },\n    {\n      year: '2012',\n      title: 'Expansion',\n      description: 'Expanded our services to include advanced spa treatments and wellness therapies.',\n    },\n    {\n      year: '2015',\n      title: 'Recognition',\n      description: 'Received our first industry award for excellence in beauty services.',\n    },\n    {\n      year: '2018',\n      title: 'Innovation',\n      description: 'Introduced cutting-edge technology and international treatment methods.',\n    },\n    {\n      year: '2021',\n      title: 'Premium Facility',\n      description: 'Renovated our facility to create the ultimate luxury beauty destination.',\n    },\n    {\n      year: '2024',\n      title: 'Present Day',\n      description: 'Continuing to set new standards in beauty excellence with over 50,000 satisfied clients.',\n    },\n  ];\n\n  const team = [\n    {\n      name: 'Priya Sharma',\n      role: 'Founder & Creative Director',\n      image: 'https://images.unsplash.com/photo-1594824474011-7bb8bbc325e2?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400',\n      bio: '15+ years of experience in luxury beauty services',\n    },\n    {\n      name: 'Rajesh Kumar',\n      role: 'Senior Hair Stylist',\n      image: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400',\n      bio: 'International training from London and Paris',\n    },\n    {\n      name: 'Anita Verma',\n      role: 'Spa & Wellness Director',\n      image: 'https://images.unsplash.com/photo-1580489944761-15a19d654956?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400',\n      bio: 'Certified in advanced aromatherapy and wellness',\n    },\n    {\n      name: 'Meera Reddy',\n      role: 'Makeup Artist',\n      image: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400',\n      bio: 'Celebrity makeup artist with 10+ years experience',\n    },\n  ];\n\n  const values = [\n    {\n      icon: Heart,\n      title: 'Passion for Beauty',\n      description: 'We are passionate about helping our clients look and feel their absolute best.',\n    },\n    {\n      icon: Award,\n      title: 'Excellence Always',\n      description: 'We maintain the highest standards in everything we do, from service to hygiene.',\n    },\n    {\n      icon: Users,\n      title: 'Client-Centered',\n      description: 'Every treatment is personalized to meet your unique needs and preferences.',\n    },\n    {\n      icon: Target,\n      title: 'Innovation Focus',\n      description: 'We continuously adopt the latest techniques and technologies in beauty care.',\n    },\n  ];\n\n  return (\n    <div className=\"min-h-screen pt-20\" data-testid=\"about-page\">\n      {/* Hero Section */}\n      <section \n        className=\"relative py-32 flex items-center justify-center overflow-hidden parallax\"\n        style={{\n          backgroundImage: 'url(https://images.unsplash.com/photo-1633681926022-84c23e8cb2d6?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&h=1080)'\n        }}\n        data-testid=\"about-hero\"\n      >\n        <div className=\"hero-gradient absolute inset-0\"></div>\n        <div className=\"relative z-10 text-center text-white px-4 max-w-4xl mx-auto\">\n          <ScrollReveal>\n            <span className=\"inline-block px-6 py-2 bg-gold/20 backdrop-blur-sm border border-gold/30 rounded-full text-gold font-semibold text-sm tracking-wider mb-6\">\n              ABOUT LUXE BEAUTY\n            </span>\n            <h1 className=\"text-5xl md:text-6xl font-playfair font-bold mb-6\" data-testid=\"about-hero-title\">\n              Our Story, Your Beauty\n            </h1>\n            <p className=\"text-xl text-gray-100 max-w-2xl mx-auto\" data-testid=\"about-hero-description\">\n              Discover the journey behind Mumbai's most prestigious beauty destination\n            </p>\n          </ScrollReveal>\n        </div>\n      </section>\n\n      {/* Story Section */}\n      <section className=\"py-24 bg-white\" data-testid=\"story-section\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid lg:grid-cols-2 gap-16 items-center\">\n            <ScrollReveal>\n              <div>\n                <span className=\"text-primary font-semibold text-sm tracking-wider uppercase mb-4 block\">\n                  Our Journey\n                </span>\n                <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-8 text-text-dark\" data-testid=\"story-title\">\n                  15 Years of Beauty Excellence\n                </h2>\n                <div className=\"space-y-6 text-gray-600 leading-relaxed\">\n                  <p data-testid=\"story-paragraph-1\">\n                    Founded in 2009, Luxe Beauty began as a small salon with a big dream - to create a space where beauty meets luxury, where every client feels like royalty. What started as a vision by founder Priya Sharma has grown into Mumbai's most sought-after beauty destination.\n                  </p>\n                  <p data-testid=\"story-paragraph-2\">\n                    Over the years, we've served more than 50,000 clients, each leaving our salon not just looking beautiful, but feeling confident and empowered. Our commitment to excellence has earned us recognition from beauty industry leaders and countless testimonials from satisfied clients.\n                  </p>\n                  <p data-testid=\"story-paragraph-3\">\n                    Today, Luxe Beauty stands as a testament to what passion, dedication, and unwavering commitment to quality can achieve. We continue to evolve, adopting the latest techniques and technologies while staying true to our core values of luxury, comfort, and exceptional service.\n                  </p>\n                </div>\n              </div>\n            </ScrollReveal>\n\n            <ScrollReveal delay={200}>\n              <div className=\"grid grid-cols-2 gap-6\">\n                <div className=\"space-y-6\">\n                  <div className=\"img-zoom-container rounded-2xl overflow-hidden\">\n                    <img \n                      src=\"https://images.unsplash.com/photo-1560066984-138dadb4c035?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400\" \n                      alt=\"Salon interior\"\n                      className=\"img-zoom w-full h-48 object-cover\"\n                    />\n                  </div>\n                  <div className=\"img-zoom-container rounded-2xl overflow-hidden\">\n                    <img \n                      src=\"https://images.unsplash.com/photo-1487412947147-5cebf100ffc2?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400\" \n                      alt=\"Beauty treatment\"\n                      className=\"img-zoom w-full h-64 object-cover\"\n                    />\n                  </div>\n                </div>\n                <div className=\"space-y-6 pt-12\">\n                  <div className=\"img-zoom-container rounded-2xl overflow-hidden\">\n                    <img \n                      src=\"https://images.unsplash.com/photo-1516975080664-ed2fc6a32937?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400\" \n                      alt=\"Beauty products\"\n                      className=\"img-zoom w-full h-64 object-cover\"\n                    />\n                  </div>\n                  <div className=\"img-zoom-container rounded-2xl overflow-hidden\">\n                    <img \n                      src=\"https://images.unsplash.com/photo-1522337360788-8b13dee7a37e?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400\" \n                      alt=\"Team working\"\n                      className=\"img-zoom w-full h-48 object-cover\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </ScrollReveal>\n          </div>\n        </div>\n      </section>\n\n      {/* Timeline Section */}\n      <section className=\"py-24 bg-bg-light\" data-testid=\"timeline-section\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <ScrollReveal>\n            <div className=\"text-center mb-16\">\n              <span className=\"text-primary font-semibold text-sm tracking-wider uppercase mb-4 block\">\n                Our Journey\n              </span>\n              <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6 text-text-dark\" data-testid=\"timeline-title\">\n                Milestones & Achievements\n              </h2>\n              <p className=\"text-gray-600 text-lg max-w-3xl mx-auto\" data-testid=\"timeline-description\">\n                A timeline of our growth, achievements, and commitment to excellence\n              </p>\n            </div>\n          </ScrollReveal>\n\n          <div className=\"relative\">\n            <div className=\"absolute left-1/2 transform -translate-x-1/2 h-full w-1 bg-primary\"></div>\n            \n            <div className=\"space-y-12\">\n              {timeline.map((item, index) => (\n                <ScrollReveal key={item.year} delay={index * 100}>\n                  <div \n                    className={`relative flex items-center ${\n                      index % 2 === 0 ? 'justify-start' : 'justify-end'\n                    }`}\n                    data-testid={`timeline-item-${index}`}\n                  >\n                    <div className={`w-5/12 ${index % 2 === 0 ? 'pr-8 text-right' : 'pl-8 text-left'}`}>\n                      <div className=\"bg-white rounded-2xl p-6 shadow-lg\">\n                        <div \n                          className=\"text-2xl font-bold text-primary mb-2\"\n                          data-testid={`timeline-year-${index}`}\n                        >\n                          {item.year}\n                        </div>\n                        <h3 \n                          className=\"text-xl font-playfair font-bold mb-3 text-text-dark\"\n                          data-testid={`timeline-title-${index}`}\n                        >\n                          {item.title}\n                        </h3>\n                        <p \n                          className=\"text-gray-600 leading-relaxed\"\n                          data-testid={`timeline-description-${index}`}\n                        >\n                          {item.description}\n                        </p>\n                      </div>\n                    </div>\n                    \n                    <div className=\"absolute left-1/2 transform -translate-x-1/2 w-4 h-4 bg-gold rounded-full border-4 border-white shadow-lg\"></div>\n                  </div>\n                </ScrollReveal>\n              ))}\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Team Section */}\n      <section className=\"py-24 bg-white\" data-testid=\"team-section\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <ScrollReveal>\n            <div className=\"text-center mb-16\">\n              <span className=\"text-primary font-semibold text-sm tracking-wider uppercase mb-4 block\">\n                Meet Our Team\n              </span>\n              <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6 text-text-dark\" data-testid=\"team-title\">\n                Expert Beauty Professionals\n              </h2>\n              <p className=\"text-gray-600 text-lg max-w-3xl mx-auto\" data-testid=\"team-description\">\n                Our talented team of beauty experts brings years of experience and passion to every service\n              </p>\n            </div>\n          </ScrollReveal>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {team.map((member, index) => (\n              <ScrollReveal key={member.name} delay={index * 100}>\n                <div \n                  className=\"bg-bg-light rounded-2xl p-6 text-center group hover:shadow-xl transition-all duration-300\"\n                  data-testid={`team-member-${index}`}\n                >\n                  <div className=\"img-zoom-container rounded-full overflow-hidden w-32 h-32 mx-auto mb-6\">\n                    <img \n                      src={member.image} \n                      alt={member.name}\n                      className=\"img-zoom w-full h-full object-cover\"\n                      data-testid={`team-image-${index}`}\n                    />\n                  </div>\n                  <h3 \n                    className=\"text-xl font-playfair font-bold mb-2 text-text-dark\"\n                    data-testid={`team-name-${index}`}\n                  >\n                    {member.name}\n                  </h3>\n                  <p \n                    className=\"text-primary font-semibold mb-3\"\n                    data-testid={`team-role-${index}`}\n                  >\n                    {member.role}\n                  </p>\n                  <p \n                    className=\"text-gray-600 text-sm\"\n                    data-testid={`team-bio-${index}`}\n                  >\n                    {member.bio}\n                  </p>\n                </div>\n              </ScrollReveal>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Values Section */}\n      <section className=\"py-24 bg-secondary text-white relative overflow-hidden\" data-testid=\"values-section\">\n        <div className=\"absolute top-0 right-0 w-96 h-96 bg-primary/20 rounded-full blur-3xl\"></div>\n        <div className=\"absolute bottom-0 left-0 w-96 h-96 bg-gold/20 rounded-full blur-3xl\"></div>\n\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10\">\n          <ScrollReveal>\n            <div className=\"text-center mb-16\">\n              <span className=\"text-gold font-semibold text-sm tracking-wider uppercase mb-4 block\">\n                Our Values\n              </span>\n              <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6\" data-testid=\"values-title\">\n                What Drives Us\n              </h2>\n              <p className=\"text-gray-200 text-lg max-w-3xl mx-auto\" data-testid=\"values-description\">\n                The core principles that guide everything we do at Luxe Beauty\n              </p>\n            </div>\n          </ScrollReveal>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {values.map((value, index) => (\n              <ScrollReveal key={value.title} delay={index * 100}>\n                <div className=\"text-center\" data-testid={`value-${index}`}>\n                  <div className=\"w-20 h-20 bg-gold/20 rounded-full flex items-center justify-center mx-auto mb-6\">\n                    <value.icon className=\"text-gold text-3xl\" />\n                  </div>\n                  <h3 \n                    className=\"text-xl font-playfair font-bold mb-3\"\n                    data-testid={`value-title-${index}`}\n                  >\n                    {value.title}\n                  </h3>\n                  <p \n                    className=\"text-gray-300 leading-relaxed\"\n                    data-testid={`value-description-${index}`}\n                  >\n                    {value.description}\n                  </p>\n                </div>\n              </ScrollReveal>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Quote Section */}\n      <section \n        className=\"py-32 relative overflow-hidden parallax\"\n        style={{\n          backgroundImage: 'url(https://images.unsplash.com/photo-1540555700478-4be289fbecef?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&h=1080)'\n        }}\n        data-testid=\"quote-section\"\n      >\n        <div className=\"hero-gradient absolute inset-0\"></div>\n        <div className=\"relative z-10 text-center text-white px-4 max-w-4xl mx-auto\">\n          <ScrollReveal>\n            <blockquote className=\"text-3xl md:text-4xl font-playfair italic mb-8\" data-testid=\"quote-text\">\n              \"Beauty is not just about looking good, it's about feeling confident, empowered, and absolutely radiant. That's the experience we create for every client who walks through our doors.\"\n            </blockquote>\n            <cite className=\"text-gold font-semibold text-lg\" data-testid=\"quote-author\">\n              - Priya Sharma, Founder & Creative Director\n            </cite>\n          </ScrollReveal>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default About;\n","size_bytes":16397},"client/src/pages/Booking.tsx":{"content":"import { useState } from 'react';\nimport { Calendar, Clock, User, Phone, Mail, MessageCircle, CheckCircle2, ArrowLeft, ArrowRight } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Label } from '@/components/ui/label';\nimport { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';\nimport ScrollReveal from '@/components/ui/ScrollReveal';\nimport { mainServices } from '../data/services';\n\ntype BookingStep = 'service' | 'datetime' | 'details' | 'confirmation';\n\ninterface BookingData {\n  service: string;\n  date: string;\n  time: string;\n  name: string;\n  email: string;\n  phone: string;\n  message: string;\n}\n\nconst Booking = () => {\n  const [currentStep, setCurrentStep] = useState<BookingStep>('service');\n  const [bookingData, setBookingData] = useState<BookingData>({\n    service: '',\n    date: '',\n    time: '',\n    name: '',\n    email: '',\n    phone: '',\n    message: '',\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const steps = [\n    { id: 'service', title: 'Select Service', icon: User },\n    { id: 'datetime', title: 'Date & Time', icon: Calendar },\n    { id: 'details', title: 'Your Details', icon: MessageCircle },\n    { id: 'confirmation', title: 'Confirmation', icon: CheckCircle2 },\n  ];\n\n  const availableSlots = [\n    '9:00 AM', '10:00 AM', '11:00 AM', '12:00 PM',\n    '1:00 PM', '2:00 PM', '3:00 PM', '4:00 PM',\n    '5:00 PM', '6:00 PM', '7:00 PM', '8:00 PM'\n  ];\n\n  const handleNext = () => {\n    const stepOrder: BookingStep[] = ['service', 'datetime', 'details', 'confirmation'];\n    const currentIndex = stepOrder.indexOf(currentStep);\n    if (currentIndex < stepOrder.length - 1) {\n      setCurrentStep(stepOrder[currentIndex + 1]);\n    }\n  };\n\n  const handlePrevious = () => {\n    const stepOrder: BookingStep[] = ['service', 'datetime', 'details', 'confirmation'];\n    const currentIndex = stepOrder.indexOf(currentStep);\n    if (currentIndex > 0) {\n      setCurrentStep(stepOrder[currentIndex - 1]);\n    }\n  };\n\n  const handleSubmit = async () => {\n    setIsSubmitting(true);\n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 2000));\n    setIsSubmitting(false);\n    setCurrentStep('confirmation');\n  };\n\n  const updateBookingData = (field: keyof BookingData, value: string) => {\n    setBookingData(prev => ({ ...prev, [field]: value }));\n  };\n\n  const isStepValid = () => {\n    switch (currentStep) {\n      case 'service':\n        return bookingData.service !== '';\n      case 'datetime':\n        return bookingData.date !== '' && bookingData.time !== '';\n      case 'details':\n        return bookingData.name !== '' && bookingData.email !== '' && bookingData.phone !== '';\n      default:\n        return true;\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen pt-20\" data-testid=\"booking-page\">\n      {/* Hero Section */}\n      <section \n        className=\"relative py-20 flex items-center justify-center overflow-hidden parallax\"\n        style={{\n          backgroundImage: 'url(https://images.unsplash.com/photo-1560066984-138dadb4c035?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&h=1080)'\n        }}\n        data-testid=\"booking-hero\"\n      >\n        <div className=\"hero-gradient absolute inset-0\"></div>\n        <div className=\"relative z-10 text-center text-white px-4 max-w-4xl mx-auto\">\n          <ScrollReveal>\n            <h1 className=\"text-4xl md:text-5xl font-playfair font-bold mb-4\" data-testid=\"booking-hero-title\">\n              Book Your Appointment\n            </h1>\n            <p className=\"text-lg text-gray-100\" data-testid=\"booking-hero-description\">\n              Schedule your luxury beauty experience in just a few simple steps\n            </p>\n          </ScrollReveal>\n        </div>\n      </section>\n\n      {/* Booking Process */}\n      <section className=\"py-16 bg-bg-light\" data-testid=\"booking-process\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          {/* Progress Steps */}\n          <div className=\"mb-12\" data-testid=\"booking-progress\">\n            <div className=\"flex justify-between items-center\">\n              {steps.map((step, index) => {\n                const isActive = step.id === currentStep;\n                const isCompleted = steps.findIndex(s => s.id === currentStep) > index;\n                const StepIcon = step.icon;\n                \n                return (\n                  <div \n                    key={step.id}\n                    className={`flex flex-col items-center flex-1 ${index < steps.length - 1 ? 'relative' : ''}`}\n                    data-testid={`booking-step-${step.id}`}\n                  >\n                    <div \n                      className={`w-12 h-12 rounded-full flex items-center justify-center mb-2 transition-all duration-300 ${\n                        isCompleted \n                          ? 'bg-primary text-white' \n                          : isActive \n                          ? 'bg-primary text-white' \n                          : 'bg-gray-200 text-gray-500'\n                      }`}\n                    >\n                      <StepIcon className=\"w-6 h-6\" />\n                    </div>\n                    <span \n                      className={`text-sm font-medium ${\n                        isActive || isCompleted ? 'text-primary' : 'text-gray-500'\n                      }`}\n                    >\n                      {step.title}\n                    </span>\n                    {index < steps.length - 1 && (\n                      <div \n                        className={`absolute top-6 left-1/2 w-full h-0.5 -translate-y-1/2 ${\n                          isCompleted ? 'bg-primary' : 'bg-gray-200'\n                        }`}\n                        style={{ left: '50%', width: 'calc(100% - 3rem)' }}\n                      />\n                    )}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n\n          <Card className=\"shadow-xl\" data-testid=\"booking-form-card\">\n            <CardHeader>\n              <CardTitle className=\"text-2xl font-playfair text-center\">\n                {steps.find(s => s.id === currentStep)?.title}\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              {/* Service Selection */}\n              {currentStep === 'service' && (\n                <div className=\"space-y-6\" data-testid=\"service-selection\">\n                  <p className=\"text-gray-600 text-center mb-8\">\n                    Choose the service you'd like to book\n                  </p>\n                  <RadioGroup \n                    value={bookingData.service} \n                    onValueChange={(value) => updateBookingData('service', value)}\n                  >\n                    <div className=\"grid md:grid-cols-2 gap-4\">\n                      {mainServices.map((service) => (\n                        <div key={service.id} className=\"relative\">\n                          <RadioGroupItem \n                            value={service.id} \n                            id={service.id}\n                            className=\"peer sr-only\"\n                            data-testid={`service-option-${service.id}`}\n                          />\n                          <Label \n                            htmlFor={service.id}\n                            className=\"flex items-start space-x-4 p-6 border-2 border-gray-200 rounded-xl cursor-pointer peer-checked:border-primary peer-checked:bg-primary/5 hover:border-primary/50 transition-all duration-300\"\n                          >\n                            <div className={`w-12 h-12 ${service.iconColor} rounded-full flex items-center justify-center flex-shrink-0`}>\n                              <service.icon className=\"w-6 h-6\" />\n                            </div>\n                            <div className=\"flex-1\">\n                              <h3 className=\"font-playfair font-bold text-lg text-text-dark mb-2\">\n                                {service.title}\n                              </h3>\n                              <p className=\"text-gray-600 text-sm leading-relaxed\">\n                                {service.description}\n                              </p>\n                            </div>\n                          </Label>\n                        </div>\n                      ))}\n                    </div>\n                  </RadioGroup>\n                </div>\n              )}\n\n              {/* Date & Time Selection */}\n              {currentStep === 'datetime' && (\n                <div className=\"space-y-8\" data-testid=\"datetime-selection\">\n                  <div>\n                    <Label className=\"text-lg font-semibold text-text-dark mb-4 block\">\n                      <Calendar className=\"inline w-5 h-5 mr-2\" />\n                      Select Date\n                    </Label>\n                    <Input \n                      type=\"date\"\n                      value={bookingData.date}\n                      onChange={(e) => updateBookingData('date', e.target.value)}\n                      min={new Date().toISOString().split('T')[0]}\n                      className=\"text-lg\"\n                      data-testid=\"date-input\"\n                    />\n                  </div>\n                  \n                  <div>\n                    <Label className=\"text-lg font-semibold text-text-dark mb-4 block\">\n                      <Clock className=\"inline w-5 h-5 mr-2\" />\n                      Select Time\n                    </Label>\n                    <div className=\"grid grid-cols-3 md:grid-cols-4 gap-3\">\n                      {availableSlots.map((slot) => (\n                        <Button\n                          key={slot}\n                          type=\"button\"\n                          variant={bookingData.time === slot ? \"default\" : \"outline\"}\n                          className={`py-3 ${\n                            bookingData.time === slot \n                              ? 'bg-primary text-white' \n                              : 'hover:bg-primary hover:text-white'\n                          }`}\n                          onClick={() => updateBookingData('time', slot)}\n                          data-testid={`time-slot-${slot.replace(/[^a-zA-Z0-9]/g, '')}`}\n                        >\n                          {slot}\n                        </Button>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Personal Details */}\n              {currentStep === 'details' && (\n                <div className=\"space-y-6\" data-testid=\"details-form\">\n                  <div className=\"grid md:grid-cols-2 gap-4\">\n                    <div>\n                      <Label htmlFor=\"name\" className=\"flex items-center text-text-dark mb-2\">\n                        <User className=\"w-4 h-4 mr-2\" />\n                        Full Name *\n                      </Label>\n                      <Input \n                        id=\"name\"\n                        value={bookingData.name}\n                        onChange={(e) => updateBookingData('name', e.target.value)}\n                        placeholder=\"Enter your full name\"\n                        data-testid=\"name-input\"\n                      />\n                    </div>\n                    <div>\n                      <Label htmlFor=\"phone\" className=\"flex items-center text-text-dark mb-2\">\n                        <Phone className=\"w-4 h-4 mr-2\" />\n                        Phone Number *\n                      </Label>\n                      <Input \n                        id=\"phone\"\n                        value={bookingData.phone}\n                        onChange={(e) => updateBookingData('phone', e.target.value)}\n                        placeholder=\"Enter your phone number\"\n                        data-testid=\"phone-input\"\n                      />\n                    </div>\n                  </div>\n                  \n                  <div>\n                    <Label htmlFor=\"email\" className=\"flex items-center text-text-dark mb-2\">\n                      <Mail className=\"w-4 h-4 mr-2\" />\n                      Email Address *\n                    </Label>\n                    <Input \n                      id=\"email\"\n                      type=\"email\"\n                      value={bookingData.email}\n                      onChange={(e) => updateBookingData('email', e.target.value)}\n                      placeholder=\"Enter your email address\"\n                      data-testid=\"email-input\"\n                    />\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"message\" className=\"flex items-center text-text-dark mb-2\">\n                      <MessageCircle className=\"w-4 h-4 mr-2\" />\n                      Special Requirements (Optional)\n                    </Label>\n                    <Textarea \n                      id=\"message\"\n                      value={bookingData.message}\n                      onChange={(e) => updateBookingData('message', e.target.value)}\n                      placeholder=\"Any special requirements or preferences...\"\n                      rows={4}\n                      data-testid=\"message-input\"\n                    />\n                  </div>\n                </div>\n              )}\n\n              {/* Confirmation */}\n              {currentStep === 'confirmation' && (\n                <div className=\"text-center space-y-8\" data-testid=\"booking-confirmation\">\n                  <div className=\"w-20 h-20 bg-green-100 rounded-full flex items-center justify-center mx-auto\">\n                    <CheckCircle2 className=\"w-10 h-10 text-green-600\" />\n                  </div>\n                  \n                  <div>\n                    <h3 className=\"text-2xl font-playfair font-bold text-text-dark mb-4\">\n                      Booking Confirmed!\n                    </h3>\n                    <p className=\"text-gray-600 mb-8\">\n                      Thank you for choosing Luxe Beauty. Your appointment has been successfully booked.\n                    </p>\n                  </div>\n\n                  <Card className=\"bg-bg-light text-left\">\n                    <CardContent className=\"pt-6\">\n                      <h4 className=\"font-semibold text-text-dark mb-4\">Booking Details:</h4>\n                      <div className=\"space-y-2 text-sm\">\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-gray-600\">Service:</span>\n                          <span className=\"font-medium\">\n                            {mainServices.find(s => s.id === bookingData.service)?.title}\n                          </span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-gray-600\">Date:</span>\n                          <span className=\"font-medium\">\n                            {new Date(bookingData.date).toLocaleDateString()}\n                          </span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-gray-600\">Time:</span>\n                          <span className=\"font-medium\">{bookingData.time}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-gray-600\">Name:</span>\n                          <span className=\"font-medium\">{bookingData.name}</span>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n\n                  <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                    <p className=\"text-blue-800 text-sm\">\n                      <strong>What's next?</strong> We'll send you a confirmation email shortly with all the details. \n                      If you need to reschedule or have any questions, please call us at +91 123 456 7890.\n                    </p>\n                  </div>\n                </div>\n              )}\n\n              {/* Navigation Buttons */}\n              {currentStep !== 'confirmation' && (\n                <div className=\"flex justify-between pt-8 border-t\" data-testid=\"booking-navigation\">\n                  <Button \n                    type=\"button\"\n                    variant=\"outline\"\n                    onClick={handlePrevious}\n                    disabled={currentStep === 'service'}\n                    className=\"flex items-center\"\n                    data-testid=\"booking-previous\"\n                  >\n                    <ArrowLeft className=\"w-4 h-4 mr-2\" />\n                    Previous\n                  </Button>\n\n                  {currentStep === 'details' ? (\n                    <Button \n                      type=\"button\"\n                      onClick={handleSubmit}\n                      disabled={!isStepValid() || isSubmitting}\n                      className=\"bg-primary text-white hover:bg-secondary flex items-center\"\n                      data-testid=\"booking-submit\"\n                    >\n                      {isSubmitting ? (\n                        <>\n                          <div className=\"w-4 h-4 border-2 border-white/20 border-t-white rounded-full animate-spin mr-2\"></div>\n                          Booking...\n                        </>\n                      ) : (\n                        <>\n                          Confirm Booking\n                          <CheckCircle2 className=\"w-4 h-4 ml-2\" />\n                        </>\n                      )}\n                    </Button>\n                  ) : (\n                    <Button \n                      type=\"button\"\n                      onClick={handleNext}\n                      disabled={!isStepValid()}\n                      className=\"bg-primary text-white hover:bg-secondary flex items-center\"\n                      data-testid=\"booking-next\"\n                    >\n                      Next\n                      <ArrowRight className=\"w-4 h-4 ml-2\" />\n                    </Button>\n                  )}\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </div>\n      </section>\n\n      {/* Contact Info */}\n      <section className=\"py-16 bg-white\" data-testid=\"booking-contact-info\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <ScrollReveal>\n            <h2 className=\"text-3xl font-playfair font-bold mb-6 text-text-dark\">\n              Need Help with Your Booking?\n            </h2>\n            <p className=\"text-gray-600 mb-8\">\n              Our friendly team is here to assist you with any questions or special requests.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center items-center\">\n              <a \n                href=\"tel:+911234567890\"\n                className=\"flex items-center bg-primary text-white px-6 py-3 rounded-full font-semibold hover:bg-secondary transition-colors\"\n                data-testid=\"booking-call-button\"\n              >\n                <Phone className=\"w-4 h-4 mr-2\" />\n                Call Us: +91 123 456 7890\n              </a>\n              <a \n                href=\"https://wa.me/1234567890\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"flex items-center bg-green-600 text-white px-6 py-3 rounded-full font-semibold hover:bg-green-700 transition-colors\"\n                data-testid=\"booking-whatsapp-button\"\n              >\n                <MessageCircle className=\"w-4 h-4 mr-2\" />\n                WhatsApp Us\n              </a>\n            </div>\n          </ScrollReveal>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Booking;\n","size_bytes":19903},"client/src/pages/Contact.tsx":{"content":"import { useState } from 'react';\nimport { MapPin, Phone, Mail, Clock, Send, MessageCircle } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Label } from '@/components/ui/label';\nimport ScrollReveal from '@/components/ui/ScrollReveal';\nimport { useToast } from '@/hooks/use-toast';\n\ninterface ContactForm {\n  name: string;\n  email: string;\n  phone: string;\n  subject: string;\n  message: string;\n}\n\nconst Contact = () => {\n  const [formData, setFormData] = useState<ContactForm>({\n    name: '',\n    email: '',\n    phone: '',\n    subject: '',\n    message: '',\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { toast } = useToast();\n\n  const updateFormData = (field: keyof ContactForm, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    \n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      \n      toast({\n        title: \"Message Sent!\",\n        description: \"Thank you for contacting us. We'll get back to you within 24 hours.\",\n      });\n      \n      setFormData({\n        name: '',\n        email: '',\n        phone: '',\n        subject: '',\n        message: '',\n      });\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to send message. Please try again.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const contactInfo = [\n    {\n      icon: MapPin,\n      title: 'Visit Us',\n      details: ['123 Beauty Boulevard', 'Luxury District, Mumbai 400001'],\n      color: 'text-primary',\n      bgColor: 'bg-primary/10',\n    },\n    {\n      icon: Phone,\n      title: 'Call Us',\n      details: ['+91 123 456 7890', '+91 987 654 3210'],\n      color: 'text-secondary',\n      bgColor: 'bg-secondary/10',\n    },\n    {\n      icon: Mail,\n      title: 'Email Us',\n      details: ['info@luxebeauty.com', 'bookings@luxebeauty.com'],\n      color: 'text-accent',\n      bgColor: 'bg-accent/10',\n    },\n    {\n      icon: Clock,\n      title: 'Opening Hours',\n      details: ['Mon - Sat: 9:00 AM - 8:00 PM', 'Sunday: 10:00 AM - 6:00 PM'],\n      color: 'text-gold',\n      bgColor: 'bg-gold/10',\n    },\n  ];\n\n  return (\n    <div className=\"min-h-screen pt-20\" data-testid=\"contact-page\">\n      {/* Hero Section */}\n      <section \n        className=\"relative py-32 flex items-center justify-center overflow-hidden parallax\"\n        style={{\n          backgroundImage: 'url(https://images.unsplash.com/photo-1560066984-138dadb4c035?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&h=1080)'\n        }}\n        data-testid=\"contact-hero\"\n      >\n        <div className=\"hero-gradient absolute inset-0\"></div>\n        <div className=\"relative z-10 text-center text-white px-4 max-w-4xl mx-auto\">\n          <ScrollReveal>\n            <span className=\"inline-block px-6 py-2 bg-gold/20 backdrop-blur-sm border border-gold/30 rounded-full text-gold font-semibold text-sm tracking-wider mb-6\">\n              GET IN TOUCH\n            </span>\n            <h1 className=\"text-5xl md:text-6xl font-playfair font-bold mb-6\" data-testid=\"contact-hero-title\">\n              Let's Connect\n            </h1>\n            <p className=\"text-xl text-gray-100 max-w-2xl mx-auto\" data-testid=\"contact-hero-description\">\n              We'd love to hear from you. Send us a message and we'll respond as soon as possible.\n            </p>\n          </ScrollReveal>\n        </div>\n      </section>\n\n      {/* Contact Information Cards */}\n      <section className=\"py-16 bg-bg-light\" data-testid=\"contact-info-section\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {contactInfo.map((info, index) => (\n              <ScrollReveal key={info.title} delay={index * 100}>\n                <Card \n                  className=\"text-center hover:shadow-xl transition-all duration-300 h-full\"\n                  data-testid={`contact-info-${index}`}\n                >\n                  <CardContent className=\"pt-8\">\n                    <div className={`w-16 h-16 ${info.bgColor} rounded-full flex items-center justify-center mx-auto mb-6`}>\n                      <info.icon className={`w-8 h-8 ${info.color}`} />\n                    </div>\n                    <h3 className=\"text-xl font-playfair font-bold mb-4 text-text-dark\">\n                      {info.title}\n                    </h3>\n                    <div className=\"space-y-2\">\n                      {info.details.map((detail, detailIndex) => (\n                        <p \n                          key={detailIndex}\n                          className=\"text-gray-600\"\n                          data-testid={`contact-detail-${index}-${detailIndex}`}\n                        >\n                          {detail}\n                        </p>\n                      ))}\n                    </div>\n                  </CardContent>\n                </Card>\n              </ScrollReveal>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Contact Form & Map */}\n      <section className=\"py-24 bg-white\" data-testid=\"contact-form-section\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid lg:grid-cols-2 gap-16\">\n            {/* Contact Form */}\n            <ScrollReveal>\n              <div>\n                <div className=\"mb-8\">\n                  <span className=\"text-primary font-semibold text-sm tracking-wider uppercase mb-4 block\">\n                    Send us a Message\n                  </span>\n                  <h2 className=\"text-4xl font-playfair font-bold mb-6 text-text-dark\" data-testid=\"contact-form-title\">\n                    We're Here to Help\n                  </h2>\n                  <p className=\"text-gray-600 leading-relaxed\" data-testid=\"contact-form-description\">\n                    Have questions about our services, want to book an appointment, or need a custom beauty package? \n                    Fill out the form below and our team will get back to you within 24 hours.\n                  </p>\n                </div>\n\n                <Card className=\"shadow-xl\">\n                  <CardHeader>\n                    <CardTitle className=\"text-2xl font-playfair\">\n                      Contact Form\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <form onSubmit={handleSubmit} className=\"space-y-6\" data-testid=\"contact-form\">\n                      <div className=\"grid md:grid-cols-2 gap-4\">\n                        <div>\n                          <Label htmlFor=\"name\" className=\"text-text-dark mb-2 block\">\n                            Full Name *\n                          </Label>\n                          <Input \n                            id=\"name\"\n                            value={formData.name}\n                            onChange={(e) => updateFormData('name', e.target.value)}\n                            placeholder=\"Enter your full name\"\n                            required\n                            data-testid=\"contact-name-input\"\n                          />\n                        </div>\n                        <div>\n                          <Label htmlFor=\"phone\" className=\"text-text-dark mb-2 block\">\n                            Phone Number\n                          </Label>\n                          <Input \n                            id=\"phone\"\n                            value={formData.phone}\n                            onChange={(e) => updateFormData('phone', e.target.value)}\n                            placeholder=\"Your phone number\"\n                            data-testid=\"contact-phone-input\"\n                          />\n                        </div>\n                      </div>\n                      \n                      <div>\n                        <Label htmlFor=\"email\" className=\"text-text-dark mb-2 block\">\n                          Email Address *\n                        </Label>\n                        <Input \n                          id=\"email\"\n                          type=\"email\"\n                          value={formData.email}\n                          onChange={(e) => updateFormData('email', e.target.value)}\n                          placeholder=\"your.email@example.com\"\n                          required\n                          data-testid=\"contact-email-input\"\n                        />\n                      </div>\n\n                      <div>\n                        <Label htmlFor=\"subject\" className=\"text-text-dark mb-2 block\">\n                          Subject *\n                        </Label>\n                        <Input \n                          id=\"subject\"\n                          value={formData.subject}\n                          onChange={(e) => updateFormData('subject', e.target.value)}\n                          placeholder=\"What is this regarding?\"\n                          required\n                          data-testid=\"contact-subject-input\"\n                        />\n                      </div>\n\n                      <div>\n                        <Label htmlFor=\"message\" className=\"text-text-dark mb-2 block\">\n                          Message *\n                        </Label>\n                        <Textarea \n                          id=\"message\"\n                          value={formData.message}\n                          onChange={(e) => updateFormData('message', e.target.value)}\n                          placeholder=\"Tell us how we can help you...\"\n                          rows={6}\n                          required\n                          data-testid=\"contact-message-input\"\n                        />\n                      </div>\n\n                      <Button \n                        type=\"submit\" \n                        disabled={isSubmitting}\n                        className=\"w-full bg-primary text-white hover:bg-secondary py-3 text-lg\"\n                        data-testid=\"contact-submit-button\"\n                      >\n                        {isSubmitting ? (\n                          <>\n                            <div className=\"w-5 h-5 border-2 border-white/20 border-t-white rounded-full animate-spin mr-3\"></div>\n                            Sending Message...\n                          </>\n                        ) : (\n                          <>\n                            <Send className=\"w-5 h-5 mr-3\" />\n                            Send Message\n                          </>\n                        )}\n                      </Button>\n                    </form>\n                  </CardContent>\n                </Card>\n              </div>\n            </ScrollReveal>\n\n            {/* Map & Additional Info */}\n            <ScrollReveal delay={200}>\n              <div className=\"space-y-8\">\n                {/* Google Map Placeholder */}\n                <Card className=\"overflow-hidden\">\n                  <div className=\"h-96 bg-gray-200 flex items-center justify-center\" data-testid=\"contact-map\">\n                    <div className=\"text-center\">\n                      <MapPin className=\"w-16 h-16 text-gray-400 mx-auto mb-4\" />\n                      <h3 className=\"text-xl font-playfair font-bold text-gray-600 mb-2\">\n                        Find Us Here\n                      </h3>\n                      <p className=\"text-gray-500\">\n                        Interactive map integration would be implemented here\n                      </p>\n                    </div>\n                  </div>\n                </Card>\n\n                {/* Quick Contact Options */}\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"text-xl font-playfair\">\n                      Quick Contact Options\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between p-4 bg-bg-light rounded-lg\">\n                      <div>\n                        <h4 className=\"font-semibold text-text-dark\">Emergency Bookings</h4>\n                        <p className=\"text-sm text-gray-600\">For same-day appointments</p>\n                      </div>\n                      <a \n                        href=\"tel:+911234567890\"\n                        className=\"bg-primary text-white px-4 py-2 rounded-full font-semibold hover:bg-secondary transition-colors\"\n                        data-testid=\"emergency-call-button\"\n                      >\n                        <Phone className=\"w-4 h-4 inline mr-2\" />\n                        Call Now\n                      </a>\n                    </div>\n\n                    <div className=\"flex items-center justify-between p-4 bg-bg-light rounded-lg\">\n                      <div>\n                        <h4 className=\"font-semibold text-text-dark\">WhatsApp Support</h4>\n                        <p className=\"text-sm text-gray-600\">Quick questions & booking</p>\n                      </div>\n                      <a \n                        href=\"https://wa.me/1234567890\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"bg-green-600 text-white px-4 py-2 rounded-full font-semibold hover:bg-green-700 transition-colors\"\n                        data-testid=\"whatsapp-button\"\n                      >\n                        <MessageCircle className=\"w-4 h-4 inline mr-2\" />\n                        Chat Now\n                      </a>\n                    </div>\n                  </CardContent>\n                </Card>\n\n                {/* FAQ Quick Links */}\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"text-xl font-playfair\">\n                      Frequently Asked\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-3\">\n                      {[\n                        'What are your cancellation policies?',\n                        'Do you offer group booking discounts?',\n                        'Can I reschedule my appointment?',\n                        'What payment methods do you accept?',\n                      ].map((question, index) => (\n                        <button \n                          key={index}\n                          className=\"w-full text-left p-3 rounded-lg hover:bg-bg-light transition-colors text-gray-600 hover:text-primary\"\n                          data-testid={`faq-item-${index}`}\n                        >\n                          {question}\n                        </button>\n                      ))}\n                    </div>\n                  </CardContent>\n                </Card>\n              </div>\n            </ScrollReveal>\n          </div>\n        </div>\n      </section>\n\n      {/* Newsletter Signup */}\n      <section className=\"py-16 bg-primary text-white\" data-testid=\"newsletter-section\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <ScrollReveal>\n            <h2 className=\"text-3xl font-playfair font-bold mb-4\" data-testid=\"newsletter-title\">\n              Stay Updated\n            </h2>\n            <p className=\"text-gray-100 mb-8\" data-testid=\"newsletter-description\">\n              Subscribe to our newsletter for beauty tips, special offers, and updates on new services\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 max-w-md mx-auto\">\n              <Input \n                type=\"email\" \n                placeholder=\"Enter your email\"\n                className=\"flex-1 bg-white text-text-dark\"\n                data-testid=\"newsletter-email-input\"\n              />\n              <Button \n                className=\"bg-white text-primary hover:bg-gold hover:text-white transition-colors px-8\"\n                data-testid=\"newsletter-subscribe-button\"\n              >\n                Subscribe\n              </Button>\n            </div>\n          </ScrollReveal>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Contact;\n","size_bytes":16415},"client/src/pages/Gallery.tsx":{"content":"import { useState } from 'react';\nimport { Search, Filter } from 'lucide-react';\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\nimport ScrollReveal from '@/components/ui/ScrollReveal';\nimport GalleryGrid from '@/components/ui/GalleryGrid';\nimport { galleryImages, galleryCategories } from '../data/gallery';\n\nconst Gallery = () => {\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const filteredImages = galleryImages.filter(image => {\n    const matchesCategory = selectedCategory === 'all' || image.category === selectedCategory;\n    const matchesSearch = image.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n                         image.alt.toLowerCase().includes(searchQuery.toLowerCase());\n    return matchesCategory && matchesSearch;\n  });\n\n  return (\n    <div className=\"min-h-screen pt-20\" data-testid=\"gallery-page\">\n      {/* Hero Section */}\n      <section \n        className=\"relative py-32 flex items-center justify-center overflow-hidden parallax\"\n        style={{\n          backgroundImage: 'url(https://images.unsplash.com/photo-1560066984-138dadb4c035?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&h=1080)'\n        }}\n        data-testid=\"gallery-hero\"\n      >\n        <div className=\"hero-gradient absolute inset-0\"></div>\n        <div className=\"relative z-10 text-center text-white px-4 max-w-4xl mx-auto\">\n          <ScrollReveal>\n            <span className=\"inline-block px-6 py-2 bg-gold/20 backdrop-blur-sm border border-gold/30 rounded-full text-gold font-semibold text-sm tracking-wider mb-6\">\n              OUR PORTFOLIO\n            </span>\n            <h1 className=\"text-5xl md:text-6xl font-playfair font-bold mb-6\" data-testid=\"gallery-hero-title\">\n              Beauty Gallery\n            </h1>\n            <p className=\"text-xl text-gray-100 max-w-2xl mx-auto\" data-testid=\"gallery-hero-description\">\n              Explore our stunning collection of transformations, artistry, and moments of beauty\n            </p>\n          </ScrollReveal>\n        </div>\n      </section>\n\n      {/* Gallery Controls */}\n      <section className=\"py-12 bg-white border-b\" data-testid=\"gallery-controls\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex flex-col lg:flex-row gap-6 items-center justify-between\">\n            {/* Search */}\n            <div className=\"relative w-full lg:w-96\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5\" />\n              <Input\n                type=\"text\"\n                placeholder=\"Search gallery...\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                className=\"pl-10 pr-4 py-3 w-full\"\n                data-testid=\"gallery-search\"\n              />\n            </div>\n\n            {/* Category Filters */}\n            <div className=\"flex flex-wrap gap-3\" data-testid=\"gallery-category-filters\">\n              {galleryCategories.map((category) => (\n                <Button\n                  key={category.id}\n                  variant={selectedCategory === category.id ? \"default\" : \"outline\"}\n                  onClick={() => setSelectedCategory(category.id)}\n                  className={`transition-all duration-300 ${\n                    selectedCategory === category.id\n                      ? 'bg-primary text-white'\n                      : 'hover:bg-primary hover:text-white'\n                  }`}\n                  data-testid={`gallery-filter-${category.id}`}\n                >\n                  <Filter className=\"w-4 h-4 mr-2\" />\n                  {category.label}\n                </Button>\n              ))}\n            </div>\n          </div>\n\n          {/* Results Count */}\n          <div className=\"mt-6 text-center\">\n            <p className=\"text-gray-600\" data-testid=\"gallery-results-count\">\n              Showing {filteredImages.length} {filteredImages.length === 1 ? 'image' : 'images'}\n              {selectedCategory !== 'all' && ` in ${galleryCategories.find(cat => cat.id === selectedCategory)?.label}`}\n              {searchQuery && ` matching \"${searchQuery}\"`}\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Gallery Grid */}\n      <section className=\"py-24 bg-bg-light\" data-testid=\"gallery-main\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          {filteredImages.length > 0 ? (\n            <div className=\"masonry-grid\">\n              {filteredImages.map((image, index) => (\n                <ScrollReveal key={image.id} delay={index * 50} className=\"masonry-item\">\n                  <div \n                    className=\"bg-white rounded-2xl overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300 group\"\n                    data-testid={`gallery-item-${index}`}\n                  >\n                    <div className=\"img-zoom-container relative\">\n                      <img \n                        src={image.src} \n                        alt={image.alt}\n                        className=\"img-zoom w-full h-auto\"\n                        loading=\"lazy\"\n                        data-testid={`gallery-image-${index}`}\n                      />\n                      <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\">\n                        <div className=\"absolute bottom-4 left-4 text-white\">\n                          <h3 className=\"text-lg font-playfair font-bold mb-1\" data-testid={`gallery-title-${index}`}>\n                            {image.title}\n                          </h3>\n                          <span className=\"text-sm text-gray-200 capitalize\">\n                            {image.category}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </ScrollReveal>\n              ))}\n            </div>\n          ) : (\n            <div className=\"text-center py-16\" data-testid=\"gallery-no-results\">\n              <div className=\"text-6xl mb-4\">🔍</div>\n              <h3 className=\"text-2xl font-playfair font-bold text-text-dark mb-4\">\n                No images found\n              </h3>\n              <p className=\"text-gray-600 mb-8\">\n                Try adjusting your search or filter criteria\n              </p>\n              <Button \n                onClick={() => {\n                  setSearchQuery('');\n                  setSelectedCategory('all');\n                }}\n                className=\"bg-primary text-white hover:bg-secondary\"\n                data-testid=\"gallery-reset-filters\"\n              >\n                Clear Filters\n              </Button>\n            </div>\n          )}\n        </div>\n      </section>\n\n      {/* Video Gallery Section */}\n      <section className=\"py-24 bg-white\" data-testid=\"video-gallery\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <ScrollReveal>\n            <div className=\"text-center mb-16\">\n              <span className=\"text-primary font-semibold text-sm tracking-wider uppercase mb-4 block\">\n                Behind the Scenes\n              </span>\n              <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6 text-text-dark\" data-testid=\"video-gallery-title\">\n                Watch Our Artistry\n              </h2>\n              <p className=\"text-gray-600 text-lg max-w-3xl mx-auto\" data-testid=\"video-gallery-description\">\n                See our talented artists in action and witness the transformation process\n              </p>\n            </div>\n          </ScrollReveal>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {[\n              {\n                thumbnail: 'https://images.unsplash.com/photo-1519741497674-611481863552?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400',\n                title: 'Bridal Makeup Process',\n                duration: '3:45',\n              },\n              {\n                thumbnail: 'https://images.unsplash.com/photo-1562322140-8baeececf3df?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400',\n                title: 'Hair Color Transformation',\n                duration: '5:20',\n              },\n              {\n                thumbnail: 'https://images.unsplash.com/photo-1604654894610-df63bc536371?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400',\n                title: 'Nail Art Creation',\n                duration: '4:15',\n              },\n            ].map((video, index) => (\n              <ScrollReveal key={video.title} delay={index * 100}>\n                <div \n                  className=\"bg-bg-light rounded-2xl overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300 group cursor-pointer\"\n                  data-testid={`video-item-${index}`}\n                >\n                  <div className=\"relative\">\n                    <img \n                      src={video.thumbnail} \n                      alt={video.title}\n                      className=\"w-full h-48 object-cover group-hover:scale-105 transition-transform duration-300\"\n                    />\n                    <div className=\"absolute inset-0 bg-black/30 group-hover:bg-black/20 transition-colors duration-300\">\n                      <div className=\"absolute inset-0 flex items-center justify-center\">\n                        <div className=\"w-16 h-16 bg-white/90 rounded-full flex items-center justify-center group-hover:scale-110 transition-transform duration-300\">\n                          <div className=\"w-0 h-0 border-l-8 border-l-primary border-t-4 border-t-transparent border-b-4 border-b-transparent ml-1\"></div>\n                        </div>\n                      </div>\n                      <div className=\"absolute top-4 right-4 bg-black/50 text-white text-sm px-2 py-1 rounded\">\n                        {video.duration}\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"p-6\">\n                    <h3 \n                      className=\"text-lg font-playfair font-bold text-text-dark\"\n                      data-testid={`video-title-${index}`}\n                    >\n                      {video.title}\n                    </h3>\n                  </div>\n                </div>\n              </ScrollReveal>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-24 bg-primary text-white\" data-testid=\"gallery-cta\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <ScrollReveal>\n            <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6\" data-testid=\"gallery-cta-title\">\n              Ready to Be Our Next Success Story?\n            </h2>\n            <p className=\"text-xl mb-10 text-gray-100 max-w-3xl mx-auto\" data-testid=\"gallery-cta-description\">\n              Book your appointment today and let us create something beautiful for you\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center items-center\">\n              <Button \n                className=\"bg-white text-primary px-10 py-4 rounded-full font-semibold text-lg hover:bg-gold hover:text-white transition-all duration-300 shadow-xl\"\n                data-testid=\"gallery-book-button\"\n              >\n                Book Your Session\n              </Button>\n              <Button \n                variant=\"outline\" \n                className=\"bg-transparent border-2 border-white text-white px-10 py-4 rounded-full font-semibold text-lg hover:bg-white hover:text-primary transition-all duration-300\"\n                data-testid=\"gallery-contact-button\"\n              >\n                Contact Us\n              </Button>\n            </div>\n          </ScrollReveal>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Gallery;\n","size_bytes":12005},"client/src/pages/Home.tsx":{"content":"import { Link } from 'wouter';\nimport { ArrowRight, Scissors, Sparkles, HandHeart, Paintbrush, Leaf, Crown } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport ScrollReveal from '@/components/ui/ScrollReveal';\nimport CounterSection from '@/components/ui/CounterSection';\nimport TestimonialCarousel from '@/components/ui/TestimonialCarousel';\nimport ServiceCard from '@/components/ui/ServiceCard';\nimport GalleryGrid from '@/components/ui/GalleryGrid';\nimport PricingCard from '@/components/ui/PricingCard';\n\nconst Home = () => {\n  const services = [\n    {\n      title: 'Hair Services',\n      description: 'From precision cuts to vibrant colors, hair spa to keratin treatments - transform your hair with our expert stylists.',\n      image: 'https://images.unsplash.com/photo-1562322140-8baeececf3df?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n      icon: Scissors,\n      href: '/services/hair',\n      iconColor: 'bg-primary/10 text-primary',\n    },\n    {\n      title: 'Skin Treatments',\n      description: 'Rejuvenate your skin with advanced facials, laser therapy, and customized skincare solutions for radiant glow.',\n      image: 'https://images.unsplash.com/photo-1570172619644-dfd03ed5d881?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n      icon: Sparkles,\n      href: '/services/skin',\n      iconColor: 'bg-secondary/10 text-secondary',\n    },\n    {\n      title: 'Nail Care',\n      description: 'Exquisite nail art, manicures, pedicures, and extensions - perfection at your fingertips with premium hygiene.',\n      image: 'https://images.unsplash.com/photo-1604654894610-df63bc536371?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n      icon: HandHeart,\n      href: '/services/nails',\n      iconColor: 'bg-accent/10 text-accent',\n    },\n    {\n      title: 'Makeup & Beauty',\n      description: 'From bridal to party makeup, our artists create stunning looks that make you the center of attention.',\n      image: 'https://images.unsplash.com/photo-1487412947147-5cebf100ffc2?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n      icon: Paintbrush,\n      href: '/services/makeup',\n      iconColor: 'bg-gold/10 text-gold',\n    },\n    {\n      title: 'Spa & Relaxation',\n      description: 'Unwind with therapeutic massages, aromatherapy, and holistic spa treatments in our tranquil sanctuary.',\n      image: 'https://images.unsplash.com/photo-1544161515-4ab6ce6db874?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n      icon: Leaf,\n      href: '/services/spa',\n      iconColor: 'bg-primary/10 text-primary',\n    },\n    {\n      title: 'Bridal Packages',\n      description: 'Comprehensive pre-bridal and bridal services to make your special day absolutely unforgettable.',\n      image: 'https://images.unsplash.com/photo-1519741497674-611481863552?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n      icon: Crown,\n      href: '/services/bridal',\n      iconColor: 'bg-secondary/10 text-secondary',\n    },\n  ];\n\n  const pricingPlans = [\n    {\n      title: 'Basic',\n      price: 2999,\n      features: [\n        { text: 'Basic Hair Cut & Style', included: true },\n        { text: 'Express Facial', included: true },\n        { text: 'Basic Manicure', included: true },\n        { text: '10% Off on Products', included: true },\n      ],\n    },\n    {\n      title: 'Classic',\n      price: 4999,\n      features: [\n        { text: 'Premium Hair Services', included: true },\n        { text: 'Advanced Facial', included: true },\n        { text: 'Nail Art & Extensions', included: true },\n        { text: '15% Off on Products', included: true },\n      ],\n    },\n    {\n      title: 'Elite',\n      price: 7999,\n      features: [\n        { text: 'All Classic Services', included: true },\n        { text: 'Hair Spa & Keratin', included: true },\n        { text: 'Full Body Massage', included: true },\n        { text: '20% Off on Products', included: true },\n      ],\n      isPopular: true,\n    },\n    {\n      title: 'Royal',\n      price: 12999,\n      features: [\n        { text: 'VIP Treatment Access', included: true },\n        { text: 'Personal Beauty Consultant', included: true },\n        { text: 'Unlimited Spa Access', included: true },\n        { text: '30% Off on Everything', included: true },\n      ],\n    },\n  ];\n\n  return (\n    <div className=\"min-h-screen\" data-testid=\"home-page\">\n      {/* Hero Section */}\n      <section \n        className=\"relative h-screen flex items-center justify-center overflow-hidden parallax\"\n        style={{\n          backgroundImage: 'url(https://images.unsplash.com/photo-1560066984-138dadb4c035?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&h=1080)'\n        }}\n        data-testid=\"hero-section\"\n      >\n        <div className=\"hero-gradient absolute inset-0\"></div>\n        \n        <div className=\"relative z-10 text-center text-white px-4 max-w-5xl mx-auto\">\n          <ScrollReveal>\n            <div className=\"mb-6\">\n              <span className=\"inline-block px-6 py-2 bg-gold/20 backdrop-blur-sm border border-gold/30 rounded-full text-gold font-semibold text-sm tracking-wider\">\n                PREMIUM BEAUTY EXPERIENCE\n              </span>\n            </div>\n            <h1 className=\"text-5xl md:text-7xl lg:text-8xl font-playfair font-bold mb-6 leading-tight\" data-testid=\"hero-title\">\n              Where Beauty <br/> Meets Luxury\n            </h1>\n            <p className=\"text-xl md:text-2xl mb-10 text-gray-100 max-w-3xl mx-auto\" data-testid=\"hero-description\">\n              Experience world-class beauty treatments in an atmosphere of pure elegance and sophistication\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center items-center\">\n              <Link href=\"/booking\">\n                <Button className=\"btn-gradient text-lg px-8 py-4\" data-testid=\"hero-book-button\">\n                  <span>Book Your Experience</span>\n                </Button>\n              </Link>\n              <Link href=\"/services\">\n                <Button \n                  variant=\"outline\" \n                  className=\"bg-white/10 backdrop-blur-sm text-white border-white/30 hover:bg-white/20 text-lg px-8 py-4\"\n                  data-testid=\"hero-explore-button\"\n                >\n                  Explore Services\n                </Button>\n              </Link>\n            </div>\n          </ScrollReveal>\n        </div>\n\n        <div className=\"absolute bottom-10 left-1/2 transform -translate-x-1/2 text-white animate-bounce\">\n          <ArrowRight className=\"rotate-90 text-2xl\" />\n        </div>\n      </section>\n\n      {/* About Preview Section */}\n      <section className=\"py-20 bg-white\" data-testid=\"about-preview-section\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n            <ScrollReveal>\n              <div>\n                <span className=\"text-primary font-semibold text-sm tracking-wider uppercase mb-4 block\">\n                  Our Story\n                </span>\n                <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6 text-text-dark\" data-testid=\"about-title\">\n                  15 Years of Excellence in Beauty\n                </h2>\n                <p className=\"text-gray-600 text-lg mb-6 leading-relaxed\" data-testid=\"about-description-1\">\n                  Luxe Beauty has been transforming lives through exceptional beauty services since 2009. Our commitment to excellence, combined with cutting-edge techniques and premium products, has made us the premier destination for beauty enthusiasts.\n                </p>\n                <p className=\"text-gray-600 text-lg mb-8 leading-relaxed\" data-testid=\"about-description-2\">\n                  We believe that true beauty comes from confidence, and our expert team is dedicated to helping you discover and enhance your natural radiance.\n                </p>\n                <Link href=\"/about\" className=\"inline-flex items-center text-primary font-semibold text-lg hover:text-secondary transition-colors\" data-testid=\"about-link\">\n                  Discover Our Journey <ArrowRight className=\"ml-2 w-5 h-5\" />\n                </Link>\n              </div>\n            </ScrollReveal>\n            \n            <ScrollReveal delay={200}>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"img-zoom-container rounded-lg overflow-hidden\">\n                  <img src=\"https://images.unsplash.com/photo-1522337360788-8b13dee7a37e?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400\" alt=\"Salon team\" className=\"img-zoom w-full h-64 object-cover\" />\n                </div>\n                <div className=\"img-zoom-container rounded-lg overflow-hidden mt-8\">\n                  <img src=\"https://images.unsplash.com/photo-1633681926022-84c23e8cb2d6?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400\" alt=\"Salon interior\" className=\"img-zoom w-full h-64 object-cover\" />\n                </div>\n                <div className=\"img-zoom-container rounded-lg overflow-hidden -mt-8\">\n                  <img src=\"https://images.unsplash.com/photo-1487412947147-5cebf100ffc2?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400\" alt=\"Beauty treatment\" className=\"img-zoom w-full h-64 object-cover\" />\n                </div>\n                <div className=\"img-zoom-container rounded-lg overflow-hidden\">\n                  <img src=\"https://images.unsplash.com/photo-1516975080664-ed2fc6a32937?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400\" alt=\"Beauty products\" className=\"img-zoom w-full h-64 object-cover\" />\n                </div>\n              </div>\n            </ScrollReveal>\n          </div>\n        </div>\n      </section>\n\n      {/* Premium Services Preview */}\n      <section className=\"py-24 bg-bg-light\" data-testid=\"services-preview-section\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <ScrollReveal>\n            <div className=\"text-center mb-16\">\n              <span className=\"text-primary font-semibold text-sm tracking-wider uppercase mb-4 block\">\n                Our Expertise\n              </span>\n              <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6 text-text-dark\" data-testid=\"services-title\">\n                Premium Services\n              </h2>\n              <p className=\"text-gray-600 text-lg max-w-3xl mx-auto\" data-testid=\"services-description\">\n                Discover our comprehensive range of luxury beauty treatments designed to bring out your best\n              </p>\n            </div>\n          </ScrollReveal>\n          \n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {services.map((service, index) => (\n              <ServiceCard\n                key={service.title}\n                {...service}\n                delay={index * 100}\n              />\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Before/After Showcase */}\n      <section className=\"py-24 bg-white\" data-testid=\"before-after-section\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <ScrollReveal>\n            <div className=\"text-center mb-16\">\n              <span className=\"text-primary font-semibold text-sm tracking-wider uppercase mb-4 block\">\n                Transformations\n              </span>\n              <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6 text-text-dark\" data-testid=\"transformations-title\">\n                See the Magic Happen\n              </h2>\n              <p className=\"text-gray-600 text-lg max-w-3xl mx-auto\" data-testid=\"transformations-description\">\n                Real results from real clients - witness the transformative power of our expert services\n              </p>\n            </div>\n          </ScrollReveal>\n          \n          <div className=\"grid md:grid-cols-2 gap-8\">\n            <ScrollReveal>\n              <div className=\"bg-bg-light rounded-2xl p-6\" data-testid=\"before-after-hair\">\n                <div className=\"grid grid-cols-2 gap-4 mb-4\">\n                  <div>\n                    <p className=\"text-sm font-semibold text-gray-500 mb-2\">BEFORE</p>\n                    <img src=\"https://images.unsplash.com/photo-1560869713-7d0a29430803?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400\" alt=\"Before hair treatment\" className=\"w-full h-64 object-cover rounded-lg\" />\n                  </div>\n                  <div>\n                    <p className=\"text-sm font-semibold text-gold mb-2\">AFTER</p>\n                    <img src=\"https://images.unsplash.com/photo-1562322140-8baeececf3df?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400\" alt=\"After hair treatment\" className=\"w-full h-64 object-cover rounded-lg\" />\n                  </div>\n                </div>\n                <div className=\"text-center\">\n                  <h4 className=\"font-playfair font-bold text-xl mb-2\">Hair Color Transformation</h4>\n                  <p className=\"text-gray-600\">Balayage + Keratin Treatment</p>\n                </div>\n              </div>\n            </ScrollReveal>\n            \n            <ScrollReveal delay={100}>\n              <div className=\"bg-bg-light rounded-2xl p-6\" data-testid=\"before-after-skin\">\n                <div className=\"grid grid-cols-2 gap-4 mb-4\">\n                  <div>\n                    <p className=\"text-sm font-semibold text-gray-500 mb-2\">BEFORE</p>\n                    <img src=\"https://images.unsplash.com/photo-1616394584738-fc6e612e71b9?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400\" alt=\"Before skin treatment\" className=\"w-full h-64 object-cover rounded-lg\" />\n                  </div>\n                  <div>\n                    <p className=\"text-sm font-semibold text-gold mb-2\">AFTER</p>\n                    <img src=\"https://images.unsplash.com/photo-1515377905703-c4788e51af15?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400\" alt=\"After skin treatment\" className=\"w-full h-64 object-cover rounded-lg\" />\n                  </div>\n                </div>\n                <div className=\"text-center\">\n                  <h4 className=\"font-playfair font-bold text-xl mb-2\">Skin Brightening</h4>\n                  <p className=\"text-gray-600\">HydraFacial + Vitamin C Treatment</p>\n                </div>\n              </div>\n            </ScrollReveal>\n          </div>\n        </div>\n      </section>\n\n      {/* Why Choose Us */}\n      <section className=\"py-24 bg-secondary text-white relative overflow-hidden\" data-testid=\"why-choose-us-section\">\n        <div className=\"absolute top-0 right-0 w-96 h-96 bg-primary/20 rounded-full blur-3xl\"></div>\n        <div className=\"absolute bottom-0 left-0 w-96 h-96 bg-gold/20 rounded-full blur-3xl\"></div>\n        \n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10\">\n          <ScrollReveal>\n            <div className=\"text-center mb-16\">\n              <span className=\"text-gold font-semibold text-sm tracking-wider uppercase mb-4 block\">\n                Why Luxe Beauty\n              </span>\n              <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6\" data-testid=\"why-choose-us-title\">\n                The Luxe Difference\n              </h2>\n              <p className=\"text-gray-200 text-lg max-w-3xl mx-auto\" data-testid=\"why-choose-us-description\">\n                Experience unparalleled luxury and expertise that sets us apart from the rest\n              </p>\n            </div>\n          </ScrollReveal>\n          \n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {[\n              { icon: '💎', title: 'Premium Luxury', description: 'World-class facilities with state-of-the-art equipment and premium products' },\n              { icon: '🎓', title: 'Expert Team', description: 'Certified professionals with years of experience and international training' },\n              { icon: '🛡️', title: 'Premium Hygiene', description: 'Hospital-grade sterilization and safety protocols for your peace of mind' },\n              { icon: '🛋️', title: 'Ultimate Comfort', description: 'Luxurious ambiance designed for relaxation and rejuvenation' },\n            ].map((item, index) => (\n              <ScrollReveal key={item.title} delay={index * 100}>\n                <div className=\"text-center\" data-testid={`why-choose-us-item-${index}`}>\n                  <div className=\"text-4xl mb-4\">{item.icon}</div>\n                  <h3 className=\"text-xl font-playfair font-bold mb-3\" data-testid={`why-choose-us-item-title-${index}`}>\n                    {item.title}\n                  </h3>\n                  <p className=\"text-gray-300 leading-relaxed\" data-testid={`why-choose-us-item-description-${index}`}>\n                    {item.description}\n                  </p>\n                </div>\n              </ScrollReveal>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Counter Section */}\n      <CounterSection />\n\n      {/* Testimonials */}\n      <TestimonialCarousel />\n\n      {/* Gallery Highlights */}\n      <section className=\"py-24 bg-white\" data-testid=\"gallery-highlights-section\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <ScrollReveal>\n            <div className=\"text-center mb-16\">\n              <span className=\"text-primary font-semibold text-sm tracking-wider uppercase mb-4 block\">\n                Our Work\n              </span>\n              <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6 text-text-dark\" data-testid=\"gallery-title\">\n                Gallery Showcase\n              </h2>\n              <p className=\"text-gray-600 text-lg max-w-3xl mx-auto mb-8\" data-testid=\"gallery-description\">\n                Explore our portfolio of stunning transformations and beautiful spaces\n              </p>\n            </div>\n          </ScrollReveal>\n          \n          <GalleryGrid limit={6} />\n          \n          <div className=\"text-center mt-12\">\n            <Link href=\"/gallery\">\n              <Button className=\"btn-gradient text-lg px-8 py-4\" data-testid=\"view-gallery-button\">\n                <span>View Full Gallery</span>\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </section>\n\n      {/* Pricing Preview */}\n      <section className=\"py-24 bg-bg-light\" data-testid=\"pricing-preview-section\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <ScrollReveal>\n            <div className=\"text-center mb-16\">\n              <span className=\"text-primary font-semibold text-sm tracking-wider uppercase mb-4 block\">\n                Packages\n              </span>\n              <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6 text-text-dark\" data-testid=\"pricing-title\">\n                Choose Your Perfect Package\n              </h2>\n              <p className=\"text-gray-600 text-lg max-w-3xl mx-auto\" data-testid=\"pricing-description\">\n                Premium beauty packages tailored to your needs and preferences\n              </p>\n            </div>\n          </ScrollReveal>\n          \n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {pricingPlans.map((plan, index) => (\n              <PricingCard\n                key={plan.title}\n                {...plan}\n                delay={index * 100}\n              />\n            ))}\n          </div>\n          \n          <div className=\"text-center mt-12\">\n            <Link href=\"/pricing\" className=\"inline-flex items-center text-primary font-semibold text-lg hover:text-secondary transition-colors\" data-testid=\"view-pricing-link\">\n              View Detailed Pricing <ArrowRight className=\"ml-2 w-5 h-5\" />\n            </Link>\n          </div>\n        </div>\n      </section>\n\n      {/* Booking CTA */}\n      <section className=\"py-24 bg-white\" data-testid=\"booking-cta-section\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <ScrollReveal>\n            <div className=\"bg-gradient-to-r from-secondary via-primary to-accent rounded-3xl p-12 md:p-16 text-center text-white relative overflow-hidden\">\n              <div className=\"absolute top-0 left-0 w-64 h-64 bg-white/10 rounded-full blur-3xl\"></div>\n              <div className=\"absolute bottom-0 right-0 w-64 h-64 bg-white/10 rounded-full blur-3xl\"></div>\n              \n              <div className=\"relative z-10\">\n                <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6\" data-testid=\"cta-title\">\n                  Ready for Your Transformation?\n                </h2>\n                <p className=\"text-xl mb-10 text-gray-100 max-w-3xl mx-auto\" data-testid=\"cta-description\">\n                  Book your luxury beauty experience today and discover the confidence that comes with looking and feeling your absolute best\n                </p>\n                <div className=\"flex flex-col sm:flex-row gap-4 justify-center items-center\">\n                  <Link href=\"/booking\">\n                    <Button \n                      className=\"bg-white text-primary px-10 py-4 rounded-full font-semibold text-lg hover:bg-gold hover:text-white transition-all duration-300 shadow-xl\"\n                      data-testid=\"cta-book-button\"\n                    >\n                      Book Appointment Now\n                    </Button>\n                  </Link>\n                  <Link href=\"/contact\">\n                    <Button \n                      variant=\"outline\" \n                      className=\"bg-transparent border-2 border-white text-white px-10 py-4 rounded-full font-semibold text-lg hover:bg-white hover:text-primary transition-all duration-300\"\n                      data-testid=\"cta-contact-button\"\n                    >\n                      Contact Us\n                    </Button>\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </ScrollReveal>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Home;\n","size_bytes":21872},"client/src/pages/Pricing.tsx":{"content":"import { Link } from 'wouter';\nimport { Check, Star, ArrowRight, Phone, Calendar } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport ScrollReveal from '@/components/ui/ScrollReveal';\nimport PricingCard from '@/components/ui/PricingCard';\nimport { pricingPlans } from '../data/services';\n\nconst Pricing = () => {\n  const addOnServices = [\n    { name: 'Hair Extensions', price: 3000, description: 'Premium quality extensions' },\n    { name: 'Eyebrow Threading', price: 500, description: 'Precision shaping' },\n    { name: 'Lash Extensions', price: 2000, description: 'Volume or classic style' },\n    { name: 'Deep Conditioning', price: 1500, description: 'Intensive hair treatment' },\n    { name: 'Makeup Touch-up', price: 800, description: 'Event day refresh' },\n    { name: 'Nail Art (per nail)', price: 200, description: 'Custom designs' },\n  ];\n\n  return (\n    <div className=\"min-h-screen pt-20\" data-testid=\"pricing-page\">\n      {/* Hero Section */}\n      <section \n        className=\"relative py-32 flex items-center justify-center overflow-hidden parallax\"\n        style={{\n          backgroundImage: 'url(https://images.unsplash.com/photo-1560066984-138dadb4c035?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&h=1080)'\n        }}\n        data-testid=\"pricing-hero\"\n      >\n        <div className=\"hero-gradient absolute inset-0\"></div>\n        <div className=\"relative z-10 text-center text-white px-4 max-w-4xl mx-auto\">\n          <ScrollReveal>\n            <span className=\"inline-block px-6 py-2 bg-gold/20 backdrop-blur-sm border border-gold/30 rounded-full text-gold font-semibold text-sm tracking-wider mb-6\">\n              PACKAGES & PRICING\n            </span>\n            <h1 className=\"text-5xl md:text-6xl font-playfair font-bold mb-6\" data-testid=\"pricing-hero-title\">\n              Luxury That Fits Your Budget\n            </h1>\n            <p className=\"text-xl text-gray-100 max-w-2xl mx-auto\" data-testid=\"pricing-hero-description\">\n              Choose from our carefully crafted packages designed to give you the perfect beauty experience\n            </p>\n          </ScrollReveal>\n        </div>\n      </section>\n\n      {/* Pricing Plans */}\n      <section className=\"py-24 bg-white\" data-testid=\"pricing-plans\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <ScrollReveal>\n            <div className=\"text-center mb-16\">\n              <span className=\"text-primary font-semibold text-sm tracking-wider uppercase mb-4 block\">\n                Choose Your Plan\n              </span>\n              <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6 text-text-dark\" data-testid=\"plans-title\">\n                Membership Packages\n              </h2>\n              <p className=\"text-gray-600 text-lg max-w-3xl mx-auto\" data-testid=\"plans-description\">\n                Enjoy regular beauty treatments with exclusive member benefits and significant savings\n              </p>\n            </div>\n          </ScrollReveal>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {pricingPlans.map((plan, index) => (\n              <PricingCard\n                key={plan.id}\n                title={plan.title}\n                price={plan.price}\n                period={plan.period}\n                features={plan.features}\n                isPopular={plan.popular}\n                buttonText={plan.buttonText}\n                delay={index * 100}\n              />\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Individual Services Pricing */}\n      <section className=\"py-24 bg-bg-light\" data-testid=\"individual-services\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <ScrollReveal>\n            <div className=\"text-center mb-16\">\n              <span className=\"text-primary font-semibold text-sm tracking-wider uppercase mb-4 block\">\n                A La Carte\n              </span>\n              <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6 text-text-dark\" data-testid=\"services-title\">\n                Individual Services\n              </h2>\n              <p className=\"text-gray-600 text-lg max-w-3xl mx-auto\" data-testid=\"services-description\">\n                Book individual treatments when you need them most\n              </p>\n            </div>\n          </ScrollReveal>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {[\n              {\n                category: 'Hair Services',\n                services: [\n                  { name: 'Hair Cut & Style', price: '₹1,500 - ₹3,000' },\n                  { name: 'Hair Color', price: '₹3,500 - ₹8,000' },\n                  { name: 'Hair Spa', price: '₹2,000 - ₹4,000' },\n                  { name: 'Keratin Treatment', price: '₹8,000 - ₹15,000' },\n                ]\n              },\n              {\n                category: 'Skin Treatments',\n                services: [\n                  { name: 'Basic Facial', price: '₹2,000 - ₹3,000' },\n                  { name: 'HydraFacial', price: '₹4,500 - ₹6,000' },\n                  { name: 'Anti-Aging Treatment', price: '₹6,000 - ₹8,000' },\n                  { name: 'Acne Treatment', price: '₹3,500 - ₹5,000' },\n                ]\n              },\n              {\n                category: 'Nail Care',\n                services: [\n                  { name: 'Manicure', price: '₹800 - ₹1,200' },\n                  { name: 'Pedicure', price: '₹1,000 - ₹1,500' },\n                  { name: 'Gel Manicure', price: '₹1,500 - ₹2,000' },\n                  { name: 'Nail Extensions', price: '₹2,500 - ₹4,000' },\n                ]\n              },\n              {\n                category: 'Makeup Services',\n                services: [\n                  { name: 'Party Makeup', price: '₹4,000 - ₹6,000' },\n                  { name: 'Bridal Makeup', price: '₹12,000 - ₹25,000' },\n                  { name: 'Makeup Lesson', price: '₹3,000 - ₹5,000' },\n                  { name: 'Photography Makeup', price: '₹6,000 - ₹8,000' },\n                ]\n              },\n              {\n                category: 'Spa Services',\n                services: [\n                  { name: 'Body Massage', price: '₹3,500 - ₹5,000' },\n                  { name: 'Hot Stone Therapy', price: '₹4,500 - ₹6,000' },\n                  { name: 'Aromatherapy', price: '₹3,500 - ₹4,500' },\n                  { name: 'Body Wrap', price: '₹4,000 - ₹5,500' },\n                ]\n              },\n              {\n                category: 'Bridal Packages',\n                services: [\n                  { name: 'Pre-Bridal Package', price: '₹25,000 - ₹40,000' },\n                  { name: 'Bridal Day Package', price: '₹35,000 - ₹50,000' },\n                  { name: 'Mehendi Package', price: '₹15,000 - ₹25,000' },\n                  { name: 'Couple Package', price: '₹50,000 - ₹75,000' },\n                ]\n              },\n            ].map((category, index) => (\n              <ScrollReveal key={category.category} delay={index * 100}>\n                <Card \n                  className=\"h-full hover:shadow-xl transition-all duration-300\"\n                  data-testid={`service-category-${index}`}\n                >\n                  <CardHeader>\n                    <CardTitle className=\"text-xl font-playfair text-primary\">\n                      {category.category}\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-4\">\n                      {category.services.map((service, serviceIndex) => (\n                        <div \n                          key={service.name}\n                          className=\"flex justify-between items-center py-2 border-b border-gray-100 last:border-b-0\"\n                          data-testid={`service-item-${index}-${serviceIndex}`}\n                        >\n                          <span className=\"text-gray-700\">{service.name}</span>\n                          <span className=\"font-semibold text-primary\">{service.price}</span>\n                        </div>\n                      ))}\n                    </div>\n                  </CardContent>\n                </Card>\n              </ScrollReveal>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Add-On Services */}\n      <section className=\"py-24 bg-white\" data-testid=\"addon-services\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <ScrollReveal>\n            <div className=\"text-center mb-16\">\n              <span className=\"text-primary font-semibold text-sm tracking-wider uppercase mb-4 block\">\n                Enhance Your Experience\n              </span>\n              <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6 text-text-dark\" data-testid=\"addon-title\">\n                Add-On Services\n              </h2>\n              <p className=\"text-gray-600 text-lg max-w-3xl mx-auto\" data-testid=\"addon-description\">\n                Complete your beauty transformation with our premium add-on services\n              </p>\n            </div>\n          </ScrollReveal>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {addOnServices.map((addon, index) => (\n              <ScrollReveal key={addon.name} delay={index * 100}>\n                <div \n                  className=\"bg-bg-light rounded-2xl p-6 hover:shadow-lg transition-all duration-300\"\n                  data-testid={`addon-service-${index}`}\n                >\n                  <div className=\"flex justify-between items-start mb-3\">\n                    <h3 className=\"text-lg font-playfair font-bold text-text-dark\">\n                      {addon.name}\n                    </h3>\n                    <span className=\"text-xl font-bold text-primary\">\n                      ₹{addon.price.toLocaleString()}\n                    </span>\n                  </div>\n                  <p className=\"text-gray-600 text-sm\">{addon.description}</p>\n                </div>\n              </ScrollReveal>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Custom Package Request */}\n      <section className=\"py-24 bg-bg-light\" data-testid=\"custom-package\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid lg:grid-cols-2 gap-16 items-center\">\n            <ScrollReveal>\n              <div>\n                <span className=\"text-primary font-semibold text-sm tracking-wider uppercase mb-4 block\">\n                  Personalized Service\n                </span>\n                <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-8 text-text-dark\" data-testid=\"custom-title\">\n                  Create Your Custom Package\n                </h2>\n                <p className=\"text-gray-600 text-lg mb-8 leading-relaxed\" data-testid=\"custom-description\">\n                  Have specific needs or special requirements? Let us create a personalized package that perfectly fits your beauty goals and budget.\n                </p>\n                <div className=\"space-y-4 mb-8\">\n                  {[\n                    'Personalized consultation with our beauty experts',\n                    'Custom service combinations based on your needs',\n                    'Flexible scheduling and payment options',\n                    'Special pricing for bulk bookings',\n                  ].map((benefit, index) => (\n                    <div \n                      key={index}\n                      className=\"flex items-center\"\n                      data-testid={`custom-benefit-${index}`}\n                    >\n                      <Check className=\"w-5 h-5 text-primary mr-3 flex-shrink-0\" />\n                      <span className=\"text-gray-600\">{benefit}</span>\n                    </div>\n                  ))}\n                </div>\n                <div className=\"flex gap-4\">\n                  <Link href=\"/contact\">\n                    <Button className=\"bg-primary text-white hover:bg-secondary px-8 py-3\">\n                      <Phone className=\"w-4 h-4 mr-2\" />\n                      Call to Discuss\n                    </Button>\n                  </Link>\n                  <Link href=\"/booking\">\n                    <Button variant=\"outline\" className=\"border-primary text-primary hover:bg-primary hover:text-white px-8 py-3\">\n                      <Calendar className=\"w-4 h-4 mr-2\" />\n                      Book Consultation\n                    </Button>\n                  </Link>\n                </div>\n              </div>\n            </ScrollReveal>\n\n            <ScrollReveal delay={200}>\n              <Card className=\"shadow-xl\">\n                <CardHeader>\n                  <CardTitle className=\"text-2xl font-playfair text-center\">\n                    Request Custom Quote\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <form className=\"space-y-6\" data-testid=\"custom-package-form\">\n                    <div className=\"grid md:grid-cols-2 gap-4\">\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                          Full Name *\n                        </label>\n                        <Input \n                          placeholder=\"Your full name\"\n                          data-testid=\"custom-name-input\"\n                        />\n                      </div>\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                          Phone Number *\n                        </label>\n                        <Input \n                          placeholder=\"Your phone number\"\n                          data-testid=\"custom-phone-input\"\n                        />\n                      </div>\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Email Address *\n                      </label>\n                      <Input \n                        type=\"email\" \n                        placeholder=\"your.email@example.com\"\n                        data-testid=\"custom-email-input\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Services Interested In *\n                      </label>\n                      <Input \n                        placeholder=\"e.g., Bridal package, Hair + Makeup combo\"\n                        data-testid=\"custom-services-input\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Budget Range\n                      </label>\n                      <Input \n                        placeholder=\"e.g., ₹10,000 - ₹20,000\"\n                        data-testid=\"custom-budget-input\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Additional Requirements\n                      </label>\n                      <Textarea \n                        placeholder=\"Tell us about your specific needs, timeline, or any special requirements...\"\n                        rows={4}\n                        data-testid=\"custom-requirements-input\"\n                      />\n                    </div>\n                    <Button \n                      type=\"submit\" \n                      className=\"w-full bg-primary text-white hover:bg-secondary py-3\"\n                      data-testid=\"custom-submit-button\"\n                    >\n                      Request Custom Quote\n                    </Button>\n                  </form>\n                </CardContent>\n              </Card>\n            </ScrollReveal>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-24 bg-secondary text-white\" data-testid=\"pricing-cta\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <ScrollReveal>\n            <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6\" data-testid=\"pricing-cta-title\">\n              Ready to Begin Your Beauty Journey?\n            </h2>\n            <p className=\"text-xl mb-10 text-gray-100 max-w-3xl mx-auto\" data-testid=\"pricing-cta-description\">\n              Choose your perfect package and experience the luxury you deserve\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center items-center\">\n              <Link href=\"/booking\">\n                <Button \n                  className=\"bg-white text-secondary px-10 py-4 rounded-full font-semibold text-lg hover:bg-gold hover:text-white transition-all duration-300 shadow-xl\"\n                  data-testid=\"pricing-book-button\"\n                >\n                  Book Your Package\n                </Button>\n              </Link>\n              <Link href=\"/contact\" className=\"inline-flex items-center text-white font-semibold text-lg hover:text-gold transition-colors\">\n                Have Questions? Contact Us <ArrowRight className=\"ml-2 w-5 h-5\" />\n              </Link>\n            </div>\n          </ScrollReveal>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Pricing;\n","size_bytes":17731},"client/src/pages/Services.tsx":{"content":"import { useState } from 'react';\nimport { Link } from 'wouter';\nimport { Scissors, Sparkles, HandHeart, Paintbrush, Leaf, Crown, ArrowRight } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport ScrollReveal from '@/components/ui/ScrollReveal';\nimport ServiceCard from '@/components/ui/ServiceCard';\n\nconst Services = () => {\n  const [activeFilter, setActiveFilter] = useState('all');\n\n  const services = [\n    {\n      id: 'hair',\n      title: 'Hair Services',\n      description: 'Transform your hair with precision cuts, vibrant colors, nourishing spa treatments, and keratin therapy by our expert stylists.',\n      image: 'https://images.unsplash.com/photo-1562322140-8baeececf3df?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n      icon: Scissors,\n      href: '/services/hair',\n      iconColor: 'bg-primary/10 text-primary',\n      category: 'hair',\n      features: ['Hair Cutting & Styling', 'Color & Highlights', 'Hair Spa Treatments', 'Keratin & Smoothening'],\n    },\n    {\n      id: 'skin',\n      title: 'Skin Treatments',\n      description: 'Rejuvenate your skin with advanced facials, laser therapy, and personalized skincare solutions for a radiant, healthy glow.',\n      image: 'https://images.unsplash.com/photo-1570172619644-dfd03ed5d881?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n      icon: Sparkles,\n      href: '/services/skin',\n      iconColor: 'bg-secondary/10 text-secondary',\n      category: 'skin',\n      features: ['Advanced Facials', 'Laser Therapy', 'Anti-Aging Treatments', 'Acne Solutions'],\n    },\n    {\n      id: 'nails',\n      title: 'Nail Care',\n      description: 'Experience perfection at your fingertips with exquisite nail art, luxurious manicures, pedicures, and nail extensions.',\n      image: 'https://images.unsplash.com/photo-1604654894610-df63bc536371?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n      icon: HandHeart,\n      href: '/services/nails',\n      iconColor: 'bg-accent/10 text-accent',\n      category: 'nails',\n      features: ['Nail Art Design', 'Manicure & Pedicure', 'Nail Extensions', 'Gel Polish'],\n    },\n    {\n      id: 'makeup',\n      title: 'Makeup & Beauty',\n      description: 'From bridal glamour to party looks, our professional makeup artists create stunning transformations that captivate.',\n      image: 'https://images.unsplash.com/photo-1487412947147-5cebf100ffc2?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n      icon: Paintbrush,\n      href: '/services/makeup',\n      iconColor: 'bg-gold/10 text-gold',\n      category: 'makeup',\n      features: ['Bridal Makeup', 'Party & Event Makeup', 'Photography Makeup', 'Makeup Lessons'],\n    },\n    {\n      id: 'spa',\n      title: 'Spa & Relaxation',\n      description: 'Unwind and rejuvenate with therapeutic massages, aromatherapy, and holistic wellness treatments in our serene sanctuary.',\n      image: 'https://images.unsplash.com/photo-1544161515-4ab6ce6db874?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n      icon: Leaf,\n      href: '/services/spa',\n      iconColor: 'bg-primary/10 text-primary',\n      category: 'spa',\n      features: ['Therapeutic Massage', 'Aromatherapy', 'Body Treatments', 'Wellness Packages'],\n    },\n    {\n      id: 'bridal',\n      title: 'Bridal Packages',\n      description: 'Comprehensive bridal beauty services including pre-bridal prep, bridal day styling, and couple packages for your perfect day.',\n      image: 'https://images.unsplash.com/photo-1519741497674-611481863552?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n      icon: Crown,\n      href: '/services/bridal',\n      iconColor: 'bg-secondary/10 text-secondary',\n      category: 'bridal',\n      features: ['Pre-Bridal Packages', 'Bridal Day Styling', 'Couple Packages', 'Bridal Party Services'],\n    },\n  ];\n\n  const categories = [\n    { id: 'all', label: 'All Services' },\n    { id: 'hair', label: 'Hair' },\n    { id: 'skin', label: 'Skin' },\n    { id: 'nails', label: 'Nails' },\n    { id: 'makeup', label: 'Makeup' },\n    { id: 'spa', label: 'Spa' },\n    { id: 'bridal', label: 'Bridal' },\n  ];\n\n  const filteredServices = activeFilter === 'all' \n    ? services \n    : services.filter(service => service.category === activeFilter);\n\n  return (\n    <div className=\"min-h-screen pt-20\" data-testid=\"services-page\">\n      {/* Hero Section */}\n      <section \n        className=\"relative py-32 flex items-center justify-center overflow-hidden parallax\"\n        style={{\n          backgroundImage: 'url(https://images.unsplash.com/photo-1560066984-138dadb4c035?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&h=1080)'\n        }}\n        data-testid=\"services-hero\"\n      >\n        <div className=\"hero-gradient absolute inset-0\"></div>\n        <div className=\"relative z-10 text-center text-white px-4 max-w-4xl mx-auto\">\n          <ScrollReveal>\n            <span className=\"inline-block px-6 py-2 bg-gold/20 backdrop-blur-sm border border-gold/30 rounded-full text-gold font-semibold text-sm tracking-wider mb-6\">\n              OUR SERVICES\n            </span>\n            <h1 className=\"text-5xl md:text-6xl font-playfair font-bold mb-6\" data-testid=\"services-hero-title\">\n              Explore Our Services\n            </h1>\n            <p className=\"text-xl text-gray-100 max-w-2xl mx-auto\" data-testid=\"services-hero-description\">\n              Discover our comprehensive range of luxury beauty treatments designed to enhance your natural beauty\n            </p>\n          </ScrollReveal>\n        </div>\n      </section>\n\n      {/* Services Filter */}\n      <section className=\"py-12 bg-white\" data-testid=\"services-filter\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <ScrollReveal>\n            <div className=\"flex flex-wrap justify-center gap-4\">\n              {categories.map((category) => (\n                <button\n                  key={category.id}\n                  onClick={() => setActiveFilter(category.id)}\n                  className={`px-8 py-3 rounded-full font-medium transition-all duration-300 ${\n                    activeFilter === category.id\n                      ? 'bg-primary text-white shadow-lg'\n                      : 'bg-bg-light text-gray-600 hover:bg-primary hover:text-white'\n                  }`}\n                  data-testid={`filter-button-${category.id}`}\n                >\n                  {category.label}\n                </button>\n              ))}\n            </div>\n          </ScrollReveal>\n        </div>\n      </section>\n\n      {/* Services Grid */}\n      <section className=\"py-20 bg-bg-light\" data-testid=\"services-grid\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {filteredServices.map((service, index) => (\n              <div key={service.id} className=\"group\">\n                <ScrollReveal delay={index * 100}>\n                  <div className=\"service-card bg-white rounded-2xl overflow-hidden shadow-lg h-full\">\n                    <div className=\"img-zoom-container h-64\">\n                      <img \n                        src={service.image} \n                        alt={service.title}\n                        className=\"img-zoom w-full h-full object-cover\"\n                        data-testid={`service-image-${service.id}`}\n                      />\n                    </div>\n                    \n                    <div className=\"p-8 flex flex-col h-full\">\n                      <div className={`w-14 h-14 ${service.iconColor} rounded-full flex items-center justify-center mb-4`}>\n                        <service.icon className=\"text-2xl\" />\n                      </div>\n                      \n                      <h3 \n                        className=\"text-2xl font-playfair font-bold mb-3 text-text-dark\"\n                        data-testid={`service-title-${service.id}`}\n                      >\n                        {service.title}\n                      </h3>\n                      \n                      <p \n                        className=\"text-gray-600 mb-6 leading-relaxed flex-grow\"\n                        data-testid={`service-description-${service.id}`}\n                      >\n                        {service.description}\n                      </p>\n\n                      <div className=\"mb-6\">\n                        <h4 className=\"font-semibold text-text-dark mb-3\">What's Included:</h4>\n                        <ul className=\"space-y-1\">\n                          {service.features.map((feature, featureIndex) => (\n                            <li \n                              key={featureIndex} \n                              className=\"text-sm text-gray-600 flex items-center\"\n                              data-testid={`service-feature-${service.id}-${featureIndex}`}\n                            >\n                              <span className=\"w-2 h-2 bg-primary rounded-full mr-3 flex-shrink-0\"></span>\n                              {feature}\n                            </li>\n                          ))}\n                        </ul>\n                      </div>\n                      \n                      <div className=\"flex gap-3\">\n                        <Link href={service.href} className=\"flex-1\">\n                          <Button \n                            className=\"w-full bg-primary text-white hover:bg-secondary\"\n                            data-testid={`service-details-button-${service.id}`}\n                          >\n                            View Details\n                          </Button>\n                        </Link>\n                        <Link href=\"/booking\">\n                          <Button \n                            variant=\"outline\" \n                            className=\"border-primary text-primary hover:bg-primary hover:text-white\"\n                            data-testid={`service-book-button-${service.id}`}\n                          >\n                            Book Now\n                          </Button>\n                        </Link>\n                      </div>\n                    </div>\n                  </div>\n                </ScrollReveal>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Service Features */}\n      <section className=\"py-24 bg-white\" data-testid=\"service-features\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <ScrollReveal>\n            <div className=\"text-center mb-16\">\n              <span className=\"text-primary font-semibold text-sm tracking-wider uppercase mb-4 block\">\n                Why Choose Our Services\n              </span>\n              <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6 text-text-dark\" data-testid=\"features-title\">\n                Premium Service Standards\n              </h2>\n              <p className=\"text-gray-600 text-lg max-w-3xl mx-auto\" data-testid=\"features-description\">\n                Every service is delivered with the highest standards of quality, hygiene, and customer care\n              </p>\n            </div>\n          </ScrollReveal>\n\n          <div className=\"grid md:grid-cols-3 gap-8\">\n            {[\n              {\n                icon: '🏆',\n                title: 'Premium Products',\n                description: 'We use only the finest, internationally acclaimed beauty products and tools for all treatments.',\n              },\n              {\n                icon: '🧑‍⚕️',\n                title: 'Expert Professionals',\n                description: 'Our team consists of certified beauty experts with extensive training and years of experience.',\n              },\n              {\n                icon: '🛡️',\n                title: 'Hygiene Standards',\n                description: 'Hospital-grade sterilization and safety protocols ensure your health and safety at all times.',\n              },\n              {\n                icon: '💎',\n                title: 'Luxurious Experience',\n                description: 'Every visit is designed to be a luxurious, relaxing experience in our premium facilities.',\n              },\n              {\n                icon: '📞',\n                title: 'Personalized Care',\n                description: 'Each treatment is customized to your unique needs, preferences, and skin/hair type.',\n              },\n              {\n                icon: '🎯',\n                title: 'Guaranteed Results',\n                description: 'We stand behind our work with a satisfaction guarantee and follow-up care support.',\n              },\n            ].map((feature, index) => (\n              <ScrollReveal key={feature.title} delay={index * 100}>\n                <div \n                  className=\"text-center p-6 rounded-2xl bg-bg-light hover:shadow-lg transition-all duration-300\"\n                  data-testid={`feature-${index}`}\n                >\n                  <div className=\"text-4xl mb-4\">{feature.icon}</div>\n                  <h3 \n                    className=\"text-xl font-playfair font-bold mb-3 text-text-dark\"\n                    data-testid={`feature-title-${index}`}\n                  >\n                    {feature.title}\n                  </h3>\n                  <p \n                    className=\"text-gray-600 leading-relaxed\"\n                    data-testid={`feature-description-${index}`}\n                  >\n                    {feature.description}\n                  </p>\n                </div>\n              </ScrollReveal>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-24 bg-gradient-to-r from-secondary via-primary to-accent text-white\" data-testid=\"services-cta\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <ScrollReveal>\n            <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6\" data-testid=\"cta-title\">\n              Ready to Experience Luxury?\n            </h2>\n            <p className=\"text-xl mb-10 text-gray-100 max-w-3xl mx-auto\" data-testid=\"cta-description\">\n              Book your appointment today and discover why thousands of clients trust us with their beauty needs\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center items-center\">\n              <Link href=\"/booking\">\n                <Button \n                  className=\"bg-white text-primary px-10 py-4 rounded-full font-semibold text-lg hover:bg-gold hover:text-white transition-all duration-300 shadow-xl\"\n                  data-testid=\"cta-book-button\"\n                >\n                  Book Your Service\n                </Button>\n              </Link>\n              <Link href=\"/contact\" className=\"inline-flex items-center text-white font-semibold text-lg hover:text-gold transition-colors\">\n                Have Questions? Contact Us <ArrowRight className=\"ml-2 w-5 h-5\" />\n              </Link>\n            </div>\n          </ScrollReveal>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Services;\n","size_bytes":14995},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/components/layout/Footer.tsx":{"content":"import { Link } from 'wouter';\nimport { Sparkles, MapPin, Phone, Mail, Clock, Facebook, Instagram, Twitter, Youtube } from 'lucide-react';\n\nconst Footer = () => {\n  const quickLinks = [\n    { href: '/', label: 'Home' },\n    { href: '/about', label: 'About Us' },\n    { href: '/services', label: 'Services' },\n    { href: '/pricing', label: 'Pricing' },\n    { href: '/gallery', label: 'Gallery' },\n    { href: '/contact', label: 'Contact' },\n  ];\n\n  const serviceLinks = [\n    { href: '/services/hair', label: 'Hair Services' },\n    { href: '/services/skin', label: 'Skin Treatments' },\n    { href: '/services/nails', label: 'Nail Care' },\n    { href: '/services/makeup', label: 'Makeup & Beauty' },\n    { href: '/services/spa', label: 'Spa & Relaxation' },\n    { href: '/services/bridal', label: 'Bridal Packages' },\n  ];\n\n  const socialLinks = [\n    { href: '#', icon: Facebook, label: 'Facebook' },\n    { href: '#', icon: Instagram, label: 'Instagram' },\n    { href: '#', icon: Twitter, label: 'Twitter' },\n    { href: '#', icon: Youtube, label: 'YouTube' },\n  ];\n\n  return (\n    <footer className=\"bg-text-dark text-gray-300\" data-testid=\"footer\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16\">\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-12 mb-12\">\n          {/* Brand Section */}\n          <div data-testid=\"footer-brand\">\n            <div className=\"flex items-center space-x-3 mb-6\">\n              <Sparkles className=\"text-3xl text-gold\" />\n              <span className=\"text-2xl font-playfair font-bold text-white\">Luxe Beauty</span>\n            </div>\n            <p className=\"text-gray-400 mb-6 leading-relaxed\">\n              Your destination for premium beauty and wellness services. Experience luxury that transforms.\n            </p>\n            <div className=\"flex space-x-4\">\n              {socialLinks.map((social) => (\n                <a \n                  key={social.label}\n                  href={social.href} \n                  className=\"w-10 h-10 bg-white/10 rounded-full flex items-center justify-center hover:bg-gold transition-colors\"\n                  data-testid={`social-link-${social.label.toLowerCase()}`}\n                >\n                  <social.icon className=\"w-5 h-5 text-white\" />\n                </a>\n              ))}\n            </div>\n          </div>\n\n          {/* Quick Links */}\n          <div data-testid=\"footer-quick-links\">\n            <h3 className=\"text-white font-playfair font-bold text-xl mb-6\">Quick Links</h3>\n            <ul className=\"space-y-3\">\n              {quickLinks.map((link) => (\n                <li key={link.href}>\n                  <Link \n                    href={link.href}\n                    className=\"hover:text-gold transition-colors\"\n                    data-testid={`footer-link-${link.label.toLowerCase().replace(/\\s+/g, '-')}`}\n                  >\n                    {link.label}\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          {/* Services */}\n          <div data-testid=\"footer-services\">\n            <h3 className=\"text-white font-playfair font-bold text-xl mb-6\">Our Services</h3>\n            <ul className=\"space-y-3\">\n              {serviceLinks.map((link) => (\n                <li key={link.href}>\n                  <Link \n                    href={link.href}\n                    className=\"hover:text-gold transition-colors\"\n                    data-testid={`footer-service-link-${link.label.toLowerCase().replace(/\\s+/g, '-')}`}\n                  >\n                    {link.label}\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          {/* Contact Info */}\n          <div data-testid=\"footer-contact\">\n            <h3 className=\"text-white font-playfair font-bold text-xl mb-6\">Get in Touch</h3>\n            <ul className=\"space-y-4\">\n              <li className=\"flex items-start\">\n                <MapPin className=\"text-gold mt-1 mr-3 flex-shrink-0\" size={16} />\n                <span className=\"text-sm\">123 Beauty Boulevard, Luxury District, Mumbai 400001</span>\n              </li>\n              <li className=\"flex items-center\">\n                <Phone className=\"text-gold mr-3 flex-shrink-0\" size={16} />\n                <a \n                  href=\"tel:+911234567890\" \n                  className=\"hover:text-gold transition-colors text-sm\"\n                  data-testid=\"footer-phone-link\"\n                >\n                  +91 123 456 7890\n                </a>\n              </li>\n              <li className=\"flex items-center\">\n                <Mail className=\"text-gold mr-3 flex-shrink-0\" size={16} />\n                <a \n                  href=\"mailto:info@luxebeauty.com\" \n                  className=\"hover:text-gold transition-colors text-sm\"\n                  data-testid=\"footer-email-link\"\n                >\n                  info@luxebeauty.com\n                </a>\n              </li>\n              <li className=\"flex items-start\">\n                <Clock className=\"text-gold mt-1 mr-3 flex-shrink-0\" size={16} />\n                <div className=\"text-sm\">\n                  <p>Mon - Sat: 9:00 AM - 8:00 PM</p>\n                  <p>Sunday: 10:00 AM - 6:00 PM</p>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n\n        {/* Google Map Placeholder */}\n        <div className=\"mb-12\" data-testid=\"footer-map\">\n          <div className=\"bg-gray-800 rounded-lg h-64 flex items-center justify-center\">\n            <div className=\"text-center\">\n              <MapPin className=\"text-gold text-4xl mb-4 mx-auto\" />\n              <p className=\"text-gray-400\">Google Maps Integration</p>\n            </div>\n          </div>\n        </div>\n\n        {/* Bottom Bar */}\n        <div className=\"border-t border-gray-800 pt-8 flex flex-col md:flex-row justify-between items-center\">\n          <p className=\"text-gray-500 mb-4 md:mb-0\" data-testid=\"footer-copyright\">\n            &copy; 2024 Luxe Beauty Salon. All rights reserved.\n          </p>\n          <div className=\"flex space-x-6\">\n            <a \n              href=\"#\" \n              className=\"text-gray-500 hover:text-gold transition-colors text-sm\"\n              data-testid=\"footer-privacy-link\"\n            >\n              Privacy Policy\n            </a>\n            <a \n              href=\"#\" \n              className=\"text-gray-500 hover:text-gold transition-colors text-sm\"\n              data-testid=\"footer-terms-link\"\n            >\n              Terms of Service\n            </a>\n            <a \n              href=\"#\" \n              className=\"text-gray-500 hover:text-gold transition-colors text-sm\"\n              data-testid=\"footer-sitemap-link\"\n            >\n              Sitemap\n            </a>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","size_bytes":6881},"client/src/components/layout/Navbar.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'wouter';\nimport { Button } from '@/components/ui/button';\nimport { Sheet, SheetContent, SheetTrigger } from '@/components/ui/sheet';\nimport { Separator } from '@/components/ui/separator';\nimport { Menu, Sparkles, ChevronDown } from 'lucide-react';\n\nconst Navbar = () => {\n  const [isScrolled, setIsScrolled] = useState(false);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [location] = useLocation();\n\n  useEffect(() => {\n    const handleScroll = () => {\n      setIsScrolled(window.scrollY > 100);\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  const navLinks = [\n    { href: '/', label: 'Home' },\n    { href: '/about', label: 'About' },\n    { \n      href: '/services', \n      label: 'Services',\n      hasDropdown: true,\n      subLinks: [\n        { href: '/services/hair', label: 'Hair Services' },\n        { href: '/services/skin', label: 'Skin Treatments' },\n        { href: '/services/nails', label: 'Nail Care' },\n        { href: '/services/makeup', label: 'Makeup & Beauty' },\n        { href: '/services/spa', label: 'Spa & Relaxation' },\n        { href: '/services/bridal', label: 'Bridal Packages' },\n      ]\n    },\n    { href: '/pricing', label: 'Pricing' },\n    { href: '/gallery', label: 'Gallery' },\n    { href: '/contact', label: 'Contact' },\n  ];\n\n  return (\n    <>\n      <nav \n        className={`fixed top-0 left-0 w-full z-40 transition-all duration-300 ${\n          isScrolled ? 'navbar-scrolled' : ''\n        }`}\n        data-testid=\"navbar\"\n      >\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-20\">\n            {/* Logo */}\n            <Link href=\"/\" className=\"flex items-center space-x-3\" data-testid=\"logo-link\">\n              <Sparkles className=\"text-3xl text-primary\" />\n              <span className=\"text-2xl font-playfair font-bold text-text-dark\">Luxe Beauty</span>\n            </Link>\n\n            {/* Desktop Menu */}\n            <div className=\"hidden lg:flex items-center space-x-8\">\n              {navLinks.map((link) => (\n                <div key={link.href} className=\"relative group\">\n                  <Link \n                    href={link.href}\n                    className={`text-text-dark hover:text-primary transition-colors font-medium flex items-center ${\n                      location === link.href ? 'text-primary' : ''\n                    }`}\n                    data-testid={`nav-link-${link.label.toLowerCase()}`}\n                  >\n                    {link.label}\n                    {link.hasDropdown && <ChevronDown className=\"ml-1 h-4 w-4\" />}\n                  </Link>\n                  \n                  {/* Dropdown Menu */}\n                  {link.hasDropdown && (\n                    <div className=\"absolute top-full left-0 mt-2 w-56 bg-white rounded-lg shadow-xl opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-300 z-50\">\n                      {link.subLinks?.map((subLink) => (\n                        <Link \n                          key={subLink.href}\n                          href={subLink.href}\n                          className=\"block px-4 py-3 hover:bg-bg-light transition-colors text-text-dark hover:text-primary\"\n                          data-testid={`nav-sublink-${subLink.label.toLowerCase().replace(/\\s+/g, '-')}`}\n                        >\n                          {subLink.label}\n                        </Link>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n\n            {/* CTA Button */}\n            <div className=\"hidden lg:block\">\n              <Link href=\"/booking\">\n                <Button className=\"btn-gradient\" data-testid=\"book-appointment-button\">\n                  <span>Book Appointment</span>\n                </Button>\n              </Link>\n            </div>\n\n            {/* Mobile Menu Button */}\n            <Sheet open={isMobileMenuOpen} onOpenChange={setIsMobileMenuOpen}>\n              <SheetTrigger asChild>\n                <Button \n                  variant=\"ghost\" \n                  size=\"icon\" \n                  className=\"lg:hidden\"\n                  data-testid=\"mobile-menu-button\"\n                >\n                  <Menu className=\"h-6 w-6\" />\n                </Button>\n              </SheetTrigger>\n              <SheetContent side=\"right\" className=\"w-[300px] sm:w-[400px]\">\n                <div className=\"flex items-center space-x-3 mb-8\">\n                  <Sparkles className=\"text-2xl text-primary\" />\n                  <span className=\"text-xl font-playfair font-bold text-text-dark\">Luxe Beauty</span>\n                </div>\n                \n                <div className=\"space-y-4\">\n                  {navLinks.map((link) => (\n                    <div key={link.href}>\n                      <Link \n                        href={link.href}\n                        className={`block text-text-dark hover:text-primary transition-colors font-medium ${\n                          location === link.href ? 'text-primary' : ''\n                        }`}\n                        onClick={() => setIsMobileMenuOpen(false)}\n                        data-testid={`mobile-nav-link-${link.label.toLowerCase()}`}\n                      >\n                        {link.label}\n                      </Link>\n                      {link.hasDropdown && (\n                        <div className=\"pl-4 mt-2 space-y-2\">\n                          {link.subLinks?.map((subLink) => (\n                            <Link \n                              key={subLink.href}\n                              href={subLink.href}\n                              className=\"block text-sm text-gray-600 hover:text-primary transition-colors\"\n                              onClick={() => setIsMobileMenuOpen(false)}\n                              data-testid={`mobile-nav-sublink-${subLink.label.toLowerCase().replace(/\\s+/g, '-')}`}\n                            >\n                              {subLink.label}\n                            </Link>\n                          ))}\n                        </div>\n                      )}\n                      <Separator className=\"mt-4\" />\n                    </div>\n                  ))}\n                  <Link href=\"/booking\" onClick={() => setIsMobileMenuOpen(false)}>\n                    <Button className=\"w-full btn-gradient mt-6\" data-testid=\"mobile-book-appointment-button\">\n                      <span>Book Appointment</span>\n                    </Button>\n                  </Link>\n                </div>\n              </SheetContent>\n            </Sheet>\n          </div>\n        </div>\n      </nav>\n    </>\n  );\n};\n\nexport default Navbar;\n","size_bytes":6896},"client/src/components/ui/CounterSection.tsx":{"content":"import { useEffect, useRef, useState } from 'react';\nimport ScrollReveal from './ScrollReveal';\n\ninterface CounterProps {\n  target: number;\n  label: string;\n  delay?: number;\n}\n\nconst Counter = ({ target, label, delay = 0 }: CounterProps) => {\n  const [count, setCount] = useState(0);\n  const [hasAnimated, setHasAnimated] = useState(false);\n  const counterRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting && !hasAnimated) {\n          setHasAnimated(true);\n          \n          setTimeout(() => {\n            const duration = 2000;\n            const increment = target / (duration / 16);\n            let current = 0;\n\n            const updateCounter = () => {\n              current += increment;\n              if (current < target) {\n                setCount(Math.floor(current));\n                requestAnimationFrame(updateCounter);\n              } else {\n                setCount(target);\n              }\n            };\n\n            updateCounter();\n          }, delay);\n        }\n      },\n      { threshold: 0.5 }\n    );\n\n    if (counterRef.current) {\n      observer.observe(counterRef.current);\n    }\n\n    return () => {\n      if (counterRef.current) {\n        observer.unobserve(counterRef.current);\n      }\n    };\n  }, [target, hasAnimated, delay]);\n\n  return (\n    <div ref={counterRef} className=\"text-center\" data-testid={`counter-${label.toLowerCase().replace(/\\s+/g, '-')}`}>\n      <div className=\"text-5xl font-bold text-gold mb-2 font-playfair\" data-testid={`counter-value-${label.toLowerCase().replace(/\\s+/g, '-')}`}>\n        {count.toLocaleString()}\n      </div>\n      <p className=\"text-gray-600 font-semibold\" data-testid={`counter-label-${label.toLowerCase().replace(/\\s+/g, '-')}`}>\n        {label}\n      </p>\n    </div>\n  );\n};\n\nconst CounterSection = () => {\n  const stats = [\n    { target: 15, label: 'Years of Excellence' },\n    { target: 50000, label: 'Happy Clients' },\n    { target: 25, label: 'Expert Professionals' },\n    { target: 12, label: 'Industry Awards' },\n  ];\n\n  return (\n    <section className=\"py-20 bg-white\" data-testid=\"counter-section\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"grid md:grid-cols-4 gap-12\">\n          {stats.map((stat, index) => (\n            <ScrollReveal key={stat.label} delay={index * 100}>\n              <Counter \n                target={stat.target} \n                label={stat.label}\n              />\n            </ScrollReveal>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default CounterSection;\n","size_bytes":2650},"client/src/components/ui/FloatingActions.tsx":{"content":"import { Phone, MessageCircle, Calendar } from 'lucide-react';\n\nconst FloatingActions = () => {\n  const actions = [\n    {\n      href: 'https://wa.me/1234567890',\n      icon: MessageCircle,\n      bg: 'bg-green-500 hover:bg-green-600',\n      label: 'WhatsApp',\n      delay: '0.1s',\n    },\n    {\n      href: 'tel:+1234567890',\n      icon: Phone,\n      bg: 'bg-blue-500 hover:bg-blue-600',\n      label: 'Call',\n      delay: '0.2s',\n    },\n    {\n      href: '/booking',\n      icon: Calendar,\n      bg: 'bg-primary hover:bg-secondary',\n      label: 'Book Now',\n      delay: '0.3s',\n    },\n  ];\n\n  return (\n    <div className=\"fixed bottom-8 right-8 z-50 flex flex-col gap-4\" data-testid=\"floating-actions\">\n      {actions.map((action) => (\n        <a\n          key={action.label}\n          href={action.href}\n          target={action.href.startsWith('http') ? '_blank' : undefined}\n          rel={action.href.startsWith('http') ? 'noopener noreferrer' : undefined}\n          className={`w-14 h-14 ${action.bg} rounded-full flex items-center justify-center shadow-lg hover:shadow-2xl transition-all duration-300 animate-float`}\n          style={{ animationDelay: action.delay }}\n          data-testid={`floating-action-${action.label.toLowerCase().replace(/\\s+/g, '-')}`}\n        >\n          <action.icon className=\"text-white text-xl\" />\n          <span className=\"sr-only\">{action.label}</span>\n        </a>\n      ))}\n    </div>\n  );\n};\n\nexport default FloatingActions;\n","size_bytes":1465},"client/src/components/ui/GalleryGrid.tsx":{"content":"import { useState } from 'react';\nimport { X } from 'lucide-react';\nimport { galleryImages } from '../../data/gallery';\nimport ScrollReveal from './ScrollReveal';\n\ninterface GalleryGridProps {\n  showFilter?: boolean;\n  limit?: number;\n}\n\nconst GalleryGrid = ({ showFilter = false, limit }: GalleryGridProps) => {\n  const [selectedFilter, setSelectedFilter] = useState('all');\n  const [lightboxImage, setLightboxImage] = useState<string | null>(null);\n\n  const categories = ['all', 'bridal', 'hair', 'skin', 'nails', 'makeup', 'spa'];\n\n  const filteredImages = galleryImages.filter(image => \n    selectedFilter === 'all' || image.category === selectedFilter\n  );\n\n  const displayImages = limit ? filteredImages.slice(0, limit) : filteredImages;\n\n  const openLightbox = (imageSrc: string) => {\n    setLightboxImage(imageSrc);\n  };\n\n  const closeLightbox = () => {\n    setLightboxImage(null);\n  };\n\n  return (\n    <div data-testid=\"gallery-grid\">\n      {showFilter && (\n        <div className=\"flex flex-wrap justify-center gap-4 mb-12\" data-testid=\"gallery-filters\">\n          {categories.map((category) => (\n            <button\n              key={category}\n              onClick={() => setSelectedFilter(category)}\n              className={`px-6 py-3 rounded-full font-medium transition-all ${\n                selectedFilter === category\n                  ? 'bg-primary text-white'\n                  : 'bg-white text-gray-600 hover:bg-primary hover:text-white'\n              }`}\n              data-testid={`filter-button-${category}`}\n            >\n              {category.charAt(0).toUpperCase() + category.slice(1)}\n            </button>\n          ))}\n        </div>\n      )}\n\n      <div className=\"masonry-grid\">\n        {displayImages.map((image, index) => (\n          <ScrollReveal key={image.id} delay={index * 50} className=\"masonry-item\">\n            <div \n              className=\"img-zoom-container rounded-lg overflow-hidden shadow-lg cursor-pointer\"\n              onClick={() => openLightbox(image.src)}\n              data-testid={`gallery-item-${index}`}\n            >\n              <img \n                src={image.src} \n                alt={image.alt}\n                className=\"img-zoom w-full h-auto\"\n                loading=\"lazy\"\n                data-testid={`gallery-image-${index}`}\n              />\n            </div>\n          </ScrollReveal>\n        ))}\n      </div>\n\n      {/* Lightbox */}\n      {lightboxImage && (\n        <div \n          className=\"fixed inset-0 bg-black bg-opacity-90 z-50 flex items-center justify-center p-4\"\n          onClick={closeLightbox}\n          data-testid=\"lightbox\"\n        >\n          <div className=\"relative max-w-4xl max-h-full\">\n            <button\n              onClick={closeLightbox}\n              className=\"absolute -top-12 right-0 text-white hover:text-gray-300 transition-colors\"\n              data-testid=\"lightbox-close\"\n            >\n              <X size={32} />\n            </button>\n            <img \n              src={lightboxImage} \n              alt=\"Gallery preview\"\n              className=\"max-w-full max-h-full object-contain\"\n              data-testid=\"lightbox-image\"\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GalleryGrid;\n","size_bytes":3256},"client/src/components/ui/Preloader.tsx":{"content":"import { useEffect, useState } from 'react';\nimport { Sparkles } from 'lucide-react';\n\nconst Preloader = () => {\n  const [isVisible, setIsVisible] = useState(true);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsVisible(false);\n    }, 2000);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  if (!isVisible) return null;\n\n  return (\n    <div \n      className={`fixed inset-0 bg-gradient-to-br from-secondary to-primary z-50 flex items-center justify-center transition-all duration-500 ${\n        !isVisible ? 'opacity-0 invisible' : ''\n      }`}\n      data-testid=\"preloader\"\n    >\n      <div className=\"text-center text-white\">\n        <div className=\"mb-4 animate-pulse\">\n          <Sparkles className=\"text-6xl mx-auto text-gold\" />\n        </div>\n        <h1 className=\"text-4xl font-playfair font-bold animate-pulse\" data-testid=\"preloader-text\">\n          Luxe Beauty\n        </h1>\n        <div className=\"mt-8\">\n          <div className=\"w-16 h-16 border-4 border-white/30 border-t-gold rounded-full animate-spin mx-auto\"></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Preloader;\n","size_bytes":1134},"client/src/components/ui/PricingCard.tsx":{"content":"import { Link } from 'wouter';\nimport { Check, Star } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport ScrollReveal from './ScrollReveal';\n\ninterface PricingFeature {\n  text: string;\n  included: boolean;\n}\n\ninterface PricingCardProps {\n  title: string;\n  price: number;\n  period?: string;\n  features: PricingFeature[];\n  isPopular?: boolean;\n  buttonText?: string;\n  delay?: number;\n}\n\nconst PricingCard = ({ \n  title, \n  price, \n  period = '/month',\n  features, \n  isPopular = false,\n  buttonText = 'Select Plan',\n  delay = 0 \n}: PricingCardProps) => {\n  return (\n    <ScrollReveal delay={delay}>\n      <div \n        className={`bg-white rounded-2xl p-8 shadow-lg gold-border-hover transition-all duration-300 relative ${\n          isPopular ? 'bg-gradient-to-br from-primary to-secondary text-white transform lg:-translate-y-4' : ''\n        }`}\n        data-testid={`pricing-card-${title.toLowerCase()}`}\n      >\n        {isPopular && (\n          <div \n            className=\"absolute -top-4 left-1/2 transform -translate-x-1/2 bg-gold text-white px-6 py-1 rounded-full text-sm font-semibold\"\n            data-testid=\"popular-badge\"\n          >\n            <Star className=\"inline w-4 h-4 mr-1\" />\n            MOST POPULAR\n          </div>\n        )}\n        \n        <h3 \n          className={`text-2xl font-playfair font-bold mb-4 ${isPopular ? 'text-white' : 'text-text-dark'}`}\n          data-testid={`pricing-title-${title.toLowerCase()}`}\n        >\n          {title}\n        </h3>\n        \n        <div className=\"mb-6\">\n          <span \n            className={`text-4xl font-bold ${isPopular ? 'text-white' : 'text-primary'}`}\n            data-testid={`pricing-price-${title.toLowerCase()}`}\n          >\n            ₹{price.toLocaleString()}\n          </span>\n          <span className={`text-sm ${isPopular ? 'text-gray-200' : 'text-gray-500'}`}>\n            {period}\n          </span>\n        </div>\n        \n        <ul className=\"space-y-3 mb-8\">\n          {features.map((feature, index) => (\n            <li key={index} className=\"flex items-start\">\n              <Check \n                className={`mt-1 mr-3 flex-shrink-0 w-4 h-4 ${\n                  feature.included \n                    ? (isPopular ? 'text-gold' : 'text-primary')\n                    : 'text-gray-400'\n                }`} \n              />\n              <span \n                className={`text-sm ${\n                  isPopular ? 'text-white' : 'text-gray-600'\n                } ${!feature.included ? 'line-through opacity-50' : ''}`}\n                data-testid={`pricing-feature-${title.toLowerCase()}-${index}`}\n              >\n                {feature.text}\n              </span>\n            </li>\n          ))}\n        </ul>\n        \n        <Link href=\"/booking\">\n          <Button \n            className={`w-full ${\n              isPopular \n                ? 'bg-white text-primary hover:bg-gold hover:text-white' \n                : 'bg-bg-light text-primary hover:bg-primary hover:text-white'\n            } transition-all duration-300`}\n            data-testid={`pricing-button-${title.toLowerCase()}`}\n          >\n            {buttonText}\n          </Button>\n        </Link>\n      </div>\n    </ScrollReveal>\n  );\n};\n\nexport default PricingCard;\n","size_bytes":3270},"client/src/components/ui/ScrollReveal.tsx":{"content":"import { useEffect, useRef, useState } from 'react';\n\ninterface ScrollRevealProps {\n  children: React.ReactNode;\n  className?: string;\n  delay?: number;\n}\n\nconst ScrollReveal = ({ children, className = '', delay = 0 }: ScrollRevealProps) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const elementRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          setTimeout(() => {\n            setIsVisible(true);\n          }, delay);\n        }\n      },\n      {\n        threshold: 0.1,\n        rootMargin: '-50px',\n      }\n    );\n\n    if (elementRef.current) {\n      observer.observe(elementRef.current);\n    }\n\n    return () => {\n      if (elementRef.current) {\n        observer.unobserve(elementRef.current);\n      }\n    };\n  }, [delay]);\n\n  return (\n    <div\n      ref={elementRef}\n      className={`transition-all duration-700 ease-out ${\n        isVisible\n          ? 'opacity-100 translate-y-0'\n          : 'opacity-0 translate-y-8'\n      } ${className}`}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default ScrollReveal;\n","size_bytes":1153},"client/src/components/ui/ServiceCard.tsx":{"content":"import { Link } from 'wouter';\nimport { ArrowRight, LucideIcon } from 'lucide-react';\nimport ScrollReveal from './ScrollReveal';\n\ninterface ServiceCardProps {\n  title: string;\n  description: string;\n  image: string;\n  icon: LucideIcon;\n  href: string;\n  iconColor: string;\n  delay?: number;\n}\n\nconst ServiceCard = ({ \n  title, \n  description, \n  image, \n  icon: Icon, \n  href, \n  iconColor,\n  delay = 0 \n}: ServiceCardProps) => {\n  return (\n    <ScrollReveal delay={delay}>\n      <div \n        className=\"service-card bg-white rounded-2xl overflow-hidden shadow-lg group\"\n        data-testid={`service-card-${title.toLowerCase().replace(/\\s+/g, '-')}`}\n      >\n        <div className=\"img-zoom-container h-64\">\n          <img \n            src={image} \n            alt={title}\n            className=\"img-zoom w-full h-full object-cover\"\n            data-testid={`service-image-${title.toLowerCase().replace(/\\s+/g, '-')}`}\n          />\n        </div>\n        \n        <div className=\"p-8\">\n          <div className={`w-14 h-14 ${iconColor} rounded-full flex items-center justify-center mb-4`}>\n            <Icon className=\"text-2xl\" />\n          </div>\n          \n          <h3 \n            className=\"text-2xl font-playfair font-bold mb-3 text-text-dark\"\n            data-testid={`service-title-${title.toLowerCase().replace(/\\s+/g, '-')}`}\n          >\n            {title}\n          </h3>\n          \n          <p \n            className=\"text-gray-600 mb-6 leading-relaxed\"\n            data-testid={`service-description-${title.toLowerCase().replace(/\\s+/g, '-')}`}\n          >\n            {description}\n          </p>\n          \n          <Link \n            href={href}\n            className=\"inline-flex items-center text-primary font-semibold hover:text-secondary transition-colors group-hover:translate-x-1 transition-transform\"\n            data-testid={`service-link-${title.toLowerCase().replace(/\\s+/g, '-')}`}\n          >\n            Explore {title} <ArrowRight className=\"ml-2 w-4 h-4\" />\n          </Link>\n        </div>\n      </div>\n    </ScrollReveal>\n  );\n};\n\nexport default ServiceCard;\n","size_bytes":2100},"client/src/components/ui/TestimonialCarousel.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { Star } from 'lucide-react';\nimport { testimonials } from '../../data/testimonials';\n\nconst TestimonialCarousel = () => {\n  const [currentSlide, setCurrentSlide] = useState(0);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentSlide((prev) => (prev + 1) % testimonials.length);\n    }, 5000);\n\n    return () => clearInterval(timer);\n  }, []);\n\n  const goToSlide = (index: number) => {\n    setCurrentSlide(index);\n  };\n\n  return (\n    <section className=\"py-24 bg-bg-light\" data-testid=\"testimonial-section\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <span className=\"text-primary font-semibold text-sm tracking-wider uppercase mb-4 block\">\n            Client Stories\n          </span>\n          <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6 text-text-dark\">\n            What Our Clients Say\n          </h2>\n          <p className=\"text-gray-600 text-lg max-w-3xl mx-auto\">\n            Don't just take our word for it - hear from our satisfied clients\n          </p>\n        </div>\n\n        <div className=\"relative max-w-4xl mx-auto\">\n          {testimonials.map((testimonial, index) => (\n            <div\n              key={testimonial.id}\n              className={`bg-white rounded-2xl p-8 md:p-12 shadow-lg transition-all duration-500 ${\n                index === currentSlide ? 'block' : 'hidden'\n              }`}\n              data-testid={`testimonial-slide-${index}`}\n            >\n              <div className=\"flex items-center mb-6\">\n                {[...Array(5)].map((_, i) => (\n                  <Star \n                    key={i} \n                    className=\"w-5 h-5 text-gold fill-current\"\n                    data-testid={`star-${i}`}\n                  />\n                ))}\n              </div>\n              \n              <p \n                className=\"text-gray-700 text-lg md:text-xl italic mb-8 leading-relaxed\"\n                data-testid={`testimonial-text-${index}`}\n              >\n                \"{testimonial.text}\"\n              </p>\n              \n              <div className=\"flex items-center\">\n                <img\n                  src={testimonial.image}\n                  alt={testimonial.name}\n                  className=\"w-16 h-16 rounded-full object-cover mr-4\"\n                  data-testid={`testimonial-avatar-${index}`}\n                />\n                <div>\n                  <h4 \n                    className=\"font-semibold text-lg\"\n                    data-testid={`testimonial-name-${index}`}\n                  >\n                    {testimonial.name}\n                  </h4>\n                  <p \n                    className=\"text-gray-500\"\n                    data-testid={`testimonial-service-${index}`}\n                  >\n                    {testimonial.service}\n                  </p>\n                </div>\n              </div>\n            </div>\n          ))}\n\n          {/* Navigation Dots */}\n          <div className=\"flex justify-center mt-8 space-x-3\">\n            {testimonials.map((_, index) => (\n              <button\n                key={index}\n                onClick={() => goToSlide(index)}\n                className={`w-3 h-3 rounded-full transition-all ${\n                  index === currentSlide ? 'bg-primary' : 'bg-gray-300'\n                }`}\n                data-testid={`testimonial-dot-${index}`}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default TestimonialCarousel;\n","size_bytes":3597},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/pages/services/Bridal.tsx":{"content":"import { Link } from 'wouter';\nimport { ArrowRight, Crown, Heart, Sparkles, Users } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport ScrollReveal from '@/components/ui/ScrollReveal';\n\nconst Bridal = () => {\n  const packages = [\n    {\n      title: 'Pre-Bridal Package',\n      duration: '6 weeks before wedding',\n      description: 'Complete beauty preparation to ensure you look radiant on your special day.',\n      features: ['Weekly Facials', 'Hair Spa Treatments', 'Nail Care', 'Body Treatments', 'Skin Consultation', 'Diet Guidance'],\n      image: 'https://images.unsplash.com/photo-1515377905703-c4788e51af15?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n      price: 'From ₹25,000',\n    },\n    {\n      title: 'Bridal Day Package',\n      duration: 'Wedding day - 6 hours',\n      description: 'Complete bridal transformation for your wedding day with trial sessions.',\n      features: ['Hair Styling', 'Bridal Makeup', 'Draping Assistance', 'Touch-up Kit', 'Photography Support', 'Bridal Trial'],\n      image: 'https://images.unsplash.com/photo-1519741497674-611481863552?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n      price: 'From ₹35,000',\n    },\n    {\n      title: 'Mehendi Package',\n      duration: 'Mehendi ceremony - 4 hours',\n      description: 'Beautiful traditional look for your mehendi celebration with vibrant colors.',\n      features: ['Mehendi Makeup', 'Hair Styling', 'Floral Jewelry', 'Outfit Coordination', 'Photography Prep', 'Touch-ups'],\n      image: 'https://images.unsplash.com/photo-1586297135537-5296812d4c08?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n      price: 'From ₹15,000',\n    },\n    {\n      title: 'Couple Package',\n      duration: 'Wedding events - flexible',\n      description: 'Coordinated beauty services for both bride and groom across all wedding events.',\n      features: ['Bride Full Service', 'Groom Grooming', 'Multiple Events', 'Coordination', 'Travel Service', 'Photography Ready'],\n      image: 'https://images.unsplash.com/photo-1582139329536-e7284fece509?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n      price: 'From ₹50,000',\n    },\n  ];\n\n  const bridalServices = [\n    {\n      icon: <Crown className=\"text-gold\" />,\n      title: 'Royal Treatment',\n      description: 'Feel like royalty with our premium bridal services designed for your special day.',\n    },\n    {\n      icon: <Heart className=\"text-accent\" />,\n      title: 'Personalized Care',\n      description: 'Every bride is unique, and we customize our services to match your vision.',\n    },\n    {\n      icon: <Sparkles className=\"text-primary\" />,\n      title: 'Trial Sessions',\n      description: 'Multiple trial sessions to perfect your look before the big day.',\n    },\n    {\n      icon: <Users className=\"text-secondary\" />,\n      title: 'Family Packages',\n      description: 'Special packages for the entire bridal party and family members.',\n    },\n  ];\n\n  return (\n    <div className=\"min-h-screen pt-20\" data-testid=\"bridal-services-page\">\n      {/* Hero Section */}\n      <section \n        className=\"relative py-32 flex items-center justify-center overflow-hidden parallax\"\n        style={{\n          backgroundImage: 'url(https://images.unsplash.com/photo-1519741497674-611481863552?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&h=1080)'\n        }}\n        data-testid=\"bridal-hero\"\n      >\n        <div className=\"hero-gradient absolute inset-0\"></div>\n        <div className=\"relative z-10 text-center text-white px-4 max-w-4xl mx-auto\">\n          <ScrollReveal>\n            <div className=\"mb-6\">\n              <Crown className=\"text-6xl text-gold mx-auto mb-4\" />\n            </div>\n            <h1 className=\"text-5xl md:text-6xl font-playfair font-bold mb-6\" data-testid=\"bridal-hero-title\">\n              The Perfect Bridal Glow\n            </h1>\n            <p className=\"text-xl text-gray-100 max-w-2xl mx-auto mb-8\" data-testid=\"bridal-hero-description\">\n              Make your special day absolutely unforgettable with our comprehensive bridal beauty services\n            </p>\n            <Link href=\"/booking\">\n              <Button className=\"btn-gradient text-lg px-8 py-4\" data-testid=\"bridal-book-button\">\n                <span>Plan Your Big Day</span>\n              </Button>\n            </Link>\n          </ScrollReveal>\n        </div>\n      </section>\n\n      {/* Bridal Packages */}\n      <section className=\"py-24 bg-white\" data-testid=\"bridal-packages\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <ScrollReveal>\n            <div className=\"text-center mb-16\">\n              <span className=\"text-primary font-semibold text-sm tracking-wider uppercase mb-4 block\">\n                Bridal Packages\n              </span>\n              <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6 text-text-dark\" data-testid=\"packages-title\">\n                Complete Bridal Solutions\n              </h2>\n              <p className=\"text-gray-600 text-lg max-w-3xl mx-auto\" data-testid=\"packages-description\">\n                From pre-bridal preparation to wedding day perfection, we have packages for every moment\n              </p>\n            </div>\n          </ScrollReveal>\n\n          <div className=\"grid md:grid-cols-2 gap-8\">\n            {packages.map((pkg, index) => (\n              <ScrollReveal key={pkg.title} delay={index * 100}>\n                <div \n                  className=\"bg-bg-light rounded-2xl overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300\"\n                  data-testid={`bridal-package-${index}`}\n                >\n                  <div className=\"img-zoom-container h-64\">\n                    <img \n                      src={pkg.image} \n                      alt={pkg.title}\n                      className=\"img-zoom w-full h-full object-cover\"\n                      data-testid={`bridal-package-image-${index}`}\n                    />\n                  </div>\n                  <div className=\"p-8\">\n                    <div className=\"flex justify-between items-start mb-4\">\n                      <div>\n                        <h3 \n                          className=\"text-2xl font-playfair font-bold text-text-dark mb-1\"\n                          data-testid={`bridal-package-title-${index}`}\n                        >\n                          {pkg.title}\n                        </h3>\n                        <span \n                          className=\"text-sm text-gray-500\"\n                          data-testid={`bridal-package-duration-${index}`}\n                        >\n                          {pkg.duration}\n                        </span>\n                      </div>\n                      <span \n                        className=\"text-primary font-semibold text-lg\"\n                        data-testid={`bridal-package-price-${index}`}\n                      >\n                        {pkg.price}\n                      </span>\n                    </div>\n                    <p \n                      className=\"text-gray-600 mb-6 leading-relaxed\"\n                      data-testid={`bridal-package-description-${index}`}\n                    >\n                      {pkg.description}\n                    </p>\n                    <div className=\"mb-6\">\n                      <h4 className=\"font-semibold text-text-dark mb-3\">Package Includes:</h4>\n                      <ul className=\"grid grid-cols-2 gap-2\">\n                        {pkg.features.map((feature, featureIndex) => (\n                          <li \n                            key={featureIndex}\n                            className=\"text-sm text-gray-600 flex items-center\"\n                            data-testid={`bridal-package-feature-${index}-${featureIndex}`}\n                          >\n                            <span className=\"w-2 h-2 bg-primary rounded-full mr-3 flex-shrink-0\"></span>\n                            {feature}\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n                    <Link href=\"/booking\">\n                      <Button \n                        className=\"w-full bg-primary text-white hover:bg-secondary\"\n                        data-testid={`bridal-package-book-${index}`}\n                      >\n                        Choose Package\n                      </Button>\n                    </Link>\n                  </div>\n                </div>\n              </ScrollReveal>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Bridal Services Features */}\n      <section className=\"py-24 bg-bg-light\" data-testid=\"bridal-features\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <ScrollReveal>\n            <div className=\"text-center mb-16\">\n              <span className=\"text-primary font-semibold text-sm tracking-wider uppercase mb-4 block\">\n                Why Choose Us\n              </span>\n              <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6 text-text-dark\" data-testid=\"features-title\">\n                Bridal Excellence\n              </h2>\n              <p className=\"text-gray-600 text-lg max-w-3xl mx-auto\" data-testid=\"features-description\">\n                What makes our bridal services the preferred choice for discerning brides\n              </p>\n            </div>\n          </ScrollReveal>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {bridalServices.map((service, index) => (\n              <ScrollReveal key={service.title} delay={index * 100}>\n                <div \n                  className=\"bg-white rounded-2xl p-8 text-center shadow-lg hover:shadow-xl transition-all duration-300\"\n                  data-testid={`bridal-feature-${index}`}\n                >\n                  <div className=\"w-16 h-16 mx-auto mb-6 bg-gray-50 rounded-full flex items-center justify-center\">\n                    {service.icon}\n                  </div>\n                  <h3 \n                    className=\"text-xl font-playfair font-bold mb-4 text-text-dark\"\n                    data-testid={`bridal-feature-title-${index}`}\n                  >\n                    {service.title}\n                  </h3>\n                  <p \n                    className=\"text-gray-600 leading-relaxed\"\n                    data-testid={`bridal-feature-description-${index}`}\n                  >\n                    {service.description}\n                  </p>\n                </div>\n              </ScrollReveal>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Bridal Timeline */}\n      <section className=\"py-24 bg-white\" data-testid=\"bridal-timeline\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <ScrollReveal>\n            <div className=\"text-center mb-16\">\n              <span className=\"text-primary font-semibold text-sm tracking-wider uppercase mb-4 block\">\n                Planning Timeline\n              </span>\n              <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6 text-text-dark\" data-testid=\"timeline-title\">\n                Your Bridal Journey\n              </h2>\n              <p className=\"text-gray-600 text-lg max-w-3xl mx-auto\" data-testid=\"timeline-description\">\n                A step-by-step guide to planning your perfect bridal beauty experience\n              </p>\n            </div>\n          </ScrollReveal>\n\n          <div className=\"relative\">\n            <div className=\"absolute left-1/2 transform -translate-x-1/2 h-full w-1 bg-primary opacity-20\"></div>\n            \n            <div className=\"space-y-12\">\n              {[\n                {\n                  time: '8-12 weeks before',\n                  title: 'Initial Consultation',\n                  description: 'Discuss your vision, preferences, and create a customized beauty plan.',\n                },\n                {\n                  time: '6-8 weeks before',\n                  title: 'Pre-Bridal Treatments Begin',\n                  description: 'Start weekly facials, hair treatments, and skin preparation regime.',\n                },\n                {\n                  time: '2-4 weeks before',\n                  title: 'Trial Sessions',\n                  description: 'Perfect your bridal makeup and hairstyle with multiple trial sessions.',\n                },\n                {\n                  time: '1 week before',\n                  title: 'Final Preparations',\n                  description: 'Last-minute touch-ups, eyebrow shaping, and final beauty treatments.',\n                },\n                {\n                  time: 'Wedding Day',\n                  title: 'Bridal Transformation',\n                  description: 'Complete bridal makeover with our team attending to every detail.',\n                },\n              ].map((step, index) => (\n                <ScrollReveal key={step.title} delay={index * 100}>\n                  <div \n                    className={`relative flex items-center ${\n                      index % 2 === 0 ? 'justify-start' : 'justify-end'\n                    }`}\n                    data-testid={`timeline-step-${index}`}\n                  >\n                    <div className={`w-5/12 ${index % 2 === 0 ? 'pr-8 text-right' : 'pl-8 text-left'}`}>\n                      <div className=\"bg-bg-light rounded-2xl p-6\">\n                        <div \n                          className=\"text-sm font-bold text-primary mb-2\"\n                          data-testid={`timeline-time-${index}`}\n                        >\n                          {step.time}\n                        </div>\n                        <h3 \n                          className=\"text-xl font-playfair font-bold mb-3 text-text-dark\"\n                          data-testid={`timeline-step-title-${index}`}\n                        >\n                          {step.title}\n                        </h3>\n                        <p \n                          className=\"text-gray-600\"\n                          data-testid={`timeline-step-description-${index}`}\n                        >\n                          {step.description}\n                        </p>\n                      </div>\n                    </div>\n                    \n                    <div className=\"absolute left-1/2 transform -translate-x-1/2 w-4 h-4 bg-gold rounded-full border-4 border-white shadow-lg\"></div>\n                  </div>\n                </ScrollReveal>\n              ))}\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Bridal Gallery Preview */}\n      <section className=\"py-24 bg-bg-light\" data-testid=\"bridal-gallery-preview\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <ScrollReveal>\n            <div className=\"text-center mb-16\">\n              <span className=\"text-primary font-semibold text-sm tracking-wider uppercase mb-4 block\">\n                Our Brides\n              </span>\n              <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6 text-text-dark\" data-testid=\"gallery-title\">\n                Beautiful Brides\n              </h2>\n              <p className=\"text-gray-600 text-lg max-w-3xl mx-auto\" data-testid=\"gallery-description\">\n                See how we've helped brides look absolutely stunning on their special day\n              </p>\n            </div>\n          </ScrollReveal>\n\n          <div className=\"grid md:grid-cols-3 gap-6\">\n            {[\n              'https://images.unsplash.com/photo-1519741497674-611481863552?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=800',\n              'https://images.unsplash.com/photo-1586297135537-5296812d4c08?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=800',\n              'https://images.unsplash.com/photo-1582139329536-e7284fece509?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=800',\n            ].map((image, index) => (\n              <ScrollReveal key={index} delay={index * 100}>\n                <div \n                  className=\"img-zoom-container rounded-2xl overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300\"\n                  data-testid={`bridal-gallery-${index}`}\n                >\n                  <img \n                    src={image} \n                    alt={`Bridal look ${index + 1}`}\n                    className=\"img-zoom w-full h-96 object-cover\"\n                    data-testid={`bridal-gallery-image-${index}`}\n                  />\n                </div>\n              </ScrollReveal>\n            ))}\n          </div>\n\n          <div className=\"text-center mt-12\">\n            <Link href=\"/gallery\">\n              <Button className=\"bg-primary text-white hover:bg-secondary px-8 py-4\" data-testid=\"view-gallery-button\">\n                View More Bridal Looks\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-24 bg-secondary text-white\" data-testid=\"bridal-cta\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <ScrollReveal>\n            <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6\" data-testid=\"bridal-cta-title\">\n              Plan Your Big Day With Us\n            </h2>\n            <p className=\"text-xl mb-10 text-gray-100 max-w-3xl mx-auto\" data-testid=\"bridal-cta-description\">\n              Let us make your wedding day absolutely perfect with our comprehensive bridal beauty services\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center items-center\">\n              <Link href=\"/booking\">\n                <Button \n                  className=\"bg-white text-secondary px-10 py-4 rounded-full font-semibold text-lg hover:bg-gold hover:text-white transition-all duration-300 shadow-xl\"\n                  data-testid=\"bridal-consultation-button\"\n                >\n                  Book Bridal Consultation\n                </Button>\n              </Link>\n              <Link href=\"/contact\" className=\"inline-flex items-center text-white font-semibold text-lg hover:text-gold transition-colors\">\n                Customize Your Package <ArrowRight className=\"ml-2 w-5 h-5\" />\n              </Link>\n            </div>\n          </ScrollReveal>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Bridal;\n","size_bytes":18274},"client/src/pages/services/Hair.tsx":{"content":"import { Link } from 'wouter';\nimport { ArrowRight, Scissors, Sparkles, Droplets, Wind } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport ScrollReveal from '@/components/ui/ScrollReveal';\n\nconst Hair = () => {\n  const services = [\n    {\n      title: 'Hair Cutting & Styling',\n      description: 'Precision cuts and contemporary styling that complements your face shape and lifestyle.',\n      features: ['Consultation & Analysis', 'Precision Cutting', 'Blow Dry & Styling', 'Styling Tips'],\n      image: 'https://images.unsplash.com/photo-1562322140-8baeececf3df?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n      price: 'From ₹1,500',\n    },\n    {\n      title: 'Hair Coloring',\n      description: 'From subtle highlights to dramatic transformations with premium, ammonia-free colors.',\n      features: ['Color Consultation', 'Balayage & Highlights', 'Full Color Service', 'Color Protection'],\n      image: 'https://images.unsplash.com/photo-1560869713-7d0a29430803?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n      price: 'From ₹3,500',\n    },\n    {\n      title: 'Hair Spa & Treatment',\n      description: 'Nourishing treatments to restore hair health, shine, and manageability.',\n      features: ['Deep Conditioning', 'Scalp Massage', 'Hair Mask Treatment', 'Steam Therapy'],\n      image: 'https://images.unsplash.com/photo-1522337360788-8b13dee7a37e?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n      price: 'From ₹2,000',\n    },\n    {\n      title: 'Keratin & Smoothening',\n      description: 'Advanced hair straightening and smoothening treatments for frizz-free, manageable hair.',\n      features: ['Keratin Treatment', 'Brazilian Blowout', 'Hair Straightening', 'Aftercare Package'],\n      image: 'https://images.unsplash.com/photo-1580618672591-eb180b1a973f?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n      price: 'From ₹8,000',\n    },\n  ];\n\n  const beforeAfter = [\n    {\n      before: 'https://images.unsplash.com/photo-1580618672591-eb180b1a973f?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400',\n      after: 'https://images.unsplash.com/photo-1562322140-8baeececf3df?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400',\n      treatment: 'Balayage Color Treatment',\n    },\n    {\n      before: 'https://images.unsplash.com/photo-1560869713-7d0a29430803?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400',\n      after: 'https://images.unsplash.com/photo-1562322140-8baeececf3df?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400',\n      treatment: 'Keratin Smoothening',\n    },\n  ];\n\n  return (\n    <div className=\"min-h-screen pt-20\" data-testid=\"hair-services-page\">\n      {/* Hero Section */}\n      <section \n        className=\"relative py-32 flex items-center justify-center overflow-hidden parallax\"\n        style={{\n          backgroundImage: 'url(https://images.unsplash.com/photo-1562322140-8baeececf3df?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&h=1080)'\n        }}\n        data-testid=\"hair-hero\"\n      >\n        <div className=\"hero-gradient absolute inset-0\"></div>\n        <div className=\"relative z-10 text-center text-white px-4 max-w-4xl mx-auto\">\n          <ScrollReveal>\n            <div className=\"mb-6\">\n              <Scissors className=\"text-6xl text-gold mx-auto mb-4\" />\n            </div>\n            <h1 className=\"text-5xl md:text-6xl font-playfair font-bold mb-6\" data-testid=\"hair-hero-title\">\n              Transform Your Hair\n            </h1>\n            <p className=\"text-xl text-gray-100 max-w-2xl mx-auto mb-8\" data-testid=\"hair-hero-description\">\n              From precision cuts to vibrant colors, discover the artistry of professional hair care\n            </p>\n            <Link href=\"/booking\">\n              <Button className=\"btn-gradient text-lg px-8 py-4\" data-testid=\"hair-book-button\">\n                <span>Book Hair Service</span>\n              </Button>\n            </Link>\n          </ScrollReveal>\n        </div>\n      </section>\n\n      {/* Services Grid */}\n      <section className=\"py-24 bg-white\" data-testid=\"hair-services-grid\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <ScrollReveal>\n            <div className=\"text-center mb-16\">\n              <span className=\"text-primary font-semibold text-sm tracking-wider uppercase mb-4 block\">\n                Hair Services\n              </span>\n              <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6 text-text-dark\" data-testid=\"services-title\">\n                Expert Hair Solutions\n              </h2>\n              <p className=\"text-gray-600 text-lg max-w-3xl mx-auto\" data-testid=\"services-description\">\n                Our master stylists bring years of expertise to every cut, color, and treatment\n              </p>\n            </div>\n          </ScrollReveal>\n\n          <div className=\"grid md:grid-cols-2 gap-8\">\n            {services.map((service, index) => (\n              <ScrollReveal key={service.title} delay={index * 100}>\n                <div \n                  className=\"bg-bg-light rounded-2xl overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300\"\n                  data-testid={`hair-service-${index}`}\n                >\n                  <div className=\"img-zoom-container h-64\">\n                    <img \n                      src={service.image} \n                      alt={service.title}\n                      className=\"img-zoom w-full h-full object-cover\"\n                      data-testid={`hair-service-image-${index}`}\n                    />\n                  </div>\n                  <div className=\"p-8\">\n                    <div className=\"flex justify-between items-start mb-4\">\n                      <h3 \n                        className=\"text-2xl font-playfair font-bold text-text-dark\"\n                        data-testid={`hair-service-title-${index}`}\n                      >\n                        {service.title}\n                      </h3>\n                      <span \n                        className=\"text-primary font-semibold text-lg\"\n                        data-testid={`hair-service-price-${index}`}\n                      >\n                        {service.price}\n                      </span>\n                    </div>\n                    <p \n                      className=\"text-gray-600 mb-6 leading-relaxed\"\n                      data-testid={`hair-service-description-${index}`}\n                    >\n                      {service.description}\n                    </p>\n                    <div className=\"mb-6\">\n                      <h4 className=\"font-semibold text-text-dark mb-3\">Service Includes:</h4>\n                      <ul className=\"grid grid-cols-2 gap-2\">\n                        {service.features.map((feature, featureIndex) => (\n                          <li \n                            key={featureIndex}\n                            className=\"text-sm text-gray-600 flex items-center\"\n                            data-testid={`hair-service-feature-${index}-${featureIndex}`}\n                          >\n                            <span className=\"w-2 h-2 bg-primary rounded-full mr-3 flex-shrink-0\"></span>\n                            {feature}\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n                    <Link href=\"/booking\">\n                      <Button \n                        className=\"w-full bg-primary text-white hover:bg-secondary\"\n                        data-testid={`hair-service-book-${index}`}\n                      >\n                        Book This Service\n                      </Button>\n                    </Link>\n                  </div>\n                </div>\n              </ScrollReveal>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Before/After Gallery */}\n      <section className=\"py-24 bg-bg-light\" data-testid=\"hair-before-after\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <ScrollReveal>\n            <div className=\"text-center mb-16\">\n              <span className=\"text-primary font-semibold text-sm tracking-wider uppercase mb-4 block\">\n                Transformations\n              </span>\n              <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6 text-text-dark\" data-testid=\"transformations-title\">\n                Hair Extensions & Results\n              </h2>\n              <p className=\"text-gray-600 text-lg max-w-3xl mx-auto\" data-testid=\"transformations-description\">\n                See the incredible transformations our expert stylists achieve\n              </p>\n            </div>\n          </ScrollReveal>\n\n          <div className=\"grid md:grid-cols-2 gap-8\">\n            {beforeAfter.map((transformation, index) => (\n              <ScrollReveal key={index} delay={index * 100}>\n                <div \n                  className=\"bg-white rounded-2xl p-6 shadow-lg\"\n                  data-testid={`hair-transformation-${index}`}\n                >\n                  <div className=\"grid grid-cols-2 gap-4 mb-4\">\n                    <div>\n                      <p className=\"text-sm font-semibold text-gray-500 mb-2\">BEFORE</p>\n                      <img \n                        src={transformation.before} \n                        alt=\"Before treatment\"\n                        className=\"w-full h-64 object-cover rounded-lg\"\n                        data-testid={`hair-before-${index}`}\n                      />\n                    </div>\n                    <div>\n                      <p className=\"text-sm font-semibold text-gold mb-2\">AFTER</p>\n                      <img \n                        src={transformation.after} \n                        alt=\"After treatment\"\n                        className=\"w-full h-64 object-cover rounded-lg\"\n                        data-testid={`hair-after-${index}`}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"text-center\">\n                    <h4 \n                      className=\"font-playfair font-bold text-xl text-text-dark\"\n                      data-testid={`hair-treatment-name-${index}`}\n                    >\n                      {transformation.treatment}\n                    </h4>\n                  </div>\n                </div>\n              </ScrollReveal>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Hair Care Tips */}\n      <section className=\"py-24 bg-white\" data-testid=\"hair-care-tips\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid lg:grid-cols-2 gap-16 items-center\">\n            <ScrollReveal>\n              <div>\n                <span className=\"text-primary font-semibold text-sm tracking-wider uppercase mb-4 block\">\n                  Expert Tips\n                </span>\n                <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-8 text-text-dark\" data-testid=\"tips-title\">\n                  Hair Care Essentials\n                </h2>\n                <div className=\"space-y-6\">\n                  {[\n                    {\n                      icon: <Droplets className=\"text-primary\" />,\n                      title: 'Hydration is Key',\n                      description: 'Deep conditioning treatments every 2-3 weeks keep hair healthy and shiny.',\n                    },\n                    {\n                      icon: <Wind className=\"text-primary\" />,\n                      title: 'Heat Protection',\n                      description: 'Always use heat protectant before styling to prevent damage and breakage.',\n                    },\n                    {\n                      icon: <Sparkles className=\"text-primary\" />,\n                      title: 'Regular Trims',\n                      description: 'Trim every 6-8 weeks to maintain healthy ends and promote growth.',\n                    },\n                  ].map((tip, index) => (\n                    <div \n                      key={tip.title}\n                      className=\"flex items-start space-x-4\"\n                      data-testid={`hair-tip-${index}`}\n                    >\n                      <div className=\"w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center flex-shrink-0\">\n                        {tip.icon}\n                      </div>\n                      <div>\n                        <h3 \n                          className=\"text-xl font-playfair font-bold mb-2 text-text-dark\"\n                          data-testid={`hair-tip-title-${index}`}\n                        >\n                          {tip.title}\n                        </h3>\n                        <p \n                          className=\"text-gray-600 leading-relaxed\"\n                          data-testid={`hair-tip-description-${index}`}\n                        >\n                          {tip.description}\n                        </p>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </ScrollReveal>\n\n            <ScrollReveal delay={200}>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"space-y-4\">\n                  <div className=\"img-zoom-container rounded-2xl overflow-hidden\">\n                    <img \n                      src=\"https://images.unsplash.com/photo-1522337360788-8b13dee7a37e?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\" \n                      alt=\"Hair care\"\n                      className=\"img-zoom w-full h-48 object-cover\"\n                    />\n                  </div>\n                  <div className=\"img-zoom-container rounded-2xl overflow-hidden\">\n                    <img \n                      src=\"https://images.unsplash.com/photo-1516975080664-ed2fc6a32937?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400\" \n                      alt=\"Hair products\"\n                      className=\"img-zoom w-full h-64 object-cover\"\n                    />\n                  </div>\n                </div>\n                <div className=\"space-y-4 pt-8\">\n                  <div className=\"img-zoom-container rounded-2xl overflow-hidden\">\n                    <img \n                      src=\"https://images.unsplash.com/photo-1580618672591-eb180b1a973f?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400\" \n                      alt=\"Hair styling\"\n                      className=\"img-zoom w-full h-64 object-cover\"\n                    />\n                  </div>\n                  <div className=\"img-zoom-container rounded-2xl overflow-hidden\">\n                    <img \n                      src=\"https://images.unsplash.com/photo-1562322140-8baeececf3df?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\" \n                      alt=\"Hair color\"\n                      className=\"img-zoom w-full h-48 object-cover\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </ScrollReveal>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-24 bg-primary text-white\" data-testid=\"hair-cta\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <ScrollReveal>\n            <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6\" data-testid=\"hair-cta-title\">\n              Book a Free Hair Consultation\n            </h2>\n            <p className=\"text-xl mb-10 text-gray-100 max-w-3xl mx-auto\" data-testid=\"hair-cta-description\">\n              Not sure which service is right for you? Book a complimentary consultation with our expert stylists\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center items-center\">\n              <Link href=\"/booking\">\n                <Button \n                  className=\"bg-white text-primary px-10 py-4 rounded-full font-semibold text-lg hover:bg-gold hover:text-white transition-all duration-300 shadow-xl\"\n                  data-testid=\"hair-consultation-button\"\n                >\n                  Book Consultation\n                </Button>\n              </Link>\n              <Link href=\"/contact\" className=\"inline-flex items-center text-white font-semibold text-lg hover:text-gold transition-colors\">\n                Call Us Now <ArrowRight className=\"ml-2 w-5 h-5\" />\n              </Link>\n            </div>\n          </ScrollReveal>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Hair;\n","size_bytes":16405},"client/src/pages/services/Makeup.tsx":{"content":"import { Link } from 'wouter';\nimport { ArrowRight, Paintbrush, Star, Camera, Heart } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport ScrollReveal from '@/components/ui/ScrollReveal';\n\nconst Makeup = () => {\n  const services = [\n    {\n      title: 'Bridal Makeup',\n      description: 'Stunning bridal looks that enhance your natural beauty for your special day.',\n      features: ['Pre-bridal Consultation', 'Trial Session', 'Bridal Day Makeup', 'Touch-up Kit'],\n      image: 'https://images.unsplash.com/photo-1519741497674-611481863552?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n      price: 'From ₹12,000',\n      duration: '3-4 hours',\n    },\n    {\n      title: 'Party Makeup',\n      description: 'Glamorous looks for special occasions, parties, and celebrations.',\n      features: ['Skin Preparation', 'Evening Glam', 'Long-lasting Formula', 'Style Consultation'],\n      image: 'https://images.unsplash.com/photo-1487412947147-5cebf100ffc2?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n      price: 'From ₹4,000',\n      duration: '2 hours',\n    },\n    {\n      title: 'Editorial/Fashion',\n      description: 'Creative and artistic makeup for photoshoots, fashion shows, and editorial work.',\n      features: ['Concept Discussion', 'Creative Application', 'Camera-Ready Finish', 'Touch-up Service'],\n      image: 'https://images.unsplash.com/photo-1596462502278-27bfdc403348?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n      price: 'From ₹6,000',\n      duration: '2-3 hours',\n    },\n    {\n      title: 'Makeup Lessons',\n      description: 'Learn professional makeup techniques in personalized one-on-one sessions.',\n      features: ['Technique Training', 'Product Recommendations', 'Practice Session', 'Follow-up Support'],\n      image: 'https://images.unsplash.com/photo-1516975080664-ed2fc6a32937?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n      price: 'From ₹3,000',\n      duration: '2 hours',\n    },\n  ];\n\n  const beforeAfterGallery = [\n    {\n      before: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400',\n      after: 'https://images.unsplash.com/photo-1519741497674-611481863552?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400',\n      occasion: 'Bridal Transformation',\n    },\n    {\n      before: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400',\n      after: 'https://images.unsplash.com/photo-1487412947147-5cebf100ffc2?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400',\n      occasion: 'Evening Glam',\n    },\n  ];\n\n  return (\n    <div className=\"min-h-screen pt-20\" data-testid=\"makeup-services-page\">\n      {/* Hero Section */}\n      <section \n        className=\"relative py-32 flex items-center justify-center overflow-hidden parallax\"\n        style={{\n          backgroundImage: 'url(https://images.unsplash.com/photo-1487412947147-5cebf100ffc2?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&h=1080)'\n        }}\n        data-testid=\"makeup-hero\"\n      >\n        <div className=\"hero-gradient absolute inset-0\"></div>\n        <div className=\"relative z-10 text-center text-white px-4 max-w-4xl mx-auto\">\n          <ScrollReveal>\n            <div className=\"mb-6\">\n              <Paintbrush className=\"text-6xl text-gold mx-auto mb-4\" />\n            </div>\n            <h1 className=\"text-5xl md:text-6xl font-playfair font-bold mb-6\" data-testid=\"makeup-hero-title\">\n              Be the Star of Every Moment\n            </h1>\n            <p className=\"text-xl text-gray-100 max-w-2xl mx-auto mb-8\" data-testid=\"makeup-hero-description\">\n              Professional makeup artistry that enhances your natural beauty and creates unforgettable looks\n            </p>\n            <Link href=\"/booking\">\n              <Button className=\"btn-gradient text-lg px-8 py-4\" data-testid=\"makeup-book-button\">\n                <span>Book Makeup Service</span>\n              </Button>\n            </Link>\n          </ScrollReveal>\n        </div>\n      </section>\n\n      {/* Services Grid */}\n      <section className=\"py-24 bg-white\" data-testid=\"makeup-services-grid\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <ScrollReveal>\n            <div className=\"text-center mb-16\">\n              <span className=\"text-primary font-semibold text-sm tracking-wider uppercase mb-4 block\">\n                Makeup Services\n              </span>\n              <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6 text-text-dark\" data-testid=\"services-title\">\n                Artistry That Speaks\n              </h2>\n              <p className=\"text-gray-600 text-lg max-w-3xl mx-auto\" data-testid=\"services-description\">\n                From bridal elegance to editorial boldness, our makeup artists create looks that tell your story\n              </p>\n            </div>\n          </ScrollReveal>\n\n          <div className=\"grid md:grid-cols-2 gap-8\">\n            {services.map((service, index) => (\n              <ScrollReveal key={service.title} delay={index * 100}>\n                <div \n                  className=\"bg-bg-light rounded-2xl overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300\"\n                  data-testid={`makeup-service-${index}`}\n                >\n                  <div className=\"img-zoom-container h-64\">\n                    <img \n                      src={service.image} \n                      alt={service.title}\n                      className=\"img-zoom w-full h-full object-cover\"\n                      data-testid={`makeup-service-image-${index}`}\n                    />\n                  </div>\n                  <div className=\"p-8\">\n                    <div className=\"flex justify-between items-start mb-4\">\n                      <div>\n                        <h3 \n                          className=\"text-2xl font-playfair font-bold text-text-dark mb-1\"\n                          data-testid={`makeup-service-title-${index}`}\n                        >\n                          {service.title}\n                        </h3>\n                        <span \n                          className=\"text-sm text-gray-500\"\n                          data-testid={`makeup-service-duration-${index}`}\n                        >\n                          {service.duration}\n                        </span>\n                      </div>\n                      <span \n                        className=\"text-primary font-semibold text-lg\"\n                        data-testid={`makeup-service-price-${index}`}\n                      >\n                        {service.price}\n                      </span>\n                    </div>\n                    <p \n                      className=\"text-gray-600 mb-6 leading-relaxed\"\n                      data-testid={`makeup-service-description-${index}`}\n                    >\n                      {service.description}\n                    </p>\n                    <div className=\"mb-6\">\n                      <h4 className=\"font-semibold text-text-dark mb-3\">Service Includes:</h4>\n                      <ul className=\"grid grid-cols-2 gap-2\">\n                        {service.features.map((feature, featureIndex) => (\n                          <li \n                            key={featureIndex}\n                            className=\"text-sm text-gray-600 flex items-center\"\n                            data-testid={`makeup-service-feature-${index}-${featureIndex}`}\n                          >\n                            <span className=\"w-2 h-2 bg-primary rounded-full mr-3 flex-shrink-0\"></span>\n                            {feature}\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n                    <Link href=\"/booking\">\n                      <Button \n                        className=\"w-full bg-primary text-white hover:bg-secondary\"\n                        data-testid={`makeup-service-book-${index}`}\n                      >\n                        Book Session\n                      </Button>\n                    </Link>\n                  </div>\n                </div>\n              </ScrollReveal>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Before/After Showcase */}\n      <section className=\"py-24 bg-bg-light\" data-testid=\"makeup-before-after\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <ScrollReveal>\n            <div className=\"text-center mb-16\">\n              <span className=\"text-primary font-semibold text-sm tracking-wider uppercase mb-4 block\">\n                Transformations\n              </span>\n              <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6 text-text-dark\" data-testid=\"transformations-title\">\n                Before/After Showcase\n              </h2>\n              <p className=\"text-gray-600 text-lg max-w-3xl mx-auto\" data-testid=\"transformations-description\">\n                Witness the power of professional makeup artistry in our stunning transformations\n              </p>\n            </div>\n          </ScrollReveal>\n\n          <div className=\"grid md:grid-cols-2 gap-8\">\n            {beforeAfterGallery.map((transformation, index) => (\n              <ScrollReveal key={index} delay={index * 100}>\n                <div \n                  className=\"bg-white rounded-2xl p-6 shadow-lg\"\n                  data-testid={`makeup-transformation-${index}`}\n                >\n                  <div className=\"grid grid-cols-2 gap-4 mb-4\">\n                    <div>\n                      <p className=\"text-sm font-semibold text-gray-500 mb-2\">BEFORE</p>\n                      <img \n                        src={transformation.before} \n                        alt=\"Before makeup\"\n                        className=\"w-full h-64 object-cover rounded-lg\"\n                        data-testid={`makeup-before-${index}`}\n                      />\n                    </div>\n                    <div>\n                      <p className=\"text-sm font-semibold text-gold mb-2\">AFTER</p>\n                      <img \n                        src={transformation.after} \n                        alt=\"After makeup\"\n                        className=\"w-full h-64 object-cover rounded-lg\"\n                        data-testid={`makeup-after-${index}`}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"text-center\">\n                    <h4 \n                      className=\"font-playfair font-bold text-xl text-text-dark\"\n                      data-testid={`makeup-occasion-${index}`}\n                    >\n                      {transformation.occasion}\n                    </h4>\n                  </div>\n                </div>\n              </ScrollReveal>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Makeup Products Showcase */}\n      <section className=\"py-24 bg-white\" data-testid=\"makeup-products\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid lg:grid-cols-2 gap-16 items-center\">\n            <ScrollReveal>\n              <div>\n                <span className=\"text-primary font-semibold text-sm tracking-wider uppercase mb-4 block\">\n                  Premium Products\n                </span>\n                <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-8 text-text-dark\" data-testid=\"products-title\">\n                  Professional Makeup Brands\n                </h2>\n                <p className=\"text-gray-600 text-lg mb-8 leading-relaxed\" data-testid=\"products-description\">\n                  We use only the finest professional makeup brands to ensure long-lasting, camera-ready results that look flawless in any lighting.\n                </p>\n                <div className=\"space-y-6\">\n                  {[\n                    {\n                      icon: <Star className=\"text-gold\" />,\n                      title: 'Premium Brands',\n                      description: 'MAC, Urban Decay, NARS, and other professional-grade cosmetics.',\n                    },\n                    {\n                      icon: <Camera className=\"text-secondary\" />,\n                      title: 'HD Compatible',\n                      description: 'High-definition formulas that look perfect in photos and videos.',\n                    },\n                    {\n                      icon: <Heart className=\"text-accent\" />,\n                      title: 'Skin-Friendly',\n                      description: 'Hypoallergenic and non-comedogenic products for sensitive skin.',\n                    },\n                  ].map((item, index) => (\n                    <div \n                      key={item.title}\n                      className=\"flex items-start space-x-4\"\n                      data-testid={`product-feature-${index}`}\n                    >\n                      <div className=\"w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center flex-shrink-0\">\n                        {item.icon}\n                      </div>\n                      <div>\n                        <h3 \n                          className=\"text-xl font-playfair font-bold mb-2 text-text-dark\"\n                          data-testid={`product-feature-title-${index}`}\n                        >\n                          {item.title}\n                        </h3>\n                        <p \n                          className=\"text-gray-600 leading-relaxed\"\n                          data-testid={`product-feature-description-${index}`}\n                        >\n                          {item.description}\n                        </p>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </ScrollReveal>\n\n            <ScrollReveal delay={200}>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"space-y-4\">\n                  <div className=\"img-zoom-container rounded-2xl overflow-hidden\">\n                    <img \n                      src=\"https://images.unsplash.com/photo-1516975080664-ed2fc6a32937?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\" \n                      alt=\"Makeup products\"\n                      className=\"img-zoom w-full h-48 object-cover\"\n                    />\n                  </div>\n                  <div className=\"img-zoom-container rounded-2xl overflow-hidden\">\n                    <img \n                      src=\"https://images.unsplash.com/photo-1596462502278-27bfdc403348?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400\" \n                      alt=\"Professional brushes\"\n                      className=\"img-zoom w-full h-64 object-cover\"\n                    />\n                  </div>\n                </div>\n                <div className=\"space-y-4 pt-8\">\n                  <div className=\"img-zoom-container rounded-2xl overflow-hidden\">\n                    <img \n                      src=\"https://images.unsplash.com/photo-1487412947147-5cebf100ffc2?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400\" \n                      alt=\"Makeup application\"\n                      className=\"img-zoom w-full h-64 object-cover\"\n                    />\n                  </div>\n                  <div className=\"img-zoom-container rounded-2xl overflow-hidden\">\n                    <img \n                      src=\"https://images.unsplash.com/photo-1519741497674-611481863552?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\" \n                      alt=\"Final result\"\n                      className=\"img-zoom w-full h-48 object-cover\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </ScrollReveal>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-24 bg-gold text-white\" data-testid=\"makeup-cta\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <ScrollReveal>\n            <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6\" data-testid=\"makeup-cta-title\">\n              Book Your Glam Session\n            </h2>\n            <p className=\"text-xl mb-10 text-gray-100 max-w-3xl mx-auto\" data-testid=\"makeup-cta-description\">\n              Ready to look and feel absolutely stunning? Book your professional makeup session today\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center items-center\">\n              <Link href=\"/booking\">\n                <Button \n                  className=\"bg-white text-gold px-10 py-4 rounded-full font-semibold text-lg hover:bg-primary hover:text-white transition-all duration-300 shadow-xl\"\n                  data-testid=\"makeup-session-button\"\n                >\n                  Book Makeup Session\n                </Button>\n              </Link>\n              <Link href=\"/contact\" className=\"inline-flex items-center text-white font-semibold text-lg hover:text-primary transition-colors\">\n                Discuss Your Look <ArrowRight className=\"ml-2 w-5 h-5\" />\n              </Link>\n            </div>\n          </ScrollReveal>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Makeup;\n","size_bytes":17218},"client/src/pages/services/Nails.tsx":{"content":"import { Link } from 'wouter';\nimport { ArrowRight, HandHeart, Palette, Shield, Star } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport ScrollReveal from '@/components/ui/ScrollReveal';\n\nconst Nails = () => {\n  const services = [\n    {\n      title: 'Classic Manicure',\n      description: 'Traditional nail care with cuticle treatment, shaping, and premium polish application.',\n      features: ['Cuticle Care', 'Nail Shaping', 'Hand Massage', 'Polish Application'],\n      image: 'https://images.unsplash.com/photo-1604654894610-df63bc536371?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n      price: 'From ₹800',\n      duration: '45 min',\n    },\n    {\n      title: 'Gel Manicure',\n      description: 'Long-lasting gel polish with UV curing for 2-3 weeks of chip-free nails.',\n      features: ['Prep & Base Coat', 'Gel Polish Application', 'UV Curing', '3 Week Durability'],\n      image: 'https://images.unsplash.com/photo-1610992015732-2449b76344bc?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n      price: 'From ₹1,500',\n      duration: '60 min',\n    },\n    {\n      title: 'Nail Art Design',\n      description: 'Creative nail art with intricate designs, patterns, and embellishments.',\n      features: ['Custom Designs', 'Hand-painted Art', 'Embellishments', 'Sealing & Protection'],\n      image: 'https://images.unsplash.com/photo-1632345031435-8727f6897d53?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n      price: 'From ₹2,000',\n      duration: '90 min',\n    },\n    {\n      title: 'Nail Extensions',\n      description: 'Acrylic or gel extensions for length and strength with natural-looking results.',\n      features: ['Length Customization', 'Shape Selection', 'Strength Enhancement', 'Natural Finish'],\n      image: 'https://images.unsplash.com/photo-1604654894610-df63bc536371?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n      price: 'From ₹2,500',\n      duration: '120 min',\n    },\n  ];\n\n  const nailArtGallery = [\n    {\n      design: 'French Ombre',\n      image: 'https://images.unsplash.com/photo-1610992015732-2449b76344bc?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400',\n    },\n    {\n      design: 'Floral Art',\n      image: 'https://images.unsplash.com/photo-1632345031435-8727f6897d53?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400',\n    },\n    {\n      design: 'Geometric Patterns',\n      image: 'https://images.unsplash.com/photo-1604654894610-df63bc536371?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400',\n    },\n    {\n      design: 'Marble Effect',\n      image: 'https://images.unsplash.com/photo-1610992015732-2449b76344bc?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400',\n    },\n  ];\n\n  return (\n    <div className=\"min-h-screen pt-20\" data-testid=\"nail-services-page\">\n      {/* Hero Section */}\n      <section \n        className=\"relative py-32 flex items-center justify-center overflow-hidden parallax\"\n        style={{\n          backgroundImage: 'url(https://images.unsplash.com/photo-1604654894610-df63bc536371?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&h=1080)'\n        }}\n        data-testid=\"nail-hero\"\n      >\n        <div className=\"hero-gradient absolute inset-0\"></div>\n        <div className=\"relative z-10 text-center text-white px-4 max-w-4xl mx-auto\">\n          <ScrollReveal>\n            <div className=\"mb-6\">\n              <HandHeart className=\"text-6xl text-gold mx-auto mb-4\" />\n            </div>\n            <h1 className=\"text-5xl md:text-6xl font-playfair font-bold mb-6\" data-testid=\"nail-hero-title\">\n              Nail Perfection, Redefined\n            </h1>\n            <p className=\"text-xl text-gray-100 max-w-2xl mx-auto mb-8\" data-testid=\"nail-hero-description\">\n              Exquisite nail art and care services that showcase your unique style and personality\n            </p>\n            <Link href=\"/booking\">\n              <Button className=\"btn-gradient text-lg px-8 py-4\" data-testid=\"nail-book-button\">\n                <span>Book Nail Service</span>\n              </Button>\n            </Link>\n          </ScrollReveal>\n        </div>\n      </section>\n\n      {/* Services Grid */}\n      <section className=\"py-24 bg-white\" data-testid=\"nail-services-grid\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <ScrollReveal>\n            <div className=\"text-center mb-16\">\n              <span className=\"text-primary font-semibold text-sm tracking-wider uppercase mb-4 block\">\n                Nail Services\n              </span>\n              <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6 text-text-dark\" data-testid=\"services-title\">\n                Perfect Nails, Every Time\n              </h2>\n              <p className=\"text-gray-600 text-lg max-w-3xl mx-auto\" data-testid=\"services-description\">\n                From classic elegance to creative artistry, our nail technicians deliver perfection at your fingertips\n              </p>\n            </div>\n          </ScrollReveal>\n\n          <div className=\"grid md:grid-cols-2 gap-8\">\n            {services.map((service, index) => (\n              <ScrollReveal key={service.title} delay={index * 100}>\n                <div \n                  className=\"bg-bg-light rounded-2xl overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300\"\n                  data-testid={`nail-service-${index}`}\n                >\n                  <div className=\"img-zoom-container h-64\">\n                    <img \n                      src={service.image} \n                      alt={service.title}\n                      className=\"img-zoom w-full h-full object-cover\"\n                      data-testid={`nail-service-image-${index}`}\n                    />\n                  </div>\n                  <div className=\"p-8\">\n                    <div className=\"flex justify-between items-start mb-4\">\n                      <div>\n                        <h3 \n                          className=\"text-2xl font-playfair font-bold text-text-dark mb-1\"\n                          data-testid={`nail-service-title-${index}`}\n                        >\n                          {service.title}\n                        </h3>\n                        <span \n                          className=\"text-sm text-gray-500\"\n                          data-testid={`nail-service-duration-${index}`}\n                        >\n                          {service.duration}\n                        </span>\n                      </div>\n                      <span \n                        className=\"text-primary font-semibold text-lg\"\n                        data-testid={`nail-service-price-${index}`}\n                      >\n                        {service.price}\n                      </span>\n                    </div>\n                    <p \n                      className=\"text-gray-600 mb-6 leading-relaxed\"\n                      data-testid={`nail-service-description-${index}`}\n                    >\n                      {service.description}\n                    </p>\n                    <div className=\"mb-6\">\n                      <h4 className=\"font-semibold text-text-dark mb-3\">Service Includes:</h4>\n                      <ul className=\"grid grid-cols-2 gap-2\">\n                        {service.features.map((feature, featureIndex) => (\n                          <li \n                            key={featureIndex}\n                            className=\"text-sm text-gray-600 flex items-center\"\n                            data-testid={`nail-service-feature-${index}-${featureIndex}`}\n                          >\n                            <span className=\"w-2 h-2 bg-primary rounded-full mr-3 flex-shrink-0\"></span>\n                            {feature}\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n                    <Link href=\"/booking\">\n                      <Button \n                        className=\"w-full bg-primary text-white hover:bg-secondary\"\n                        data-testid={`nail-service-book-${index}`}\n                      >\n                        Book Service\n                      </Button>\n                    </Link>\n                  </div>\n                </div>\n              </ScrollReveal>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Nail Art Gallery */}\n      <section className=\"py-24 bg-bg-light\" data-testid=\"nail-art-gallery\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <ScrollReveal>\n            <div className=\"text-center mb-16\">\n              <span className=\"text-primary font-semibold text-sm tracking-wider uppercase mb-4 block\">\n                Nail Art Gallery\n              </span>\n              <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6 text-text-dark\" data-testid=\"gallery-title\">\n                Creative Nail Designs\n              </h2>\n              <p className=\"text-gray-600 text-lg max-w-3xl mx-auto\" data-testid=\"gallery-description\">\n                Explore our stunning collection of nail art designs, from subtle elegance to bold statements\n              </p>\n            </div>\n          </ScrollReveal>\n\n          <div className=\"grid md:grid-cols-4 gap-6\">\n            {nailArtGallery.map((item, index) => (\n              <ScrollReveal key={item.design} delay={index * 100}>\n                <div \n                  className=\"bg-white rounded-2xl overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300 group\"\n                  data-testid={`nail-art-${index}`}\n                >\n                  <div className=\"img-zoom-container h-64\">\n                    <img \n                      src={item.image} \n                      alt={item.design}\n                      className=\"img-zoom w-full h-full object-cover\"\n                      data-testid={`nail-art-image-${index}`}\n                    />\n                  </div>\n                  <div className=\"p-6 text-center\">\n                    <h3 \n                      className=\"text-lg font-playfair font-bold text-text-dark group-hover:text-primary transition-colors\"\n                      data-testid={`nail-art-title-${index}`}\n                    >\n                      {item.design}\n                    </h3>\n                  </div>\n                </div>\n              </ScrollReveal>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Hygiene Promise */}\n      <section className=\"py-24 bg-white\" data-testid=\"nail-hygiene\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid lg:grid-cols-2 gap-16 items-center\">\n            <ScrollReveal>\n              <div>\n                <span className=\"text-primary font-semibold text-sm tracking-wider uppercase mb-4 block\">\n                  Safety First\n                </span>\n                <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-8 text-text-dark\" data-testid=\"hygiene-title\">\n                  Our Hygiene Promise\n                </h2>\n                <p className=\"text-gray-600 text-lg mb-8 leading-relaxed\" data-testid=\"hygiene-description\">\n                  Your safety and health are our top priorities. We maintain the highest standards of cleanliness and sterilization for all our nail services.\n                </p>\n                <div className=\"space-y-6\">\n                  {[\n                    {\n                      icon: <Shield className=\"text-primary\" />,\n                      title: 'Sterilized Tools',\n                      description: 'All tools are professionally sterilized using hospital-grade autoclaves.',\n                    },\n                    {\n                      icon: <Star className=\"text-gold\" />,\n                      title: 'Premium Products',\n                      description: 'We use only high-quality, non-toxic polishes and treatments.',\n                    },\n                    {\n                      icon: <Palette className=\"text-secondary\" />,\n                      title: 'Fresh Supplies',\n                      description: 'New files, buffers, and disposable items for every client.',\n                    },\n                  ].map((item, index) => (\n                    <div \n                      key={item.title}\n                      className=\"flex items-start space-x-4\"\n                      data-testid={`hygiene-item-${index}`}\n                    >\n                      <div className=\"w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center flex-shrink-0\">\n                        {item.icon}\n                      </div>\n                      <div>\n                        <h3 \n                          className=\"text-xl font-playfair font-bold mb-2 text-text-dark\"\n                          data-testid={`hygiene-item-title-${index}`}\n                        >\n                          {item.title}\n                        </h3>\n                        <p \n                          className=\"text-gray-600 leading-relaxed\"\n                          data-testid={`hygiene-item-description-${index}`}\n                        >\n                          {item.description}\n                        </p>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </ScrollReveal>\n\n            <ScrollReveal delay={200}>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"space-y-4\">\n                  <div className=\"img-zoom-container rounded-2xl overflow-hidden\">\n                    <img \n                      src=\"https://images.unsplash.com/photo-1604654894610-df63bc536371?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\" \n                      alt=\"Clean nail station\"\n                      className=\"img-zoom w-full h-48 object-cover\"\n                    />\n                  </div>\n                  <div className=\"img-zoom-container rounded-2xl overflow-hidden\">\n                    <img \n                      src=\"https://images.unsplash.com/photo-1610992015732-2449b76344bc?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h-400\" \n                      alt=\"Sterilized tools\"\n                      className=\"img-zoom w-full h-64 object-cover\"\n                    />\n                  </div>\n                </div>\n                <div className=\"space-y-4 pt-8\">\n                  <div className=\"img-zoom-container rounded-2xl overflow-hidden\">\n                    <img \n                      src=\"https://images.unsplash.com/photo-1632345031435-8727f6897d53?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400\" \n                      alt=\"Premium nail products\"\n                      className=\"img-zoom w-full h-64 object-cover\"\n                    />\n                  </div>\n                  <div className=\"img-zoom-container rounded-2xl overflow-hidden\">\n                    <img \n                      src=\"https://images.unsplash.com/photo-1604654894610-df63bc536371?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\" \n                      alt=\"Clean workspace\"\n                      className=\"img-zoom w-full h-48 object-cover\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </ScrollReveal>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-24 bg-accent text-white\" data-testid=\"nail-cta\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <ScrollReveal>\n            <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6\" data-testid=\"nail-cta-title\">\n              Book Nail Appointment\n            </h2>\n            <p className=\"text-xl mb-10 text-gray-100 max-w-3xl mx-auto\" data-testid=\"nail-cta-description\">\n              Ready for perfect nails? Choose from our range of services and let our experts create the look you love\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center items-center\">\n              <Link href=\"/booking\">\n                <Button \n                  className=\"bg-white text-accent px-10 py-4 rounded-full font-semibold text-lg hover:bg-gold hover:text-white transition-all duration-300 shadow-xl\"\n                  data-testid=\"nail-appointment-button\"\n                >\n                  Book Now\n                </Button>\n              </Link>\n              <Link href=\"/gallery\" className=\"inline-flex items-center text-white font-semibold text-lg hover:text-gold transition-colors\">\n                View More Designs <ArrowRight className=\"ml-2 w-5 h-5\" />\n              </Link>\n            </div>\n          </ScrollReveal>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Nails;\n","size_bytes":16697},"client/src/pages/services/Skin.tsx":{"content":"import { Link } from 'wouter';\nimport { ArrowRight, Sparkles, Shield, Sun, Zap } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport ScrollReveal from '@/components/ui/ScrollReveal';\n\nconst Skin = () => {\n  const services = [\n    {\n      title: 'HydraFacial',\n      description: 'Advanced multi-step facial treatment that cleanses, exfoliates, and hydrates for instant results.',\n      features: ['Deep Cleansing', 'Gentle Exfoliation', 'Hydration Infusion', 'LED Light Therapy'],\n      image: 'https://images.unsplash.com/photo-1570172619644-dfd03ed5d881?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n      price: 'From ₹4,500',\n      duration: '60 min',\n    },\n    {\n      title: 'Anti-Aging Facial',\n      description: 'Targeted treatment using peptides and antioxidants to reduce fine lines and boost collagen.',\n      features: ['Peptide Infusion', 'Collagen Boost', 'Fine Line Reduction', 'Firming Massage'],\n      image: 'https://images.unsplash.com/photo-1515377905703-c4788e51af15?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n      price: 'From ₹6,000',\n      duration: '75 min',\n    },\n    {\n      title: 'Acne Treatment',\n      description: 'Comprehensive acne solution with deep cleansing, extraction, and healing therapy.',\n      features: ['Deep Pore Cleansing', 'Safe Extractions', 'Antibacterial Treatment', 'Healing Mask'],\n      image: 'https://images.unsplash.com/photo-1616394584738-fc6e612e71b9?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n      price: 'From ₹3,500',\n      duration: '90 min',\n    },\n    {\n      title: 'Brightening Facial',\n      description: 'Vitamin C enriched treatment to reduce pigmentation and achieve a radiant glow.',\n      features: ['Vitamin C Infusion', 'Pigmentation Reduction', 'Brightening Serum', 'Glow Enhancement'],\n      image: 'https://images.unsplash.com/photo-1487412947147-5cebf100ffc2?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n      price: 'From ₹4,000',\n      duration: '60 min',\n    },\n  ];\n\n  const skinConcerns = [\n    {\n      concern: 'Aging & Fine Lines',\n      solution: 'Anti-aging facials with peptides and retinol therapy',\n      icon: <Shield className=\"text-secondary\" />,\n    },\n    {\n      concern: 'Acne & Breakouts',\n      solution: 'Deep cleansing treatments with antibacterial therapy',\n      icon: <Zap className=\"text-accent\" />,\n    },\n    {\n      concern: 'Pigmentation',\n      solution: 'Brightening treatments with vitamin C and kojic acid',\n      icon: <Sun className=\"text-gold\" />,\n    },\n    {\n      concern: 'Dull Skin',\n      solution: 'Hydrating facials with hyaluronic acid and exfoliation',\n      icon: <Sparkles className=\"text-primary\" />,\n    },\n  ];\n\n  return (\n    <div className=\"min-h-screen pt-20\" data-testid=\"skin-services-page\">\n      {/* Hero Section */}\n      <section \n        className=\"relative py-32 flex items-center justify-center overflow-hidden parallax\"\n        style={{\n          backgroundImage: 'url(https://images.unsplash.com/photo-1570172619644-dfd03ed5d881?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&h=1080)'\n        }}\n        data-testid=\"skin-hero\"\n      >\n        <div className=\"hero-gradient absolute inset-0\"></div>\n        <div className=\"relative z-10 text-center text-white px-4 max-w-4xl mx-auto\">\n          <ScrollReveal>\n            <div className=\"mb-6\">\n              <Sparkles className=\"text-6xl text-gold mx-auto mb-4\" />\n            </div>\n            <h1 className=\"text-5xl md:text-6xl font-playfair font-bold mb-6\" data-testid=\"skin-hero-title\">\n              Glow that Speaks for You\n            </h1>\n            <p className=\"text-xl text-gray-100 max-w-2xl mx-auto mb-8\" data-testid=\"skin-hero-description\">\n              Advanced skincare treatments for healthy, radiant, and youthful-looking skin\n            </p>\n            <Link href=\"/booking\">\n              <Button className=\"btn-gradient text-lg px-8 py-4\" data-testid=\"skin-book-button\">\n                <span>Book Skin Treatment</span>\n              </Button>\n            </Link>\n          </ScrollReveal>\n        </div>\n      </section>\n\n      {/* Services Grid */}\n      <section className=\"py-24 bg-white\" data-testid=\"skin-services-grid\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <ScrollReveal>\n            <div className=\"text-center mb-16\">\n              <span className=\"text-primary font-semibold text-sm tracking-wider uppercase mb-4 block\">\n                Skin Treatments\n              </span>\n              <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6 text-text-dark\" data-testid=\"services-title\">\n                Advanced Facial Therapies\n              </h2>\n              <p className=\"text-gray-600 text-lg max-w-3xl mx-auto\" data-testid=\"services-description\">\n                Experience cutting-edge skincare technology combined with luxurious spa treatments\n              </p>\n            </div>\n          </ScrollReveal>\n\n          <div className=\"grid md:grid-cols-2 gap-8\">\n            {services.map((service, index) => (\n              <ScrollReveal key={service.title} delay={index * 100}>\n                <div \n                  className=\"bg-bg-light rounded-2xl overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300\"\n                  data-testid={`skin-service-${index}`}\n                >\n                  <div className=\"img-zoom-container h-64\">\n                    <img \n                      src={service.image} \n                      alt={service.title}\n                      className=\"img-zoom w-full h-full object-cover\"\n                      data-testid={`skin-service-image-${index}`}\n                    />\n                  </div>\n                  <div className=\"p-8\">\n                    <div className=\"flex justify-between items-start mb-4\">\n                      <div>\n                        <h3 \n                          className=\"text-2xl font-playfair font-bold text-text-dark mb-1\"\n                          data-testid={`skin-service-title-${index}`}\n                        >\n                          {service.title}\n                        </h3>\n                        <span \n                          className=\"text-sm text-gray-500\"\n                          data-testid={`skin-service-duration-${index}`}\n                        >\n                          {service.duration}\n                        </span>\n                      </div>\n                      <span \n                        className=\"text-primary font-semibold text-lg\"\n                        data-testid={`skin-service-price-${index}`}\n                      >\n                        {service.price}\n                      </span>\n                    </div>\n                    <p \n                      className=\"text-gray-600 mb-6 leading-relaxed\"\n                      data-testid={`skin-service-description-${index}`}\n                    >\n                      {service.description}\n                    </p>\n                    <div className=\"mb-6\">\n                      <h4 className=\"font-semibold text-text-dark mb-3\">Treatment Includes:</h4>\n                      <ul className=\"grid grid-cols-2 gap-2\">\n                        {service.features.map((feature, featureIndex) => (\n                          <li \n                            key={featureIndex}\n                            className=\"text-sm text-gray-600 flex items-center\"\n                            data-testid={`skin-service-feature-${index}-${featureIndex}`}\n                          >\n                            <span className=\"w-2 h-2 bg-primary rounded-full mr-3 flex-shrink-0\"></span>\n                            {feature}\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n                    <Link href=\"/booking\">\n                      <Button \n                        className=\"w-full bg-primary text-white hover:bg-secondary\"\n                        data-testid={`skin-service-book-${index}`}\n                      >\n                        Book Treatment\n                      </Button>\n                    </Link>\n                  </div>\n                </div>\n              </ScrollReveal>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Skin Concerns & Solutions */}\n      <section className=\"py-24 bg-bg-light\" data-testid=\"skin-concerns\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <ScrollReveal>\n            <div className=\"text-center mb-16\">\n              <span className=\"text-primary font-semibold text-sm tracking-wider uppercase mb-4 block\">\n                Skin Solutions\n              </span>\n              <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6 text-text-dark\" data-testid=\"concerns-title\">\n                Targeted Skin Solutions\n              </h2>\n              <p className=\"text-gray-600 text-lg max-w-3xl mx-auto\" data-testid=\"concerns-description\">\n                Every skin concern has a solution. Our experts customize treatments for your specific needs.\n              </p>\n            </div>\n          </ScrollReveal>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {skinConcerns.map((item, index) => (\n              <ScrollReveal key={item.concern} delay={index * 100}>\n                <div \n                  className=\"bg-white rounded-2xl p-6 text-center shadow-lg hover:shadow-xl transition-all duration-300\"\n                  data-testid={`skin-concern-${index}`}\n                >\n                  <div className=\"w-16 h-16 mx-auto mb-4 bg-gray-50 rounded-full flex items-center justify-center\">\n                    {item.icon}\n                  </div>\n                  <h3 \n                    className=\"text-xl font-playfair font-bold mb-3 text-text-dark\"\n                    data-testid={`skin-concern-title-${index}`}\n                  >\n                    {item.concern}\n                  </h3>\n                  <p \n                    className=\"text-gray-600 text-sm leading-relaxed\"\n                    data-testid={`skin-concern-solution-${index}`}\n                  >\n                    {item.solution}\n                  </p>\n                </div>\n              </ScrollReveal>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Skincare Consultation */}\n      <section className=\"py-24 bg-white\" data-testid=\"skin-consultation\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid lg:grid-cols-2 gap-16 items-center\">\n            <ScrollReveal>\n              <div>\n                <span className=\"text-primary font-semibold text-sm tracking-wider uppercase mb-4 block\">\n                  Personalized Care\n                </span>\n                <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-8 text-text-dark\" data-testid=\"consultation-title\">\n                  Skincare Consultation\n                </h2>\n                <p className=\"text-gray-600 text-lg mb-8 leading-relaxed\" data-testid=\"consultation-description\">\n                  Our skin experts analyze your skin type, concerns, and lifestyle to create a personalized treatment plan that delivers real results.\n                </p>\n                <div className=\"space-y-4 mb-8\">\n                  {[\n                    'Comprehensive skin analysis',\n                    'Customized treatment recommendations',\n                    'Home care routine guidance',\n                    'Progress tracking and adjustments',\n                  ].map((benefit, index) => (\n                    <div \n                      key={index}\n                      className=\"flex items-center\"\n                      data-testid={`consultation-benefit-${index}`}\n                    >\n                      <span className=\"w-2 h-2 bg-primary rounded-full mr-4\"></span>\n                      <span className=\"text-gray-600\">{benefit}</span>\n                    </div>\n                  ))}\n                </div>\n                <Link href=\"/booking\">\n                  <Button className=\"bg-primary text-white hover:bg-secondary px-8 py-4\" data-testid=\"consultation-book-button\">\n                    Book Free Consultation\n                  </Button>\n                </Link>\n              </div>\n            </ScrollReveal>\n\n            <ScrollReveal delay={200}>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"space-y-4\">\n                  <div className=\"img-zoom-container rounded-2xl overflow-hidden\">\n                    <img \n                      src=\"https://images.unsplash.com/photo-1616394584738-fc6e612e71b9?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\" \n                      alt=\"Skin analysis\"\n                      className=\"img-zoom w-full h-48 object-cover\"\n                    />\n                  </div>\n                  <div className=\"img-zoom-container rounded-2xl overflow-hidden\">\n                    <img \n                      src=\"https://images.unsplash.com/photo-1570172619644-dfd03ed5d881?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400\" \n                      alt=\"Facial treatment\"\n                      className=\"img-zoom w-full h-64 object-cover\"\n                    />\n                  </div>\n                </div>\n                <div className=\"space-y-4 pt-8\">\n                  <div className=\"img-zoom-container rounded-2xl overflow-hidden\">\n                    <img \n                      src=\"https://images.unsplash.com/photo-1515377905703-c4788e51af15?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400\" \n                      alt=\"Glowing skin\"\n                      className=\"img-zoom w-full h-64 object-cover\"\n                    />\n                  </div>\n                  <div className=\"img-zoom-container rounded-2xl overflow-hidden\">\n                    <img \n                      src=\"https://images.unsplash.com/photo-1487412947147-5cebf100ffc2?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\" \n                      alt=\"Skincare products\"\n                      className=\"img-zoom w-full h-48 object-cover\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </ScrollReveal>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-24 bg-secondary text-white\" data-testid=\"skin-cta\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <ScrollReveal>\n            <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6\" data-testid=\"skin-cta-title\">\n              Let Your Skin Shine Naturally\n            </h2>\n            <p className=\"text-xl mb-10 text-gray-100 max-w-3xl mx-auto\" data-testid=\"skin-cta-description\">\n              Ready to transform your skin? Book a personalized consultation and discover the perfect treatment for you\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center items-center\">\n              <Link href=\"/booking\">\n                <Button \n                  className=\"bg-white text-primary px-10 py-4 rounded-full font-semibold text-lg hover:bg-gold hover:text-white transition-all duration-300 shadow-xl\"\n                  data-testid=\"skin-treatment-button\"\n                >\n                  Book Skin Treatment\n                </Button>\n              </Link>\n              <Link href=\"/contact\" className=\"inline-flex items-center text-white font-semibold text-lg hover:text-gold transition-colors\">\n                Call for Expert Advice <ArrowRight className=\"ml-2 w-5 h-5\" />\n              </Link>\n            </div>\n          </ScrollReveal>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Skin;\n","size_bytes":15772},"client/src/pages/services/Spa.tsx":{"content":"import { Link } from 'wouter';\nimport { ArrowRight, Leaf, Waves, Zap, Heart } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport ScrollReveal from '@/components/ui/ScrollReveal';\n\nconst Spa = () => {\n  const services = [\n    {\n      title: 'Aromatherapy Massage',\n      description: 'Full body relaxation with essential oils to rejuvenate mind, body and soul.',\n      features: ['Essential Oil Selection', 'Full Body Massage', 'Scalp Treatment', 'Meditation Music'],\n      image: 'https://images.unsplash.com/photo-1544161515-4ab6ce6db874?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n      price: 'From ₹3,500',\n      duration: '90 min',\n    },\n    {\n      title: 'Hot Stone Therapy',\n      description: 'Ancient healing technique using heated stones to relieve muscle tension.',\n      features: ['Heated Basalt Stones', 'Deep Muscle Relief', 'Stress Reduction', 'Energy Balance'],\n      image: 'https://images.unsplash.com/photo-1540555700478-4be289fbecef?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n      price: 'From ₹4,500',\n      duration: '120 min',\n    },\n    {\n      title: 'Body Detox Wrap',\n      description: 'Purifying body wrap treatment to eliminate toxins and nourish skin.',\n      features: ['Clay & Seaweed Wrap', 'Toxin Elimination', 'Skin Nourishment', 'Hydration Boost'],\n      image: 'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n      price: 'From ₹4,000',\n      duration: '75 min',\n    },\n    {\n      title: 'Couples Spa Package',\n      description: 'Romantic spa experience designed for two with synchronized treatments.',\n      features: ['Side-by-Side Massage', 'Champagne Service', 'Private Suite', 'Extended Time'],\n      image: 'https://images.unsplash.com/photo-1582139329536-e7284fece509?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600',\n      price: 'From ₹8,000',\n      duration: '150 min',\n    },\n  ];\n\n  const spaFeatures = [\n    {\n      icon: <Leaf className=\"text-primary\" />,\n      title: 'Natural Ingredients',\n      description: 'Organic oils, herbs, and botanicals sourced from nature.',\n    },\n    {\n      icon: <Waves className=\"text-secondary\" />,\n      title: 'Tranquil Environment',\n      description: 'Peaceful ambiance with soft music and aromatherapy.',\n    },\n    {\n      icon: <Zap className=\"text-accent\" />,\n      title: 'Energy Healing',\n      description: 'Holistic treatments that restore your natural energy.',\n    },\n    {\n      icon: <Heart className=\"text-gold\" />,\n      title: 'Wellness Focus',\n      description: 'Complete mind-body wellness for lasting rejuvenation.',\n    },\n  ];\n\n  return (\n    <div className=\"min-h-screen pt-20\" data-testid=\"spa-services-page\">\n      {/* Hero Section */}\n      <section \n        className=\"relative py-32 flex items-center justify-center overflow-hidden parallax\"\n        style={{\n          backgroundImage: 'url(https://images.unsplash.com/photo-1544161515-4ab6ce6db874?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&h=1080)'\n        }}\n        data-testid=\"spa-hero\"\n      >\n        <div className=\"hero-gradient absolute inset-0\"></div>\n        <div className=\"relative z-10 text-center text-white px-4 max-w-4xl mx-auto\">\n          <ScrollReveal>\n            <div className=\"mb-6\">\n              <Leaf className=\"text-6xl text-gold mx-auto mb-4\" />\n            </div>\n            <h1 className=\"text-5xl md:text-6xl font-playfair font-bold mb-6\" data-testid=\"spa-hero-title\">\n              Relax. Refresh. Rejuvenate.\n            </h1>\n            <p className=\"text-xl text-gray-100 max-w-2xl mx-auto mb-8\" data-testid=\"spa-hero-description\">\n              Escape to our tranquil sanctuary and experience the ultimate in relaxation and wellness\n            </p>\n            <Link href=\"/booking\">\n              <Button className=\"btn-gradient text-lg px-8 py-4\" data-testid=\"spa-book-button\">\n                <span>Book Spa Treatment</span>\n              </Button>\n            </Link>\n          </ScrollReveal>\n        </div>\n      </section>\n\n      {/* Services Grid */}\n      <section className=\"py-24 bg-white\" data-testid=\"spa-services-grid\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <ScrollReveal>\n            <div className=\"text-center mb-16\">\n              <span className=\"text-primary font-semibold text-sm tracking-wider uppercase mb-4 block\">\n                Spa Treatments\n              </span>\n              <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6 text-text-dark\" data-testid=\"services-title\">\n                Wellness & Relaxation\n              </h2>\n              <p className=\"text-gray-600 text-lg max-w-3xl mx-auto\" data-testid=\"services-description\">\n                Immerse yourself in our world of tranquility with treatments designed to restore harmony\n              </p>\n            </div>\n          </ScrollReveal>\n\n          <div className=\"grid md:grid-cols-2 gap-8\">\n            {services.map((service, index) => (\n              <ScrollReveal key={service.title} delay={index * 100}>\n                <div \n                  className=\"bg-bg-light rounded-2xl overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300\"\n                  data-testid={`spa-service-${index}`}\n                >\n                  <div className=\"img-zoom-container h-64\">\n                    <img \n                      src={service.image} \n                      alt={service.title}\n                      className=\"img-zoom w-full h-full object-cover\"\n                      data-testid={`spa-service-image-${index}`}\n                    />\n                  </div>\n                  <div className=\"p-8\">\n                    <div className=\"flex justify-between items-start mb-4\">\n                      <div>\n                        <h3 \n                          className=\"text-2xl font-playfair font-bold text-text-dark mb-1\"\n                          data-testid={`spa-service-title-${index}`}\n                        >\n                          {service.title}\n                        </h3>\n                        <span \n                          className=\"text-sm text-gray-500\"\n                          data-testid={`spa-service-duration-${index}`}\n                        >\n                          {service.duration}\n                        </span>\n                      </div>\n                      <span \n                        className=\"text-primary font-semibold text-lg\"\n                        data-testid={`spa-service-price-${index}`}\n                      >\n                        {service.price}\n                      </span>\n                    </div>\n                    <p \n                      className=\"text-gray-600 mb-6 leading-relaxed\"\n                      data-testid={`spa-service-description-${index}`}\n                    >\n                      {service.description}\n                    </p>\n                    <div className=\"mb-6\">\n                      <h4 className=\"font-semibold text-text-dark mb-3\">Experience Includes:</h4>\n                      <ul className=\"grid grid-cols-2 gap-2\">\n                        {service.features.map((feature, featureIndex) => (\n                          <li \n                            key={featureIndex}\n                            className=\"text-sm text-gray-600 flex items-center\"\n                            data-testid={`spa-service-feature-${index}-${featureIndex}`}\n                          >\n                            <span className=\"w-2 h-2 bg-primary rounded-full mr-3 flex-shrink-0\"></span>\n                            {feature}\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n                    <Link href=\"/booking\">\n                      <Button \n                        className=\"w-full bg-primary text-white hover:bg-secondary\"\n                        data-testid={`spa-service-book-${index}`}\n                      >\n                        Book Experience\n                      </Button>\n                    </Link>\n                  </div>\n                </div>\n              </ScrollReveal>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Spa Features */}\n      <section className=\"py-24 bg-bg-light\" data-testid=\"spa-features\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <ScrollReveal>\n            <div className=\"text-center mb-16\">\n              <span className=\"text-primary font-semibold text-sm tracking-wider uppercase mb-4 block\">\n                Spa Experience\n              </span>\n              <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6 text-text-dark\" data-testid=\"features-title\">\n                What Makes Us Special\n              </h2>\n              <p className=\"text-gray-600 text-lg max-w-3xl mx-auto\" data-testid=\"features-description\">\n                Our spa combines ancient wisdom with modern luxury to create truly transformative experiences\n              </p>\n            </div>\n          </ScrollReveal>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {spaFeatures.map((feature, index) => (\n              <ScrollReveal key={feature.title} delay={index * 100}>\n                <div \n                  className=\"bg-white rounded-2xl p-8 text-center shadow-lg hover:shadow-xl transition-all duration-300\"\n                  data-testid={`spa-feature-${index}`}\n                >\n                  <div className=\"w-16 h-16 mx-auto mb-6 bg-gray-50 rounded-full flex items-center justify-center\">\n                    {feature.icon}\n                  </div>\n                  <h3 \n                    className=\"text-xl font-playfair font-bold mb-4 text-text-dark\"\n                    data-testid={`spa-feature-title-${index}`}\n                  >\n                    {feature.title}\n                  </h3>\n                  <p \n                    className=\"text-gray-600 leading-relaxed\"\n                    data-testid={`spa-feature-description-${index}`}\n                  >\n                    {feature.description}\n                  </p>\n                </div>\n              </ScrollReveal>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Spa Ambiance Gallery */}\n      <section className=\"py-24 bg-white\" data-testid=\"spa-ambiance\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <ScrollReveal>\n            <div className=\"text-center mb-16\">\n              <span className=\"text-primary font-semibold text-sm tracking-wider uppercase mb-4 block\">\n                Our Sanctuary\n              </span>\n              <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6 text-text-dark\" data-testid=\"ambiance-title\">\n                Spa Ambiance\n              </h2>\n              <p className=\"text-gray-600 text-lg max-w-3xl mx-auto\" data-testid=\"ambiance-description\">\n                Step into our peaceful oasis designed to transport you to a world of serenity and calm\n              </p>\n            </div>\n          </ScrollReveal>\n\n          <div className=\"grid md:grid-cols-3 gap-6\">\n            {[\n              {\n                image: 'https://images.unsplash.com/photo-1540555700478-4be289fbecef?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400',\n                title: 'Treatment Rooms',\n                description: 'Private, serene spaces for ultimate relaxation',\n              },\n              {\n                image: 'https://images.unsplash.com/photo-1544161515-4ab6ce6db874?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400',\n                title: 'Meditation Area',\n                description: 'Quiet space for mindfulness and reflection',\n              },\n              {\n                image: 'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400',\n                title: 'Relaxation Lounge',\n                description: 'Comfortable area to unwind before and after treatments',\n              },\n            ].map((space, index) => (\n              <ScrollReveal key={space.title} delay={index * 100}>\n                <div \n                  className=\"bg-bg-light rounded-2xl overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300\"\n                  data-testid={`spa-space-${index}`}\n                >\n                  <div className=\"img-zoom-container h-64\">\n                    <img \n                      src={space.image} \n                      alt={space.title}\n                      className=\"img-zoom w-full h-full object-cover\"\n                      data-testid={`spa-space-image-${index}`}\n                    />\n                  </div>\n                  <div className=\"p-6\">\n                    <h3 \n                      className=\"text-xl font-playfair font-bold mb-2 text-text-dark\"\n                      data-testid={`spa-space-title-${index}`}\n                    >\n                      {space.title}\n                    </h3>\n                    <p \n                      className=\"text-gray-600\"\n                      data-testid={`spa-space-description-${index}`}\n                    >\n                      {space.description}\n                    </p>\n                  </div>\n                </div>\n              </ScrollReveal>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Wellness Tips */}\n      <section className=\"py-24 bg-primary text-white\" data-testid=\"wellness-tips\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid lg:grid-cols-2 gap-16 items-center\">\n            <ScrollReveal>\n              <div>\n                <span className=\"text-gold font-semibold text-sm tracking-wider uppercase mb-4 block\">\n                  Wellness Guide\n                </span>\n                <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-8\" data-testid=\"wellness-title\">\n                  Daily Wellness Tips\n                </h2>\n                <p className=\"text-gray-100 text-lg mb-8 leading-relaxed\" data-testid=\"wellness-description\">\n                  Extend your spa experience at home with these simple wellness practices that nurture your mind, body, and spirit.\n                </p>\n                <div className=\"space-y-6\">\n                  {[\n                    'Start your day with 5 minutes of deep breathing',\n                    'Create a calming bedtime routine with essential oils',\n                    'Practice gratitude and mindfulness daily',\n                    'Stay hydrated and nourish your body with wholesome foods',\n                  ].map((tip, index) => (\n                    <div \n                      key={index}\n                      className=\"flex items-center\"\n                      data-testid={`wellness-tip-${index}`}\n                    >\n                      <span className=\"w-2 h-2 bg-gold rounded-full mr-4\"></span>\n                      <span className=\"text-gray-100\">{tip}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </ScrollReveal>\n\n            <ScrollReveal delay={200}>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"space-y-4\">\n                  <div className=\"img-zoom-container rounded-2xl overflow-hidden\">\n                    <img \n                      src=\"https://images.unsplash.com/photo-1544161515-4ab6ce6db874?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\" \n                      alt=\"Meditation\"\n                      className=\"img-zoom w-full h-48 object-cover\"\n                    />\n                  </div>\n                  <div className=\"img-zoom-container rounded-2xl overflow-hidden\">\n                    <img \n                      src=\"https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400\" \n                      alt=\"Essential oils\"\n                      className=\"img-zoom w-full h-64 object-cover\"\n                    />\n                  </div>\n                </div>\n                <div className=\"space-y-4 pt-8\">\n                  <div className=\"img-zoom-container rounded-2xl overflow-hidden\">\n                    <img \n                      src=\"https://images.unsplash.com/photo-1540555700478-4be289fbecef?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400\" \n                      alt=\"Spa stones\"\n                      className=\"img-zoom w-full h-64 object-cover\"\n                    />\n                  </div>\n                  <div className=\"img-zoom-container rounded-2xl overflow-hidden\">\n                    <img \n                      src=\"https://images.unsplash.com/photo-1582139329536-e7284fece509?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\" \n                      alt=\"Relaxation\"\n                      className=\"img-zoom w-full h-48 object-cover\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </ScrollReveal>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-24 bg-white\" data-testid=\"spa-cta\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <ScrollReveal>\n            <h2 className=\"text-4xl md:text-5xl font-playfair font-bold mb-6 text-text-dark\" data-testid=\"spa-cta-title\">\n              Schedule a Relaxation Session\n            </h2>\n            <p className=\"text-xl mb-10 text-gray-600 max-w-3xl mx-auto\" data-testid=\"spa-cta-description\">\n              Treat yourself to the ultimate spa experience and discover the peace you deserve\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center items-center\">\n              <Link href=\"/booking\">\n                <Button \n                  className=\"bg-primary text-white px-10 py-4 rounded-full font-semibold text-lg hover:bg-secondary transition-all duration-300 shadow-xl\"\n                  data-testid=\"spa-relaxation-button\"\n                >\n                  Book Spa Session\n                </Button>\n              </Link>\n              <Link href=\"/contact\" className=\"inline-flex items-center text-primary font-semibold text-lg hover:text-secondary transition-colors\">\n                Create Custom Package <ArrowRight className=\"ml-2 w-5 h-5\" />\n              </Link>\n            </div>\n          </ScrollReveal>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Spa;\n","size_bytes":18518}},"version":1}